{
    "client": {
        "ach_add": {
            "method": "client.ach_add",
            "title": "Add a New Bank Account",
            "description": "This method is used to add a new bank account to a client's account.",
            "params": [
                {
                    "param": "user_login",
                    "name": "Client Login",
                    "required": true,
                    "default": null,
                    "description": "Client's login name or ID"
                },
                {
                    "param": "ach_acct",
                    "name": "Account Number",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ach_aba",
                    "name": "Routing Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ach_type",
                    "name": "Account Type",
                    "required": false,
                    "default": null,
                    "description": "C = Checking\nS = Savings"
                },
                {
                    "param": "ach_bank",
                    "name": "Bank Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fname",
                    "name": "First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "lname",
                    "name": "Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "company",
                    "name": "Company Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "address",
                    "name": "Street Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "city",
                    "name": "City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "state",
                    "name": "State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "zip",
                    "name": "ZIP or Postal Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "country",
                    "name": "Country",
                    "required": false,
                    "default": null,
                    "description": "ISO 2-character country code"
                },
                {
                    "param": "phone",
                    "name": "Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "email",
                    "name": "Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "set_default",
                    "name": "Set as default",
                    "required": false,
                    "default": null,
                    "description": "Value of 1 sets this as default billing method.)"
                }
            ]
        },
        "ach_delete": {
            "method": "client.ach_delete",
            "title": "Delete a Bank Account",
            "description": "This method is used to delete a bank account already on file.",
            "params": [
                {
                    "param": "billing_info_id",
                    "name": "Bank Account ID",
                    "required": true,
                    "default": null,
                    "description": "Account to delete."
                },
                {
                    "param": "source",
                    "name": "Source",
                    "required": false,
                    "default": null,
                    "description": "Source of deletion request. This shows who initiated the deletion of this bank account."
                }
            ]
        },
        "ach_update": {
            "method": "client.ach_update",
            "title": "Update a Bank Account",
            "description": "This method is used to update a bank account already on file.",
            "params": [
                {
                    "param": "billing_info_id",
                    "name": "Bank Account ID",
                    "required": true,
                    "default": null,
                    "description": "Account to update."
                },
                {
                    "param": "ach_acct",
                    "name": "Account Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ach_aba",
                    "name": "Routing Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ach_type",
                    "name": "Account Type",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ach_bank",
                    "name": "Bank Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fname",
                    "name": "First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "lname",
                    "name": "Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "company",
                    "name": "Company Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "address",
                    "name": "Street Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "city",
                    "name": "City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "state",
                    "name": "State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "zip",
                    "name": "ZIP or Postal Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "country",
                    "name": "Country",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "phone",
                    "name": "Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "email",
                    "name": "Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "set_default",
                    "name": "Set as default",
                    "required": false,
                    "default": null,
                    "description": "Value of 1 sets this as default billing method.)"
                }
            ]
        },
        "add": {
            "method": "client.add",
            "title": "Add a New Client",
            "description": "This method is used to add a new client to the system.",
            "params": [
                {
                    "param": "first",
                    "name": "First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "last",
                    "name": "Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "company",
                    "name": "Company",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "email",
                    "name": "Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "address",
                    "name": "Street Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "city",
                    "name": "City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "state",
                    "name": "State/Province",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "zip",
                    "name": "Zip/Postcode",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "country",
                    "name": "Country",
                    "required": false,
                    "default": null,
                    "description": "ISO 2-character country code"
                },
                {
                    "param": "phone",
                    "name": "Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fax",
                    "name": "Fax Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "login_enabled",
                    "name": "Enable Login",
                    "required": false,
                    "default": 1,
                    "description": "This determines whether the client can log into the client interface."
                },
                {
                    "param": "uber_login",
                    "name": "Username",
                    "required": false,
                    "default": null,
                    "description": "This is the username that the client will use to log in. If not specified the client id may be used to log in."
                },
                {
                    "param": "uber_pass",
                    "name": "Password",
                    "required": false,
                    "default": null,
                    "description": "This is the password that the client will use to log in.\nIf not specified, the password will be automatically generated and emailed to the client or left blank, depending on the system settings."
                },
                {
                    "param": "grace_due",
                    "name": "Due Date Method",
                    "required": false,
                    "default": 0,
                    "description": "Method used to calculate invoice due date:\n0 = Grace Period (invoice is due 'datepay' days after generation)\n1 = Static Due Date (invoice is due on 'datedue' day of the month, only applicable to monthly invoicing)"
                },
                {
                    "param": "prebill_method",
                    "name": "Pre Bill Method",
                    "required": false,
                    "default": null,
                    "description": "Method used in conjunction with Pre Bill Days to determine how far in advance to bill for services. Acceptable values are: 0 - Do not pre bill, 1 - Pre bill up to <prebill_days> after Invoice Due Date, 2 - Pre bill up to <prebill_days> after Invoice Send Date."
                },
                {
                    "param": "prebill_days",
                    "name": "Pre Bill Days",
                    "required": false,
                    "default": null,
                    "description": "Number of days used in conjunction with Pre Bill Method to determine how far in advance to bill for services. A value of '0' will invoice up to, and including, either the Invoice Due Date (including any Grace Period) or Invoice Send Date as appropriate."
                },
                {
                    "param": "charge_days",
                    "name": "Charge Delay",
                    "required": false,
                    "default": "system_default",
                    "description": "The number of days the system should wait after generating an invoice before charging any credit cards."
                },
                {
                    "param": "datesend",
                    "name": "Invoice Send Date",
                    "required": false,
                    "default": "system_default",
                    "description": "Day of the month client will be invoiced (monthly invoicing only)."
                },
                {
                    "param": "datedue",
                    "name": "Invoice Due Date",
                    "required": false,
                    "default": "system_default",
                    "description": "Day of the month on which the invoice is due.\nIf datedue is less than or equal to datesend, the invoice will be due on that day of the following month."
                },
                {
                    "param": "datepay",
                    "name": "Grace Period",
                    "required": false,
                    "default": "system_default",
                    "description": "Number of days after which the invoice will be due."
                },
                {
                    "param": "discount",
                    "name": "Discount Level",
                    "required": false,
                    "default": 0,
                    "description": "The default discount level for the client, specified either as a dollar amount or a percentage (the default)."
                },
                {
                    "param": "discount_type",
                    "name": "Discount Type",
                    "required": false,
                    "default": 0,
                    "description": "The method for calculating the discount:\n0 = percentage\n1 = dollar value"
                },
                {
                    "param": "referred",
                    "name": "Referred By",
                    "required": false,
                    "default": null,
                    "description": "This field stores whoever may have referred the client."
                },
                {
                    "param": "active",
                    "name": "Client Status",
                    "required": false,
                    "default": 1,
                    "description": "1 = Client, 2 = Lead"
                },
                {
                    "param": "late_fee_scheme_id",
                    "name": "Late Fee Schedule",
                    "required": false,
                    "default": "system_default",
                    "description": "Late fee schedule"
                },
                {
                    "param": "apply_latefee_on_latefees",
                    "name": "Apply Late Fee On Late Fees",
                    "required": false,
                    "default": 0,
                    "description": "1= Yes, 0: No. Will be applied if the Late fee schedule is set"
                },
                {
                    "param": "default_renew",
                    "name": "Default Renew Date",
                    "required": false,
                    "default": null,
                    "description": "Default renew date for new services"
                },
                {
                    "param": "prorate_min_days",
                    "name": "Prorate Min. Days",
                    "required": false,
                    "default": null,
                    "description": "Minimum number of proratable days (inclusive)"
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": "system_default",
                    "description": "This variable takes the integer brand ID number that corresponds to the client's desired brand. The specific ID number can be obtained on the manage brands page inside the Ubersmith system. If not specified, the default class will be used."
                },
                {
                    "param": "retry_every",
                    "name": "Retry Interval",
                    "required": false,
                    "default": "system_default",
                    "description": "When a client's credit card is declined, the charge is stored in a queue and is retried at a later date. The number of days between retries is defined by this setting."
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": 1,
                    "description": "This variable takes the integer that corresponds to the desired level of priority given to a client's support tickets.\n0 = Low\n1 = Normal\n2 = High\n3 = 911"
                },
                {
                    "param": "access",
                    "name": "Access Settings",
                    "required": false,
                    "default": null,
                    "description": "The access settings for the client. This is an array containing the permissions for the client."
                },
                {
                    "param": "strict",
                    "name": "Strict Mode",
                    "required": false,
                    "default": 0,
                    "description": "This field is used to tell the API script whether or not the new client's Ubersmith login name must be unique.\nIf strict is set to 0 and the specified login name is already in use the client will be added to the system and the API script will return a note saying that their information must be updated inside the system.\nIf strict is set to 1, any duplicate login name will cause the script to return a failure as well as a note explaining why."
                },
                {
                    "param": "meta_*",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "auto_apply_credit",
                    "name": "Auto Apply Credit",
                    "required": false,
                    "default": null,
                    "description": "Automatically apply account credits"
                },
                {
                    "param": "vat_id",
                    "name": "VAT ID",
                    "required": false,
                    "default": null,
                    "description": "Tax Identification Number"
                }
            ]
        },
        "avatar_get": {
            "method": "client.avatar_get",
            "title": "Retrieve a Client Avatar",
            "description": "This method is used to retrieve a client or contact avatar.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "email",
                    "name": "Email",
                    "required": false,
                    "default": null,
                    "description": "Email address for Gravatar. This is only relevant when 'gravatar_fallback' is set to true."
                },
                {
                    "param": "size",
                    "name": "Size",
                    "required": false,
                    "default": null,
                    "description": "Specify 'small' to load a 25 pixel avatar; otherwise a 50 pixel avatar will be returned."
                },
                {
                    "param": "gravatar_fallback",
                    "name": "Gravatar Fallback",
                    "required": false,
                    "default": null,
                    "description": "Set to true in order to allow the return of a client's Gravatar when it is available."
                }
            ]
        },
        "avatar_set": {
            "method": "client.avatar_set",
            "title": "Set a Client Avatar",
            "description": "This method is used to set a client or contact avatar.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "avatar",
                    "name": "Attachment",
                    "required": false,
                    "default": null,
                    "description": "An image file for the avatar should be specified. When using cURL the value for the avatar parameter should be @<filename> where <filename> is the avatar you wish to attach."
                }
            ]
        },
        "ba_add": {
            "method": "client.ba_add",
            "title": "Add a New Billing agreement",
            "description": "This method is used to start a new Billing agreement creation process",
            "params": [
                {
                    "param": "gateway",
                    "name": "Gateway",
                    "required": true,
                    "default": null,
                    "description": "paypal"
                },
                {
                    "param": "client_id",
                    "name": "Client id",
                    "required": true,
                    "default": null,
                    "description": "The id of the client to add the agreement to"
                },
                {
                    "param": "return_url",
                    "name": "Return URL",
                    "required": true,
                    "default": null,
                    "description": "The url to return to when the user accepts the billing agreement creation"
                },
                {
                    "param": "cancel_url",
                    "name": "Cancel URL",
                    "required": true,
                    "default": null,
                    "description": "The url to return to when the user refuses the billing agreement creation"
                }
            ]
        },
        "ba_approve": {
            "method": "client.ba_approve",
            "title": "Approve a new Billing agreement",
            "description": "This method is used to finish a new Billing agreement creation process",
            "params": [
                {
                    "param": "billing_info_id",
                    "name": "Id of the billing agreement",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "ba_delete": {
            "method": "client.ba_delete",
            "title": "Delete a Billing agreement",
            "description": "This method is used to delete a Billing Agreement",
            "params": [
                {
                    "param": "billing_info_id",
                    "name": "Id of the billing agreement",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "ba_get": {
            "method": "client.ba_get",
            "title": "Get a Billing agreement's information",
            "description": "This method is used to fetch a Billing Agreement's information",
            "params": [
                {
                    "param": "billing_info_id",
                    "name": "Id of the billing agreement",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "ba_import": {
            "method": "client.ba_import",
            "title": "Import an existing Billing agreement",
            "description": "This method is used to import a Billing agreement",
            "params": [
                {
                    "param": "gateway",
                    "name": "Gateway",
                    "required": true,
                    "default": null,
                    "description": "paypal, worldpay"
                },
                {
                    "param": "client_id",
                    "name": "Client id",
                    "required": true,
                    "default": null,
                    "description": "The id of the client to add the agreement to"
                },
                {
                    "param": "agreement_id",
                    "name": "Agreement id",
                    "required": true,
                    "default": null,
                    "description": "The Agreement id from the gateway provider"
                },
                {
                    "param": "start_date",
                    "name": "Start date",
                    "required": false,
                    "default": null,
                    "description": "The date when the agreement starts"
                },
                {
                    "param": "end_date",
                    "name": "End date",
                    "required": false,
                    "default": null,
                    "description": "The date when the agreement ends"
                },
                {
                    "param": "overall_limit",
                    "name": "Overall limit",
                    "required": false,
                    "default": 0,
                    "description": "The maximum amount for all payment combined. Defaults to 0 for unlimited."
                },
                {
                    "param": "payment_limit",
                    "name": "Payment limit",
                    "required": false,
                    "default": 0,
                    "description": "The maximum amount per payment. Defaults to 0 for unlimited."
                }
            ]
        },
        "ba_list": {
            "method": "client.ba_list",
            "title": "List available Billing agreements",
            "description": "This method is used to list all available Billing Agreements",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client id",
                    "required": true,
                    "default": null,
                    "description": "The id of the client to list the agreement from"
                }
            ]
        },
        "billing_dispute_add": {
            "method": "client.billing_dispute_add",
            "title": "Add a new Billing Dispute",
            "description": "This method is used to add a billing dispute for an invoice.",
            "params": [
                {
                    "param": "invoice_id",
                    "name": "Invoice ID",
                    "required": true,
                    "default": null,
                    "description": "Invoice ID"
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": true,
                    "default": null,
                    "description": "Billing Dispute Description"
                },
                {
                    "param": "user_opened",
                    "name": "User ID",
                    "required": false,
                    "default": null,
                    "description": "Billing Dispute Opened by"
                }
            ]
        },
        "billing_dispute_get": {
            "method": "client.billing_dispute_get",
            "title": "Get a Billing Dispute",
            "description": "This method is used to get a billing dispute.",
            "params": [
                {
                    "param": "billing_dispute_id",
                    "name": "Billing Dispute ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "billing_dispute_list": {
            "method": "client.billing_dispute_list",
            "title": "List billing disputes associated with each invoice",
            "description": "This method is used to list an invoice's billing disputes.",
            "params": [
                {
                    "param": "invoice_id",
                    "name": "Invoice ID",
                    "required": true,
                    "default": null,
                    "description": "Invoice ID"
                },
                {
                    "param": "open",
                    "name": "Open Dispute Flag",
                    "required": false,
                    "default": null,
                    "description": "Return only open or close disputes, possible values:\n0 = Closed Disputes,\n1 = Open Disputes"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "billing_dispute_update": {
            "method": "client.billing_dispute_update",
            "title": "Update a Billing Dispute",
            "description": "This method is used to update a billing dispute.",
            "params": [
                {
                    "param": "billing_dispute_id",
                    "name": "Billing Dispute ID",
                    "required": true,
                    "default": null,
                    "description": "Invoice ID"
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "Billing Dispute Description"
                },
                {
                    "param": "close_dispute",
                    "name": "Close Dispute Flag",
                    "required": false,
                    "default": null,
                    "description": "If set to 1, the system will close this billing dispute"
                },
                {
                    "param": "user_closed",
                    "name": "User ID",
                    "required": false,
                    "default": null,
                    "description": "The user ID of the user closing the dispute, only applicable when the 'Close Dispute Flag' is set"
                }
            ]
        },
        "cc_add": {
            "method": "client.cc_add",
            "title": "Add a New Credit Card",
            "description": "This method is used to add a new credit card to a client's account.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client Login",
                    "required": true,
                    "default": null,
                    "description": "Client's login name or ID."
                },
                {
                    "param": "cc_num",
                    "name": "Credit Card Number",
                    "required": true,
                    "default": null,
                    "description": "Credit card number. Only last 4 digits need be supplied when adding a token"
                },
                {
                    "param": "cc_expire",
                    "name": "Expiration Date",
                    "required": false,
                    "default": null,
                    "description": "MMYY format"
                },
                {
                    "param": "cc_cvv2",
                    "name": "CVV/CVC Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fname",
                    "name": "First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "lname",
                    "name": "Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "company",
                    "name": "Company Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "address",
                    "name": "Street Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "city",
                    "name": "City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "state",
                    "name": "State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "zip",
                    "name": "ZIP or Postal Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "country",
                    "name": "Country",
                    "required": true,
                    "default": null,
                    "description": "ISO 2-character country code"
                },
                {
                    "param": "phone",
                    "name": "Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "email",
                    "name": "Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "set_default",
                    "name": "Set as default",
                    "required": false,
                    "default": null,
                    "description": "Value of 1 sets this as default billing method.)"
                },
                {
                    "param": "cc_token",
                    "name": "Tokenized Card",
                    "required": false,
                    "default": null,
                    "description": "Tokenized card number or profile id"
                },
                {
                    "param": "cc_type",
                    "name": "Card Type",
                    "required": false,
                    "default": null,
                    "description": "Only used when passed with cc_token. Options: \n  visa = Visa\n  mastercard = MasterCard\n  amex = American Express\n  discover = Discover\n  dinersclub = Diners Club\n  jcb = JCB\n  maestro = Maestro\n  austbank = Australian BankCard\n  switch = Switch\n  solo = Solo\n  electron = Electron\n  enroute = Enroute\n  delta = Visa Debit\n  unionpay = UnionPay"
                },
                {
                    "param": "threedsecure",
                    "name": "Provider specific 3D Secure 2 parameters (array)",
                    "required": false,
                    "default": null,
                    "description": "Associative array of 3D Secure 2 parameters specific to each credit card gateway provider.\n\n<b>Sage Pay Token (3dSecure v2): </b>\n[\n\"ThreeDSNotificationURL\" => String <Required>\n\"BrowserColorDepth\" => Number <Optional> default 24\n\"BrowserScreenHeight\" => Number <Optional> default 1080\n\"BrowserScreenWidth\" => Number <Optional> default 1920\n\"BrowserTZ\" => Number <Optional> default 240\n\"BrowserLanguage\" => String <Optional> default \"en-US\"\n\"ChallengeWindowSize\" => String <Optional> default \"03\"\n\"InitiatedType\" => \"CIT\" or \"MIT\" <Optional> default \"CIT\"\n]\n\nInitiatedType is used to send the transaction as Client Inititated Transaction(CIT)\nor Merchant Initiated Transaction(MIT). CIT should be used when the client is on session\nand MIT during automated charge where the client is off session.\n\nIf a challenge was required, the result must be sent via those key. They should be added to the threedsecure parameter:\n[\n\"vpstxid_or_md\" => String <Required>\n\"cres_or_pares\" => String <Required>\n\"ThreeDSNotificationURL\" => String <Required>\n...\n]\n\nThey should have been posted by the bank to the specified ThreeDSNotificationURL once the challenge is completed by the customer."
                }
            ]
        },
        "cc_delete": {
            "method": "client.cc_delete",
            "title": "Delete a Credit Card",
            "description": "This method is used to delete a credit card already on file.",
            "params": [
                {
                    "param": "billing_info_id",
                    "name": "Bank Account ID",
                    "required": true,
                    "default": null,
                    "description": "Account to delete."
                },
                {
                    "param": "source",
                    "name": "Source",
                    "required": false,
                    "default": null,
                    "description": "Source of deletion request. This shows who initiated the deletion of this bank account."
                }
            ]
        },
        "cc_info": {
            "method": "client.cc_info",
            "title": "List a Client's Credit Card Details",
            "description": "This method is used to get a client's credit card information.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_info_id",
                    "name": "Credit Card ID",
                    "required": false,
                    "default": null,
                    "description": "Credit card to get."
                }
            ]
        },
        "cc_update": {
            "method": "client.cc_update",
            "title": "Update a Credit Card",
            "description": "This method is used to update a credit card already on file.",
            "params": [
                {
                    "param": "billing_info_id",
                    "name": "Credit Card ID",
                    "required": true,
                    "default": null,
                    "description": "Credit card to update."
                },
                {
                    "param": "cc_num",
                    "name": "Credit Card Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "cc_expire",
                    "name": "Expiration Date",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "cc_cvv2",
                    "name": "CVV/CVC Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fname",
                    "name": "First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "lname",
                    "name": "Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "company",
                    "name": "Company Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "address",
                    "name": "Street Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "city",
                    "name": "City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "state",
                    "name": "State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "zip",
                    "name": "ZIP or Postal Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "country",
                    "name": "Country",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "phone",
                    "name": "Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "email",
                    "name": "Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "set_default",
                    "name": "Set as default",
                    "required": false,
                    "default": null,
                    "description": "Value of 1 sets this as default billing method.)"
                },
                {
                    "param": "threedsecure",
                    "name": "Provider specific 3D Secure 2 parameters (array)",
                    "required": false,
                    "default": null,
                    "description": "Associative array of 3D Secure 2 parameters specific to each credit card gateway provider.\n\n<b>Sage Pay Token (3dSecure v2): </b>\n[\n\"ThreeDSNotificationURL\" => String <Required>\n\"BrowserColorDepth\" => Number <Optional> default 24\n\"BrowserScreenHeight\" => Number <Optional> default 1080\n\"BrowserScreenWidth\" => Number <Optional> default 1920\n\"BrowserTZ\" => Number <Optional> default 240\n\"BrowserLanguage\" => String <Optional> default \"en-US\"\n\"ChallengeWindowSize\" => String <Optional> default \"03\"\n\"InitiatedType\" => \"CIT\" or \"MIT\" <Optional> default \"CIT\"\n]\n\nInitiatedType is used to send the transaction as Client Inititated Transaction(CIT)\nor Merchant Initiated Transaction(MIT). CIT should be used when the client is on session\nand MIT during automated charge where the client is off session.\n\nIf a challenge was required, the result must be sent via those key. They should be added to the threedsecure parameter:\n[\n\"vpstxid_or_md\" => String <Required>\n\"cres_or_pares\" => String <Required>\n\"ThreeDSNotificationURL\" => String <Required>\n...\n]\n\nThey should have been posted by the bank to the specified ThreeDSNotificationURL once the challenge is completed by the customer."
                }
            ]
        },
        "charge_log_list": {
            "method": "client.charge_log_list",
            "title": "List Charge Logs",
            "description": "This method is used to list charge logs in the system.",
            "params": [
                {
                    "param": "charge_id",
                    "name": "Charge Log ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "invoice_id",
                    "name": "Invoice ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "begin",
                    "name": "Begin Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. If empty, output will begin from the earliest event."
                },
                {
                    "param": "end",
                    "name": "End Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. If empty, output will end at the most recent event."
                },
                {
                    "param": "success",
                    "name": "Successful Charge",
                    "required": false,
                    "default": null,
                    "description": "1 = Successful Charges\n0 = Failed Charges"
                },
                {
                    "param": "card_type",
                    "name": "Credit Card Type",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "gateway",
                    "name": "Payment Gateway",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "charge_id",
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "comment_list": {
            "method": "client.comment_list",
            "title": "List a Client's Comments",
            "description": "This method is used to list a client's comments.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "filter_text",
                    "name": "Filter Text",
                    "required": false,
                    "default": null,
                    "description": "An array of strings to match against comments and attachment filenames. Comments which match all terms are returned."
                },
                {
                    "param": "client_viewable",
                    "name": "Client Viewable",
                    "required": false,
                    "default": null,
                    "description": "If client_viewable needs to be filtered (1 to only show client_viewable)"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "contact_add": {
            "method": "client.contact_add",
            "title": "Add a New Contact",
            "description": "This method is used to add a new contact to a client's account.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "real_name",
                    "name": "Contact's Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "phone",
                    "name": "Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "email",
                    "name": "Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "login_enabled",
                    "name": "Enable Login",
                    "required": false,
                    "default": 1,
                    "description": "This determines whether the contact can log into the client interface."
                },
                {
                    "param": "login",
                    "name": "Login Username",
                    "required": false,
                    "default": null,
                    "description": "This is the username that the contact will use to log in. If not specified it will be left blank and the contact may use \"ClientID-ContactID\" to log in."
                },
                {
                    "param": "password",
                    "name": "Password",
                    "required": false,
                    "default": null,
                    "description": "This is the password that the contact will use to log in. If not specified, the password will be left blank and the contact will not be able to log in."
                },
                {
                    "param": "prefer_lang",
                    "name": "Preferred Interface Language",
                    "required": false,
                    "default": "system default",
                    "description": "Preferred language for the contact. If nothing is provided, it will use the system default."
                },
                {
                    "param": "access",
                    "name": "Access Settings",
                    "required": false,
                    "default": null,
                    "description": "The access settings for the contact. This is an array containing the permissions for the client."
                },
                {
                    "param": "rwhois_contact",
                    "name": "RWhois Role",
                    "required": false,
                    "default": 0,
                    "description": "RWhois role for the contact. This is a bit field that accepts values between 0 and 7 and designates the contact's role as any combination of POC (1), Tech (2) or Abuse (4)."
                },
                {
                    "param": "meta_*",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "roles",
                    "name": "Contact Roles",
                    "required": false,
                    "default": null,
                    "description": "This is an array of role ids to add or remove from the contact.  Format: Array[Role ID] => 0|1"
                }
            ]
        },
        "contact_delete": {
            "method": "client.contact_delete",
            "title": "Deactivate a Contact",
            "description": "This method is used to deactivate a contact from a client's account. To reactivate a contact, set active=1 on client.contact_update.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client Login",
                    "required": false,
                    "default": null,
                    "description": "Client's login name or ID."
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": true,
                    "default": null,
                    "description": "The contact to deactivate."
                }
            ]
        },
        "contact_facility_add": {
            "method": "client.contact_facility_add",
            "title": "Add Facility Contact",
            "description": "This method adds a new facility-contact and returns the newly created object. A feature of this method allows for updating facility contacts whose permissions had previously been revoked, their 'active' flag having been set to false. In such cases, the archived ID for the object record will be conserved to ease reconciliation efforts.",
            "params": [
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin",
                    "name": "Contact Admin",
                    "required": false,
                    "default": null,
                    "description": "Boolean flag specifying whether the contact is able to manage other contact's facility access for the same client"
                },
                {
                    "param": "active",
                    "name": "Access active",
                    "required": false,
                    "default": null,
                    "description": "Boolean flag specifying whether the contact access is valid for this facility or not. A value of false denotes that this contact has no permissions and overrides all other permission."
                },
                {
                    "param": "notification",
                    "name": "Notification",
                    "required": false,
                    "default": null,
                    "description": "Contact recieves notifications"
                },
                {
                    "param": "escalation_priority",
                    "name": "Escalation Priority",
                    "required": false,
                    "default": null,
                    "description": "Escalation ordinal for a contact of a given client in a given facility"
                },
                {
                    "param": "tech_support",
                    "name": "Technical Support",
                    "required": false,
                    "default": null,
                    "description": "Contact has ability to recieve assistance from technical support for properties in the facility"
                },
                {
                    "param": "remote_hands",
                    "name": "Remote Hands",
                    "required": false,
                    "default": null,
                    "description": "Contact has the ability to recieve remote manual assistance from technical support for properties in the facility"
                },
                {
                    "param": "physical_entry",
                    "name": "Entry",
                    "required": false,
                    "default": null,
                    "description": "Contact may personally enter the facility"
                },
                {
                    "param": "thirdparty_entry",
                    "name": "Third-Party Entry",
                    "required": false,
                    "default": null,
                    "description": "Contact may enter the facility with a guest"
                },
                {
                    "param": "notes",
                    "name": "Notes",
                    "required": false,
                    "default": null,
                    "description": "Additional notes"
                }
            ]
        },
        "contact_facility_escalation": {
            "method": "client.contact_facility_escalation",
            "title": "Facility Contact Escalation",
            "description": "This method updates a facility-contacts list with new escalation priorities.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "priorities",
                    "name": "Facility priorities",
                    "required": true,
                    "default": null,
                    "description": "An array of new escalation priorities, indexed by contact id. The values are the new priority to be set for each facility contact"
                }
            ]
        },
        "contact_facility_list": {
            "method": "client.contact_facility_list",
            "title": "List Facility Contacts",
            "description": "This method returns a list of contacts with their escalation and access permissions per facility. If no valid argument is given, a list of all active facility contacts is taken as the default query.",
            "params": [
                {
                    "param": "id",
                    "name": "Facility Contact ID",
                    "required": false,
                    "default": null,
                    "description": "Unique ID for contact at a specific facility"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin",
                    "name": "Contact Admin",
                    "required": false,
                    "default": null,
                    "description": "Boolean flag specifying whether the contact is able to manage other contact's facility access for the same client"
                },
                {
                    "param": "active",
                    "name": "Access active",
                    "required": false,
                    "default": null,
                    "description": "Boolean flag specifying whether the contact access is valid for this facility or not. A value of false denotes that this contact has no permissions and overrides all other permission."
                },
                {
                    "param": "notification",
                    "name": "Notification",
                    "required": false,
                    "default": null,
                    "description": "Contact recieves notifications"
                },
                {
                    "param": "escalation_priority",
                    "name": "Escalation Priority",
                    "required": false,
                    "default": null,
                    "description": "Escalation ordinal for a contact of a given client in a given facility"
                },
                {
                    "param": "tech_support",
                    "name": "Technical Support",
                    "required": false,
                    "default": null,
                    "description": "Contact has ability to recieve assistance from technical support for properties in the facility"
                },
                {
                    "param": "remote_hands",
                    "name": "Remote Hands",
                    "required": false,
                    "default": null,
                    "description": "Contact has the ability to recieve remote manual assistance from technical support for properties in the facility"
                },
                {
                    "param": "physical_entry",
                    "name": "Entry",
                    "required": false,
                    "default": null,
                    "description": "Contact may personally enter the facility"
                },
                {
                    "param": "thirdparty_entry",
                    "name": "Third-Party Entry",
                    "required": false,
                    "default": null,
                    "description": "Contact may enter the facility with a guest"
                },
                {
                    "param": "format",
                    "name": "Format",
                    "required": false,
                    "default": "json",
                    "description": "Return format:\njson = JSON (default)\ncsv  = CSV"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "contact_facility_revoke": {
            "method": "client.contact_facility_revoke",
            "title": "Revoke Facility Contact Access",
            "description": "This method revokes all access for a contact at a facility by setting the facility-contact 'active' flag to false. Facility-contact ID's can be obtained through the contact_facility_list API method.",
            "params": [
                {
                    "param": "id",
                    "name": "Facility Contact ID",
                    "required": true,
                    "default": null,
                    "description": "Unique ID for contact at a specific facility"
                }
            ]
        },
        "contact_facility_update": {
            "method": "client.contact_facility_update",
            "title": "Facility Contact Update",
            "description": "This method updates a facility-contact and returns the updated record.",
            "params": [
                {
                    "param": "id",
                    "name": "Facility Contact ID",
                    "required": true,
                    "default": null,
                    "description": "Unique ID for contact at a specific facility"
                },
                {
                    "param": "admin",
                    "name": "Contact Admin",
                    "required": false,
                    "default": null,
                    "description": "Boolean flag specifying whether the contact is able to manage other contact's facility access for the same client"
                },
                {
                    "param": "active",
                    "name": "Access active",
                    "required": false,
                    "default": null,
                    "description": "Boolean flag specifying whether the contact's access is valid for this facility. A value of false denotes that this contact has no permissions and is meant to override any other permission specified."
                },
                {
                    "param": "notification",
                    "name": "Notification",
                    "required": false,
                    "default": null,
                    "description": "Contact recieves notifications"
                },
                {
                    "param": "escalation_priority",
                    "name": "Escalation Priority",
                    "required": false,
                    "default": null,
                    "description": "Escalation ordinal for a contact of a given client in a given facility"
                },
                {
                    "param": "tech_support",
                    "name": "Technical Support",
                    "required": false,
                    "default": null,
                    "description": "Contact has ability to recieve assistance from technical support for properties in the facility"
                },
                {
                    "param": "remote_hands",
                    "name": "Remote Hands",
                    "required": false,
                    "default": null,
                    "description": "Contact has the ability to recieve remote manual assistance from technical support for properties in the facility"
                },
                {
                    "param": "physical_entry",
                    "name": "Entry",
                    "required": false,
                    "default": null,
                    "description": "Contact may personally enter the facility"
                },
                {
                    "param": "thirdparty_entry",
                    "name": "Third-Party Entry",
                    "required": false,
                    "default": null,
                    "description": "Contact may enter the facility with a guest"
                },
                {
                    "param": "notes",
                    "name": "Notes",
                    "required": false,
                    "default": null,
                    "description": "Additional notes"
                }
            ]
        },
        "contact_get": {
            "method": "client.contact_get",
            "title": "Get Contact Details",
            "description": "This method is used to get a contact's details.",
            "params": [
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "user_login",
                    "name": "Contact Login Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "acls",
                    "name": "Client ACLs",
                    "required": false,
                    "default": null,
                    "description": "1 = Include client ACLs"
                }
            ]
        },
        "contact_list": {
            "method": "client.contact_list",
            "title": "List a Client's Contacts",
            "description": "This method is used to list a client's contacts.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client Login",
                    "required": false,
                    "default": null,
                    "description": "Client's login name or ID."
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "Client's brand ID"
                },
                {
                    "param": "contact_active",
                    "name": "Contact Status",
                    "required": false,
                    "default": 1,
                    "description": "Set to 0 to retrieve deactivated contacts, 1 for active contacts, or 2 for all contacts"
                },
                {
                    "param": "active",
                    "name": "Client Status",
                    "required": false,
                    "default": null,
                    "description": "Set to 0 to retrieve contacts belonging to deactivated clients, 1 for active clients, or 2 for leads"
                },
                {
                    "param": "email",
                    "name": "Contact Email",
                    "required": false,
                    "default": null,
                    "description": "Retrieve contacts matching given email address"
                },
                {
                    "param": "metadata",
                    "name": "Include Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "If set to 1, all custom fields will be included.\n\t\t\tmetadata can also be an array of individual fields to include, ie. \"metadata[field_name1]=1 metadata[field_name2]=1 etc...\"\n\t\t\tNote that fields with show_in_list flag set will always be included even if metadata is not specificied or it is set to 0."
                },
                {
                    "param": "[any included custom field variable]",
                    "name": "Custom Field Filters",
                    "required": false,
                    "default": null,
                    "description": "Filter list by custom field values, ie. \"myfield1=somevalue myfield2=somevalue etc...\"\n\t\t\tNote that you can only filter by included custom fields (see metadata parameter description). ie. filtering by myfield1 in the previous example will be ignored if it is not included"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "contact_metadata_get": {
            "method": "client.contact_metadata_get",
            "title": "Get a Contact's Custom Fields",
            "description": "This method is used to get a contact's custom fields.",
            "params": [
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "contact_metadata_single": {
            "method": "client.contact_metadata_single",
            "title": "Get a Contact's Custom Field Value",
            "description": "This method is used to get a single custom field value from a contact.",
            "params": [
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "metaconf_id",
                    "name": "Custom Field Item ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "variable",
                    "name": "Custom Field Variable Name",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "contact_permission_list": {
            "method": "client.contact_permission_list",
            "title": "List Client Contact Permissions",
            "description": "This method is used to return a tree/list of client contact permissions.",
            "params": [
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "resource_name",
                    "name": "Resource Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "effective",
                    "name": "Include Effective Actions",
                    "required": false,
                    "default": 0,
                    "description": "Include the effective (inherited) actions along with explicit actions"
                }
            ]
        },
        "contact_permission_set": {
            "method": "client.contact_permission_set",
            "title": "Set Client Contact Permissions",
            "description": "This method is used to set client contact permissions.",
            "params": [
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "resource_name",
                    "name": "Resource Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "action",
                    "name": "Action",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "type",
                    "name": "Permission Type",
                    "required": true,
                    "default": null,
                    "description": "Available values: allow, deny, inherit"
                }
            ]
        },
        "contact_update": {
            "method": "client.contact_update",
            "title": "Update a Contact",
            "description": "This method is used to update a client's contact.",
            "params": [
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": true,
                    "default": null,
                    "description": "The contact to update."
                },
                {
                    "param": "real_name",
                    "name": "Contact's Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "phone",
                    "name": "Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "email",
                    "name": "Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "login_enabled",
                    "name": "Enable Login",
                    "required": false,
                    "default": null,
                    "description": "This determines whether the contact can log into the client interface."
                },
                {
                    "param": "login",
                    "name": "Login Username",
                    "required": false,
                    "default": null,
                    "description": "This is the username that the contact will use to log in. If not specified it will be left blank and the contact may use \"ClientID-ContactID\" to log in."
                },
                {
                    "param": "password",
                    "name": "Password",
                    "required": false,
                    "default": null,
                    "description": "This is the password that the contact will use to log in. If not specified, the password will not be changed from its current value."
                },
                {
                    "param": "prefer_lang",
                    "name": "Preferred Interface Language",
                    "required": false,
                    "default": null,
                    "description": "Preferred language for the contact. If nothing is provided, it will use the system default."
                },
                {
                    "param": "access",
                    "name": "Access Settings",
                    "required": false,
                    "default": null,
                    "description": "The access settings for the contact. This is an array containing the permissions for the client."
                },
                {
                    "param": "rwhois_contact",
                    "name": "RWhois Role",
                    "required": false,
                    "default": 0,
                    "description": "RWhois role for the contact. This is a bit field that accepts values between 0 and 7 and designates the contact's role as any combination of POC (1), Tech (2) or Abuse (4)."
                },
                {
                    "param": "active",
                    "name": "Contact active",
                    "required": false,
                    "default": null,
                    "description": "Disable or enable the contact."
                },
                {
                    "param": "roles",
                    "name": "Contact Roles",
                    "required": false,
                    "default": null,
                    "description": "This is an array of role ids to add or remove from the contact.  Format: Array[Role ID] => 0|1"
                }
            ]
        },
        "count": {
            "method": "client.count",
            "title": "Count Active Clients",
            "description": "This method is used to count the number of clients in the system.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, only clients from the specified brand will be returned."
                },
                {
                    "param": "inactive",
                    "name": "Active Flag",
                    "required": false,
                    "default": 2,
                    "description": "Specify whether to return only active, only inactive, or all clients.\n1 = Inactive\n0 = Active\n2 = All"
                },
                {
                    "param": "active",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "1 = Clients\n2 = Leads\n0 = Deactivated"
                }
            ]
        },
        "credit_add": {
            "method": "client.credit_add",
            "title": "Add an Account Credit",
            "description": "This method is used to add a new credit to a client's account.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": "Client ID."
                },
                {
                    "param": "value",
                    "name": "Credit Amount",
                    "required": false,
                    "default": 0,
                    "description": "The amount that is to be credited to the client's account."
                },
                {
                    "param": "reason",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "This is the \"name\" of the account credit and is what will appear in any invoices that include it."
                },
                {
                    "param": "comment",
                    "name": "Additional Information",
                    "required": false,
                    "default": null,
                    "description": "If provided, will be stored as a comment in the credit record."
                },
                {
                    "param": "payment_type",
                    "name": "Type of Account Credit",
                    "required": true,
                    "default": "other",
                    "description": "This field determines what type of credit is being created. Possible values:\ncheck = Received Check\ncash = Received Cash\ncomp = Company Issued\ncred = Credit card charge\nother = Other"
                },
                {
                    "param": "payment_number",
                    "name": "Number to be Associated with Credit",
                    "required": false,
                    "default": null,
                    "description": "This field is for any record ID that may need to be kept track of for the credit. Examples include a check number or staff ID."
                },
                {
                    "param": "start_date",
                    "name": "Start Date",
                    "required": false,
                    "default": null,
                    "description": "This field determines what date the credit becomes applicable."
                },
                {
                    "param": "auto_apply",
                    "name": "Automatic Application Flag",
                    "required": false,
                    "default": 1,
                    "description": "This field determine if this credit can be automatically applied to new invoices. Possible values:\n2 = Automatically Apply to All Invoices\n1 = Automatically Apply to New Invoices\n0 = Do Not Automatically Apply"
                },
                {
                    "param": "pack_ids",
                    "name": "Package IDs",
                    "required": false,
                    "default": null,
                    "description": "An array of packages to this credit may be applied to, the index of each element should be the package ID and the value should be 1 (e.g. pack_ids[89]=1)"
                },
                {
                    "param": "line_items",
                    "name": "Invoice Line Item IDs",
                    "required": false,
                    "default": null,
                    "description": "An array of invoice line items to associate this credit with.  The index of each element should be the item_id and the value should be an array containing amount, date_range_start & date_range_end. Example:\nline_items[1][amount]=4.84&line_items[1][date_range_start]=1/1/2013&line_items[1][date_range_end]=2/1/2013"
                },
                {
                    "param": "send_note",
                    "name": "Send Credit Note",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to email the client a note with details of their credit."
                }
            ]
        },
        "credit_apply": {
            "method": "client.credit_apply",
            "title": "Apply a Credit to an Invoice",
            "description": "This method is used to apply a credit to a client's invoice.",
            "params": [
                {
                    "param": "credit_id",
                    "name": "Credit ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "inv_id",
                    "name": "Invoice ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "total",
                    "name": "Total",
                    "required": false,
                    "default": null,
                    "description": "The total amount of the credit to be applied to the invoice. The total will be applied to any available services in the invoice.\n\t\t\t\tIf the 'total' parameter is set, the parameters 'packages' and 'taxes' can not be set.\n\t\t\t\tIs required if 'packages' and 'taxes' are not specified."
                },
                {
                    "param": "packages",
                    "name": "Packages",
                    "required": false,
                    "default": null,
                    "description": "An array of packages with amount for the credit to apply to (e.g. package[1]=100.00).\n\t\t\t\tThe index of the array is the inv_xml_id of inv_packs.\n\t\t\t\tIs required if 'total' and 'taxes' are not specified."
                },
                {
                    "param": "taxes",
                    "name": "Taxes",
                    "required": false,
                    "default": null,
                    "description": "An array of taxes with amount for the credit to apply to (e.g. tax[1]=100.00). \n\t\t\t\tThe index of the array is the tax_id of inv_taxes.\n\t\t\t\tIs required if 'total' and 'packages' are not specified."
                }
            ]
        },
        "credit_comment_list": {
            "method": "client.credit_comment_list",
            "title": "List a Credit's Comments",
            "description": "This method is used to list a credit's comments.",
            "params": [
                {
                    "param": "credit_id",
                    "name": "Credit ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "filter_text",
                    "name": "Filter Text",
                    "required": false,
                    "default": null,
                    "description": "An array of strings to match against comments and attachment filenames. Comments which match all terms are returned."
                },
                {
                    "param": "client_viewable",
                    "name": "Client Viewable",
                    "required": false,
                    "default": null,
                    "description": "If client_viewable needs to be filtered (1 to only show client_viewable)"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "credit_deactivate": {
            "method": "client.credit_deactivate",
            "title": "Deactivate an Account Credit",
            "description": "This method is used to deactivate a credit in a client's account.",
            "params": [
                {
                    "param": "user_login",
                    "name": "Client Login",
                    "required": true,
                    "default": null,
                    "description": "Client's login name or ID."
                },
                {
                    "param": "credit_id",
                    "name": "Credit ID",
                    "required": true,
                    "default": null,
                    "description": "ID of the credit to deactivate."
                }
            ]
        },
        "credit_get": {
            "method": "client.credit_get",
            "title": "Get details of an Account Credit",
            "description": "This method is used to get full details of an account credit.",
            "params": [
                {
                    "param": "credit_id",
                    "name": "Credit ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "include_payments",
                    "name": "Include Payments",
                    "required": false,
                    "default": 0,
                    "description": "Set the value to 1 to include credit payments"
                }
            ]
        },
        "credit_list": {
            "method": "client.credit_list",
            "title": "List a Client's Credits",
            "description": "This method is used to list a client's credits.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "active",
                    "name": "Credit Active Status",
                    "required": true,
                    "default": 1,
                    "description": "Specify active status to return.\n0 = Inactive\n1 = Current\n2 = All"
                },
                {
                    "param": "auto_apply",
                    "name": "Automatic Application Flag",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only credits with the automatic application flag set to the value:\n2 = Credits that can be automatically and manually applied to all invoices\n1 = Credits that can only be automatically and manually applied to new invoices\n0 = Credits that can only be manually applied to invoices"
                }
            ]
        },
        "credit_update": {
            "method": "client.credit_update",
            "title": "Update an Account Credit",
            "description": "This method is used to update a credit on a client's account.",
            "params": [
                {
                    "param": "credit_id",
                    "name": "Credit ID",
                    "required": true,
                    "default": null,
                    "description": "Credit ID."
                },
                {
                    "param": "amount",
                    "name": "Credit Amount",
                    "required": false,
                    "default": 0,
                    "description": "The original amount credited to the client's account."
                },
                {
                    "param": "balance",
                    "name": "Credit Balance",
                    "required": false,
                    "default": 0,
                    "description": "The current remaining balance of the credit."
                },
                {
                    "param": "reason",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "This is the \"name\" of the account credit and is what will appear in any invoices that include it."
                },
                {
                    "param": "payment_number",
                    "name": "Number to be Associated with Credit",
                    "required": false,
                    "default": null,
                    "description": "This field is for any record ID that may need to be kept track of for the credit. Examples include a check number or staff ID."
                },
                {
                    "param": "auto_apply",
                    "name": "Automatic Application Flag",
                    "required": false,
                    "default": 1,
                    "description": "This field determine if this credit can be automatically applied to new invoices. Possible values:\n2 = Automatically Apply to All Invoices\n1 = Automatically Apply to New Invoices\n0 = Do Not Automatically Apply"
                },
                {
                    "param": "pack_ids",
                    "name": "Package IDs",
                    "required": false,
                    "default": null,
                    "description": "An array of packages to this credit may be applied to, the index of each element should be the package ID and the value should be 1 (e.g. pack_ids[89]=1)"
                },
                {
                    "param": "line_items",
                    "name": "Invoice Line Item IDs",
                    "required": false,
                    "default": null,
                    "description": "An array of invoice line items to associate this credit with.  The index of each element should be the item_id and the value should be an array containing amount, date_range_start & date_range_end. Example:\nline_items[1][amount]=4.84&line_items[1][date_range_start]=1/1/2013&line_items[1][date_range_end]=2/1/2013"
                },
                {
                    "param": "send_note",
                    "name": "Send Credit Note",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to email the client a note with details of their credit."
                }
            ]
        },
        "deactivate": {
            "method": "client.deactivate",
            "title": "Deactivate a Client",
            "description": "This method is used to deactivate a client.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "domain_add": {
            "method": "client.domain_add",
            "title": "Add a Domain",
            "description": "This method is used to add a new domain to a client's account.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": "Optional field to associate domain with a specific service."
                },
                {
                    "param": "name",
                    "name": "Domain Name",
                    "required": true,
                    "default": null,
                    "description": "The name of the domain. The TLD may be specified separately using the tld parameter (e.g. name=example tld=com), or included here (e.g. name=example.com)."
                },
                {
                    "param": "tld",
                    "name": "Top-Level Domain",
                    "required": false,
                    "default": null,
                    "description": "The TLD for the domain (net,com,org,etc). Required if not included in the name parameter."
                },
                {
                    "param": "registered",
                    "name": "Registration Date",
                    "required": true,
                    "default": null,
                    "description": "The registration date of the domain. May be specified as a Unix timestamp or a php- compatible date string."
                },
                {
                    "param": "expires",
                    "name": "Expiration Date",
                    "required": true,
                    "default": null,
                    "description": "Expiration date of the domain, same format as registration date."
                },
                {
                    "param": "orderid",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "Associate domain with a specific order."
                },
                {
                    "param": "username",
                    "name": "User Name",
                    "required": false,
                    "default": null,
                    "description": "User Name for domain."
                },
                {
                    "param": "password",
                    "name": "Password",
                    "required": false,
                    "default": null,
                    "description": "Password for domain."
                },
                {
                    "param": "registrar_id",
                    "name": "Domain Registrar",
                    "required": false,
                    "default": "manual",
                    "description": "Supported registrar. Options: \n  enom = Enom\n  namecheap = Namecheap\n  nominet = Nominet\n  opensrs = OpenSRS\n  manual = Manual"
                }
            ]
        },
        "domain_external_attributes_get": {
            "method": "client.domain_external_attributes_get",
            "title": "Get Registrar/TLD external attributes.",
            "description": "Return Registrar/TLD specific external attributes.",
            "params": [
                {
                    "param": "tld",
                    "name": "TLD",
                    "required": true,
                    "default": null,
                    "description": "The TLD domain to find extended attributes."
                }
            ]
        },
        "domain_list": {
            "method": "client.domain_list",
            "title": "List a Client's Domains",
            "description": "This method is used to list a client's domains.",
            "params": [
                {
                    "param": "user_login",
                    "name": "Client Login",
                    "required": false,
                    "default": null,
                    "description": "Client's login name or ID."
                },
                {
                    "param": "domain_type",
                    "name": "Domain Type",
                    "required": false,
                    "default": 0,
                    "description": "0 = Current (Non-expired) Domains\n1 = All Domains"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "name",
                    "description": "Field to order results by, available fields:\nname\nregistered\nexpires\nregistrar"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending\ndesc = Descending"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": 0,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "domain_lookup": {
            "method": "client.domain_lookup",
            "title": "Look Up a Domain",
            "description": "This method is used to look up a client's domain using WHOIS.",
            "params": [
                {
                    "param": "domain",
                    "name": "Domain Name",
                    "required": true,
                    "default": null,
                    "description": "The domain to look up."
                }
            ]
        },
        "domain_register": {
            "method": "client.domain_register",
            "title": "Register a Domain",
            "description": "This method is used to register a client's domain.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "tld",
                    "name": "Top-Level Domain",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Domain Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "username",
                    "name": "Username",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "password",
                    "name": "Password",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "years",
                    "name": "Registration Period",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "autorenew",
                    "name": "Auto-Renew",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "lockdomain",
                    "name": "Lock Domain",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "privacy",
                    "name": "Add WHOIS Privacy Protection Service",
                    "required": false,
                    "default": null,
                    "description": "Boolean. Add or not WhoIs Information protection"
                },
                {
                    "param": "owner_fname",
                    "name": "Owner's First Name",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_lname",
                    "name": "Owner's Last Name",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_company",
                    "name": "Owner's Company",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_email",
                    "name": "Owner's Email",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_address1",
                    "name": "Owner's Address 1",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_address2",
                    "name": "Owner's Address 2",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_city",
                    "name": "Owner's City",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_state",
                    "name": "Owner's State",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_zip",
                    "name": "Owner's ZIP or Postal Code",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_country",
                    "name": "Owner's Country",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_phone",
                    "name": "Owner's Telephone Number",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_fax",
                    "name": "Owner's Fax Number",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "admin_info",
                    "name": "Administrator's Information",
                    "required": false,
                    "default": "custom",
                    "description": "Possible Values:\nowner\ncustom"
                },
                {
                    "param": "admin_fname",
                    "name": "Administrator's First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_lname",
                    "name": "Administrator's Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_company",
                    "name": "Administrator's Company",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_email",
                    "name": "Administrator's Email",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_address1",
                    "name": "Administrator's Address 1",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_address2",
                    "name": "Administrator's Address 2",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_city",
                    "name": "Administrator's City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_state",
                    "name": "Administrator's State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_zip",
                    "name": "Administrator's ZIP or Postal Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_country",
                    "name": "Administrator's Country",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_phone",
                    "name": "Administrator's Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_fax",
                    "name": "Administrator's Fax Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_info",
                    "name": "Billing Information",
                    "required": false,
                    "default": "custom",
                    "description": "Possible Values:\nowner\ncustom"
                },
                {
                    "param": "billing_fname",
                    "name": "Billing First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_lname",
                    "name": "Billing Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_company",
                    "name": "Billing Company",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_email",
                    "name": "Billing Email",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_address1",
                    "name": "Billing Address 1",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_address2",
                    "name": "Billing Address 2",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_city",
                    "name": "Billing City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_state",
                    "name": "Billing State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_zip",
                    "name": "Billing ZIP or Postal Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_country",
                    "name": "Billing Country",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_phone",
                    "name": "Billing Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_fax",
                    "name": "Billing Fax Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_info",
                    "name": "Technical Information",
                    "required": false,
                    "default": "custom",
                    "description": "Possible Values:\nowner\ncustom"
                },
                {
                    "param": "technical_fname",
                    "name": "Technical First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_lname",
                    "name": "Technical Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_company",
                    "name": "Technical Company",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_email",
                    "name": "Technical Email",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_address1",
                    "name": "Technical Address 1",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_address2",
                    "name": "Technical Address 2",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_city",
                    "name": "Technical City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_state",
                    "name": "Technical State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_zip",
                    "name": "Technical ZIP or Postal Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_country",
                    "name": "Technical Country",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_phone",
                    "name": "Technical Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_fax",
                    "name": "Technical Fax Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "external_attributes",
                    "name": "An array of Registrar/TLD specific information",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "premium_price_to_confirm",
                    "name": "Price confirmation for premium domains",
                    "required": false,
                    "default": null,
                    "description": "Only used for premium domains.The submitted price in the format nnn.nn must match the listed registrar price for the action be completed."
                },
                {
                    "param": "force_premium",
                    "name": "Force registration of premium domains",
                    "required": false,
                    "default": null,
                    "description": "Only used for premium domains.If possible, force registration for premium domains which usually requires a special confirmation. If specified, overrides the premium_price_to_confirm param"
                }
            ]
        },
        "domain_transfer": {
            "method": "client.domain_transfer",
            "title": "Transfer a Domain",
            "description": "This method is used to transfer a client's domain.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "tld",
                    "name": "Top-Level Domain",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Domain Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "username",
                    "name": "Username",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "password",
                    "name": "Password",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "years",
                    "name": "Registration Period",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "autorenew",
                    "name": "Auto-Renew",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "lockdomain",
                    "name": "Lock Domain",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "privacy",
                    "name": "Add WHOIS Privacy Protection Service",
                    "required": false,
                    "default": null,
                    "description": "Boolean. Add or not WhoIs Information protection"
                },
                {
                    "param": "owner_fname",
                    "name": "Owner's First Name",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_lname",
                    "name": "Owner's Last Name",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_company",
                    "name": "Owner's Company",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_email",
                    "name": "Owner's Email",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_address1",
                    "name": "Owner's Address 1",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_address2",
                    "name": "Owner's Address 2",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_city",
                    "name": "Owner's City",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_state",
                    "name": "Owner's State",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_zip",
                    "name": "Owner's ZIP or Postal Code",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_country",
                    "name": "Owner's Country",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_phone",
                    "name": "Owner's Telephone Number",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "owner_fax",
                    "name": "Owner's Fax Number",
                    "required": false,
                    "default": "from client",
                    "description": ""
                },
                {
                    "param": "admin_info",
                    "name": "Administrator's Information",
                    "required": false,
                    "default": "custom",
                    "description": "Possible Values:\nowner\ncustom"
                },
                {
                    "param": "admin_fname",
                    "name": "Administrator's First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_lname",
                    "name": "Administrator's Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_company",
                    "name": "Administrator's Company",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_email",
                    "name": "Administrator's Email",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_address1",
                    "name": "Administrator's Address 1",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_address2",
                    "name": "Administrator's Address 2",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_city",
                    "name": "Administrator's City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_state",
                    "name": "Administrator's State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_zip",
                    "name": "Administrator's ZIP or Postal Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_country",
                    "name": "Administrator's Country",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_phone",
                    "name": "Administrator's Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "admin_fax",
                    "name": "Administrator's Fax Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_info",
                    "name": "Billing Information",
                    "required": false,
                    "default": "custom",
                    "description": "Possible Values:\nowner\ncustom"
                },
                {
                    "param": "billing_fname",
                    "name": "Billing First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_lname",
                    "name": "Billing Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_company",
                    "name": "Billing Company",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_email",
                    "name": "Billing Email",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_address1",
                    "name": "Billing Address 1",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_address2",
                    "name": "Billing Address 2",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_city",
                    "name": "Billing City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_state",
                    "name": "Billing State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_zip",
                    "name": "Billing ZIP or Postal Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_country",
                    "name": "Billing Country",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_phone",
                    "name": "Billing Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_fax",
                    "name": "Billing Fax Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_info",
                    "name": "Technical Information",
                    "required": false,
                    "default": "custom",
                    "description": "Possible Values:\nowner\ncustom"
                },
                {
                    "param": "technical_fname",
                    "name": "Technical First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_lname",
                    "name": "Technical Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_company",
                    "name": "Technical Company",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_email",
                    "name": "Technical Email",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_address1",
                    "name": "Technical Address 1",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_address2",
                    "name": "Technical Address 2",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_city",
                    "name": "Technical City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_state",
                    "name": "Technical State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_zip",
                    "name": "Technical ZIP or Postal Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_country",
                    "name": "Technical Country",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_phone",
                    "name": "Technical Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "technical_fax",
                    "name": "Technical Fax Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "external_attributes",
                    "name": "An array of Registrar/TLD specific information",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "premium_price_to_confirm",
                    "name": "Price confirmation for premium domains",
                    "required": false,
                    "default": null,
                    "description": "Only used for premium domains.The submitted price in the format nnn.nn must match the listed registrar price for the action be completed."
                },
                {
                    "param": "force_premium",
                    "name": "Force registration of premium domains",
                    "required": false,
                    "default": null,
                    "description": "Only used for premium domains.If possible, force registration for premium domains which usually requires a special confirmation. If specified, overrides the premium_price_to_confirm param"
                }
            ]
        },
        "domain_update": {
            "method": "client.domain_update",
            "title": "Update a Domain",
            "description": "This method is used to add a new domain to a client's account.",
            "params": [
                {
                    "param": "domain_id",
                    "name": "Domain ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": "Optional field to associate domain with a specific service."
                },
                {
                    "param": "name",
                    "name": "Domain Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the domain. The TLD may be specified separately using the tld parameter (e.g. name=example tld=com), or included here (e.g. name=example.com)."
                },
                {
                    "param": "tld",
                    "name": "Top-Level Domain",
                    "required": false,
                    "default": null,
                    "description": "The TLD for the domain (net,com,org,etc). Required if not included in the name parameter."
                },
                {
                    "param": "registered",
                    "name": "Registration Date",
                    "required": false,
                    "default": null,
                    "description": "The registration date of the domain. May be specified as a Unix timestamp or a php- compatible date string."
                },
                {
                    "param": "expires",
                    "name": "Expiration Date",
                    "required": false,
                    "default": null,
                    "description": "Expiration date of the domain, same format as registration date."
                },
                {
                    "param": "orderid",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "Associate domain with a specific order."
                },
                {
                    "param": "username",
                    "name": "User Name",
                    "required": false,
                    "default": null,
                    "description": "User Name for domain."
                },
                {
                    "param": "password",
                    "name": "Password",
                    "required": false,
                    "default": null,
                    "description": "Password for domain."
                },
                {
                    "param": "registrar_id",
                    "name": "Domain Registrar",
                    "required": false,
                    "default": "manual",
                    "description": "Supported registrar. Options: \n  enom = Enom\n  namecheap = Namecheap\n  nominet = Nominet\n  opensrs = OpenSRS\n  manual = Manual"
                },
                {
                    "param": "active",
                    "name": "Active",
                    "required": false,
                    "default": null,
                    "description": "Options: 0 = Inactive, 1 = Active"
                }
            ]
        },
        "find_similar": {
            "method": "client.find_similar",
            "title": "Get a List of Similar Clients",
            "description": "This method is used to return a list of similar clients.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "The ID of the client to match against. Either this or client must be specified."
                },
                {
                    "param": "client",
                    "name": "Client Details",
                    "required": false,
                    "default": null,
                    "description": "An array of client details to match against. Supported fields are first, last, company, phone, and email. Either this or client_id must be specified."
                }
            ]
        },
        "get": {
            "method": "client.get",
            "title": "Get Client Details",
            "description": "This method is used to get a client's details.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Either this, user_login or email must be provided."
                },
                {
                    "param": "user_login",
                    "name": "Client Login Name",
                    "required": false,
                    "default": null,
                    "description": "Either this, client_id or email must be provided."
                },
                {
                    "param": "email",
                    "name": "Client Email Address",
                    "required": false,
                    "default": null,
                    "description": "Either this, user_login or client_id must be provided."
                },
                {
                    "param": "metadata",
                    "name": "Include Client Custom Fields",
                    "required": false,
                    "default": 0,
                    "description": "1 = Include Custom Fields, 0 = No Custom Fields"
                },
                {
                    "param": "allclients",
                    "name": "All Clients Flag",
                    "required": false,
                    "default": 0,
                    "description": "Setting this parameter to 1 allows the system to return the details for deactivated clients. Otherwise only active clients/leads are returned."
                },
                {
                    "param": "tags",
                    "name": "Client Tags",
                    "required": false,
                    "default": null,
                    "description": "1 = Include client tags"
                },
                {
                    "param": "acls",
                    "name": "Client ACLs",
                    "required": false,
                    "default": null,
                    "description": "1 = Include client ACLs"
                }
            ]
        },
        "invoice_charge": {
            "method": "client.invoice_charge",
            "title": "Charge an Invoice",
            "description": "This method is used to charge a client's invoice.",
            "params": [
                {
                    "param": "inv_id",
                    "name": "Invoice ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the invoice to process."
                },
                {
                    "param": "payment_type",
                    "name": "Payment Type",
                    "required": false,
                    "default": "cc",
                    "description": "Specify payment type.\ncc = Credit Card\nach = Bank Account\nccbill = CCBill"
                },
                {
                    "param": "billing_info_id",
                    "name": "Payment Method ID",
                    "required": false,
                    "default": null,
                    "description": "The Payment Method ID to use. \nIf not provided, the default payment method will be used if one exists.\n"
                },
                {
                    "param": "paid_in_full",
                    "name": "Paid In Full",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "package",
                    "name": "Packages",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "tax",
                    "name": "Taxes",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "threedsecure",
                    "name": "Provider specific 3D Secure parameters (array)",
                    "required": false,
                    "default": null,
                    "description": "Associative array of 3D Secure 2 parameters specific to each credit card gateway provider.\n\n<b>Paysafe Token:</b>\n[\n\"authentication_id\" => String &lt;Required&gt;\n]\n\n<b>Braintree Token:</b>\n[\n\"payment_method_nonce\" => String &lt;Required&gt;\n]\n\n<b>Stripe:</b>\n[\n\"payment_intent_id\" => String &lt;Required&gt;\n]\n\n<b>Sage Pay Token (3dSecure v2): </b>\n[\n\"ThreeDSNotificationURL\" => String <Required>\n\"BrowserColorDepth\" => Number <Optional> default 24\n\"BrowserScreenHeight\" => Number <Optional> default 1080\n\"BrowserScreenWidth\" => Number <Optional> default 1920\n\"BrowserTZ\" => Number <Optional> default 240\n\"BrowserLanguage\" => String <Optional> default \"en-US\"\n\"ChallengeWindowSize\" => String <Optional> default \"03\"\n\"InitiatedType\" => \"CIT\" or \"MIT\" <Optional> default \"CIT\"\n]\n\nInitiatedType is used to send the transaction as Client Inititated Transaction(CIT)\nor Merchant Initiated Transaction(MIT). CIT should be used when the client is on session\nand MIT during automated charge where the client is off session.\n\nIf a challenge was required, the result must be sent via those key. They should be added to the threedsecure parameter:\n[\n\"vpstxid_or_md\" => String <Required>\n\"cres_or_pares\" => String <Required>\n\"ThreeDSNotificationURL\" => String <Required>\n...\n]\n\nThey should have been posted by the bank to the specified ThreeDSNotificationURL once the challenge is completed by the customer."
                }
            ]
        },
        "invoice_count": {
            "method": "client.invoice_count",
            "title": "Count Invoices",
            "description": "This method is used to count the number of invoices associated with a client.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "inv_type_select",
                    "name": "Invoice Status",
                    "required": false,
                    "default": "all",
                    "description": "1 = Paid, 0 = Unpaid, 2 = Disregarded, all = All"
                }
            ]
        },
        "invoice_disregard": {
            "method": "client.invoice_disregard",
            "title": "Disregard an Invoice",
            "description": "This method is used to disregard a client's invoice.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "invoice_id",
                    "name": "Invoice ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "invoice_generate": {
            "method": "client.invoice_generate",
            "title": "Generate an Invoice",
            "description": "This method is used to generate an invoice for a client.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "command",
                    "name": "Charge Command",
                    "required": false,
                    "default": null,
                    "description": "To charge the client's card on file, pass \"charge\" for the command parameter. To capture a previously-authorized transaction, pass \"charge_prior_auth\" for the command parameter, and the transaction ID of the authorization for the trans_id parameter."
                },
                {
                    "param": "duedate",
                    "name": "Due Date",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "pre_bill",
                    "name": "Pre-Bill Date",
                    "required": false,
                    "default": null,
                    "description": "Date to look ahead to for including services to bill. If not supplied the client's pre-bill setting used."
                },
                {
                    "param": "trans_id",
                    "name": "Transaction ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "skip_notification",
                    "name": "Skip Notification",
                    "required": false,
                    "default": null,
                    "description": "If set to 1, email notifications will skipped for any generated invoices."
                },
                {
                    "param": "include_packs",
                    "name": "Included Services",
                    "required": false,
                    "default": null,
                    "description": "Pass an array keyed by service IDs to generate an invoice for a particular set of services to be billed. The values in the array should be set to 1. To exclude all services that would be billed, set this to 0 instead of an array."
                },
                {
                    "param": "include_prebills",
                    "name": "Included Prebills",
                    "required": false,
                    "default": null,
                    "description": "Pass an array keyed by pre-billed service IDs to generate an invoice for a particular set of services to be pre-billed. The values in the array should be set to 1. To exclude all services that would be pre-billed, set this to 0 instead of an array."
                },
                {
                    "param": "include_credits",
                    "name": "Included Credits",
                    "required": false,
                    "default": null,
                    "description": "Pass an array keyed by credit IDs to generate an invoice for a particular set of credits to be included. The values in the array should be set to 1. To exclude all credits that would be included, set this to 0 instead of an array."
                }
            ]
        },
        "invoice_get": {
            "method": "client.invoice_get",
            "title": "Get an Invoice",
            "description": "This method is used to get a client's invoice.",
            "params": [
                {
                    "param": "invoice_id",
                    "name": "Invoice ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "format",
                    "name": "Format",
                    "required": false,
                    "default": "json",
                    "description": "Return format:\njson = JSON (default)\npdf  = PDF\nhtml = HTML\nxml  = XML\ncsv  = CSV"
                },
                {
                    "param": "include_payments",
                    "name": "Include Payments",
                    "required": false,
                    "default": 0,
                    "description": "Set the value to 1 to include payments"
                }
            ]
        },
        "invoice_list": {
            "method": "client.invoice_list",
            "title": "List a Client's Invoices",
            "description": "This method is used to list a client's invoices.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client Login",
                    "required": false,
                    "default": null,
                    "description": "Client ID. You can provide an array of client ids, in this case the brand_id is required"
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, only invoices from the specified brand will be returned. Required when client_id is provided as a list."
                },
                {
                    "param": "paid",
                    "name": "Paid Status",
                    "required": false,
                    "default": "all",
                    "description": "0 = Unpaid\n1 = Paid\n2 = Disregarded"
                },
                {
                    "param": "invoices",
                    "name": "Invoices IDs",
                    "required": false,
                    "default": null,
                    "description": "If specified, only invoices that have the ids provided will be returned."
                },
                {
                    "param": "services",
                    "name": "Services IDs",
                    "required": false,
                    "default": null,
                    "description": "If specified, only invoices that contain the services provided will be returned."
                },
                {
                    "param": "services_details",
                    "name": "Services Details",
                    "required": false,
                    "default": 0,
                    "description": "0 = do not include invoice services details, 1 = include invoice services details"
                },
                {
                    "param": "since",
                    "name": "Start Date",
                    "required": false,
                    "default": null,
                    "description": "If specified, only invoices generated on or after this date will be returned."
                },
                {
                    "param": "end",
                    "name": "End Date",
                    "required": false,
                    "default": null,
                    "description": "If specified, only invoices generated on or before this date will be returned."
                },
                {
                    "param": "due_since",
                    "name": "Due Date Start Date",
                    "required": false,
                    "default": null,
                    "description": "If specified, only invoices due on or after this date will be returned."
                },
                {
                    "param": "due_end",
                    "name": "Due Date End Date",
                    "required": false,
                    "default": null,
                    "description": "If specified, only invoices due on or before this date will be returned."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "client_id",
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "invoice_payments": {
            "method": "client.invoice_payments",
            "title": "List an Invoice's Payments",
            "description": "This method is used to list an invoice's payments.",
            "params": [
                {
                    "param": "invoice_id",
                    "name": "Invoice ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "invoice_post_gw_payment": {
            "method": "client.invoice_post_gw_payment",
            "title": "Record a Payment",
            "description": "This method is used to record a payment received outside Ubersmith through Paypal, WorldPay, 2Checkout or an ACH provider.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "inv_id",
                    "name": "Invoice ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "gateway",
                    "name": "Gateway",
                    "required": true,
                    "default": null,
                    "description": "Possible values:\npaypal\nworldpay\n2checkout\nach"
                },
                {
                    "param": "amount",
                    "name": "Amount",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "transaction_id",
                    "name": "Transaction ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "invoice_received_payment": {
            "method": "client.invoice_received_payment",
            "title": "Mark Invoice as paid",
            "description": "This method is used to mark a client's invoice as paid in full with a specific payment type.",
            "params": [
                {
                    "param": "invid",
                    "name": "Invoice ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the invoice to process."
                },
                {
                    "param": "payment_type",
                    "name": "Payment Type",
                    "required": true,
                    "default": null,
                    "description": "Specify payment type: check, wire, cash..."
                },
                {
                    "param": "transaction_id",
                    "name": "Transaction ID",
                    "required": false,
                    "default": null,
                    "description": "Specify transaction ID"
                }
            ]
        },
        "invoice_threedsecure2_process": {
            "method": "client.invoice_threedsecure2_process",
            "title": "Execute a provider specific 3D secure action",
            "description": "This method is used to execute a provider specific 3D Secure action.",
            "params": [
                {
                    "param": "inv_id",
                    "name": "Invoice ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "amount",
                    "name": "The amount being paid for the invoice",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_info_id",
                    "name": "Payment Method ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "action",
                    "name": "Action",
                    "required": true,
                    "default": null,
                    "description": "Action to execute on the provider.\n\nAvailable actions:\n\nPaysafe Token\n - authenticate"
                },
                {
                    "param": "threedsecure",
                    "name": "Provider specific 3D Secure 2 parameters (array)",
                    "required": true,
                    "default": null,
                    "description": "Associative array of 3D Secure 2 parameters specific to each provider.\n\n<b>Paysafe Token:</b>\nValues associated with parameter `Action`: \"authenticate\"\n[\n  \"deviceFingerprintingId\" => String &lt;Required&gt;,\n  \"merchantUrl\" => String &lt;Required&gt;,\n  \"deviceChannel\" => Enum {BROWSER, SDK, 3RI} &lt;Default: BROWSER&gt;,\n  \"messageCategory\" => Enum {PAYMENT, NON_PAYMENT} &lt;Default: PAYMENT&gt;,\n  \"authenticationPurpose\" => Enum {INSTALMENT_TRANSACTION, PAYMENT_TRANSACTION, RECURRING_TRANSACTION, ADD_CARD, MAINTAIN_CARD, EMV_TOKEN_VERIFICATION} &lt;Default: PAYMENT_TRANSACTION&gt;\n]"
                }
            ]
        },
        "ip_assignment_add": {
            "method": "client.ip_assignment_add",
            "title": "Create a New IP Assignment",
            "description": "This method is used to create a new IP address assignment.",
            "params": [
                {
                    "param": "addr",
                    "name": "Address(es) to Assign",
                    "required": false,
                    "default": null,
                    "description": "String or Array, CIDR or range notation, example: 10.0.0.0 - 10.0.0.10."
                },
                {
                    "param": "cidr",
                    "name": "CIDR Assignment Size",
                    "required": false,
                    "default": null,
                    "description": "Automatically create one (1) new assignment of this size, only used if addr is not specified."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "If the service_id is not provided with the client_id the service_id will be set to 0."
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": "Providing the service_id will lookup the related client_id. Either the client_id or service_id must be provided."
                },
                {
                    "param": "group_id",
                    "name": "Group ID",
                    "required": false,
                    "default": null,
                    "description": "Providing a client_id requires that it belongs to the group_id. Providing the group_id will lookup the client_id."
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": 0,
                    "description": "Only used if the addr value is not provided."
                },
                {
                    "param": "pool_id",
                    "name": "Pool ID",
                    "required": false,
                    "default": 0,
                    "description": "Only used if the addr value is not provided."
                },
                {
                    "param": "block_id",
                    "name": "Block ID",
                    "required": false,
                    "default": 0,
                    "description": "Only used if the addr value is not provided."
                },
                {
                    "param": "assign_description",
                    "name": "Description",
                    "required": false,
                    "default": "",
                    "description": "A brief description of the IP assignment"
                },
                {
                    "param": "addr_type",
                    "name": "Address Type",
                    "required": false,
                    "default": 1,
                    "description": "1 = Global\n2 = Local\n4 = Gateway"
                }
            ]
        },
        "ip_assignment_list": {
            "method": "client.ip_assignment_list",
            "title": "List client IP Assignments",
            "description": "This method is used to list a client's IP assignments. It will list ips assigned to a client as well as a client's services and devices",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": null,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "latest_client": {
            "method": "client.latest_client",
            "title": "Get the Latest Client",
            "description": "This method is used to get the latest client in the system.",
            "params": []
        },
        "list": {
            "method": "client.list",
            "title": "List Clients",
            "description": "This method is used to list clients in the system.",
            "params": [
                {
                    "param": "short",
                    "name": "Short Output Mode",
                    "required": false,
                    "default": 0,
                    "description": "If set to 1, only the Client ID (and billing information if billing_info is set) will be returned."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, only the specified client will be returned."
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, only clients from the specified brand will be returned."
                },
                {
                    "param": "inactive",
                    "name": "Active Flag",
                    "required": false,
                    "default": 2,
                    "description": "Specify whether to return only active, only inactive, or all clients.\n1 = Inactive\n0 = Active\n2 = All"
                },
                {
                    "param": "active",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "1 = Clients\n2 = Leads\n0 = Deactivated"
                },
                {
                    "param": "qblistid",
                    "name": "QuickBooks ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, only the client which matches the specified QuickBooks ID will be returned."
                },
                {
                    "param": "tag_id",
                    "name": "Tag ID",
                    "required": false,
                    "default": null,
                    "description": "Filter clients by tag"
                },
                {
                    "param": "tag_ids",
                    "name": "Tag IDs",
                    "required": false,
                    "default": null,
                    "description": "Return only clients with the specified tags. An array of tag IDs"
                },
                {
                    "param": "metadata",
                    "name": "Include Custom Fields",
                    "required": false,
                    "default": 0,
                    "description": "If set to 1, all custom fields will be included.\n\t\t\tmetadata can also be an array of individual fields to include, ie. \"metadata[field_name1]=1 metadata[field_name2]=1 etc...\"\n\t\t\tNote that fields with show_in_list flag set will always be included even if metadata is not specificied or it is set to 0."
                },
                {
                    "param": "[any included custom field variable]",
                    "name": "Custom Field Filters",
                    "required": false,
                    "default": null,
                    "description": "Filter list by custom field values, ie. \"myfield1=somevalue myfield2=somevalue etc...\""
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "client_id",
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "lookup": {
            "method": "client.lookup",
            "title": "Look Up a Client",
            "description": "This method is used to look up a client.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "active",
                    "name": "Client Status",
                    "required": false,
                    "default": 1,
                    "description": "1 = Active\n0 = Deactivated"
                },
                {
                    "param": "first",
                    "name": "First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "last",
                    "name": "Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "company",
                    "name": "Company",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "listed_company",
                    "name": "Listed Company",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "full_name",
                    "name": "Full Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "address",
                    "name": "Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "city",
                    "name": "City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "state",
                    "name": "State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "zip",
                    "name": "Zip",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "country",
                    "name": "Country",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "phone",
                    "name": "Phone",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fax",
                    "name": "Fax",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "email",
                    "name": "Email",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "login",
                    "name": "Login",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "metadata_get": {
            "method": "client.metadata_get",
            "title": "Get a Client's Custom Fields",
            "description": "This method is used to get a client's custom fields.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "metadata_single": {
            "method": "client.metadata_single",
            "title": "Get a Client's Custom Field Value",
            "description": "This method is used to get a single custom field value from a client.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "metaconf_id",
                    "name": "Custom Field Item ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "variable",
                    "name": "Custom Field Variable Name",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "msa_assign": {
            "method": "client.msa_assign",
            "title": "Assign an MSA to a client",
            "description": "This method is used to assign an msa to a client",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "msa_id",
                    "name": "MSA ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "term",
                    "name": "Term",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "term_type",
                    "name": "Term type",
                    "required": false,
                    "default": "A unit of time for the term. Options: \n  m = Months\n  y = Years",
                    "description": ""
                },
                {
                    "param": "auto_renew",
                    "name": "Auto Renew",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "renew_term",
                    "name": "Renewal Term",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "term_renew_type",
                    "name": "Renewal Term Type",
                    "required": false,
                    "default": "A unit of time for the renewal term. Options: \n  m = Months\n  y = Years",
                    "description": ""
                },
                {
                    "param": "expires_after_cancel",
                    "name": "Expires after service cancellation",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "expires_term_type",
                    "name": "Expires after service cancellation Type",
                    "required": false,
                    "default": "A unit of time for the cancellation. Options: \n  d = Days\n  m = Months\n  y = Years",
                    "description": ""
                },
                {
                    "param": "pdf",
                    "name": "PDF",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "pdf_bound",
                    "name": "Add overlay",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "signed",
                    "name": "Signed",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "signer",
                    "name": "Signer",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ip_address",
                    "name": "IP Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "expires",
                    "name": "Expires",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "msa_get": {
            "method": "client.msa_get",
            "title": "Get Client MSA Details",
            "description": "This method is used to get the details of a specified client msa.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_msa_id",
                    "name": "Client MSA ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "format",
                    "name": "Format",
                    "required": false,
                    "default": "json",
                    "description": "Return format:\njson = JSON (default)\npdf  = PDF"
                }
            ]
        },
        "payment_list": {
            "method": "client.payment_list",
            "title": "List a Client's Payments",
            "description": "This method is used to list a client's payments.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "invoice_id",
                    "name": "Invoice ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "begin",
                    "name": "Begin Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. If empty, output will begin from the earliest payment."
                },
                {
                    "param": "end",
                    "name": "End Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. If empty, output will end at the most recent payment."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "payment_method_list": {
            "method": "client.payment_method_list",
            "title": "List a Client's Payment Methods",
            "description": "This method is used to list a client's payment methods.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "payment_refund": {
            "method": "client.payment_refund",
            "title": "Refund a payment.",
            "description": "This method is used to refund a payment, either in full or to specific payment items and/or tax payments.",
            "params": [
                {
                    "param": "pay_record_id",
                    "name": "Payment Record ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "note",
                    "name": "Notes",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "refund_items",
                    "name": "Refund Services",
                    "required": false,
                    "default": null,
                    "description": "An array of amounts keyed by payment_id to be refunded to specific payment items."
                },
                {
                    "param": "tax_items",
                    "name": "Refund Taxes",
                    "required": false,
                    "default": null,
                    "description": "An array of taxes keyed by tax_id to be refunded to specific tax payments"
                },
                {
                    "param": "full_refund",
                    "name": "Full Refund",
                    "required": false,
                    "default": null,
                    "description": "Boolean to determine if a full refund will be performed. Note that this will override any refund or tax items that are defined."
                },
                {
                    "param": "refund_type",
                    "name": "Refund Type",
                    "required": false,
                    "default": null,
                    "description": "Possible values:\nmark_refund_only = The refund will only be marked in the account and will not credit a client's credit card or bank.\nrefund_to_credit_balance = For an account credit refund, the amount will be returned to the credit balance."
                }
            ]
        },
        "paypal_refunded_payment_get": {
            "method": "client.paypal_refunded_payment_get",
            "title": "Get a PayPal refunded payment details",
            "description": "Fetch a PayPal refunded payment details",
            "params": [
                {
                    "param": "refund_transaction_id",
                    "name": "PayPal Refund Transaction ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": "The brand id from which the PayPal configurations should be taken"
                }
            ]
        },
        "paypal_subscription_add": {
            "method": "client.paypal_subscription_add",
            "title": "Create a new Paypal Subscription",
            "description": "Create a new Paypal subscription. An approval link will be returned. The client can approve it directly in the client portal.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": "The client ID"
                },
                {
                    "param": "services",
                    "name": "A list of services, eg: &services[0]=5&services[1]=12",
                    "required": true,
                    "default": null,
                    "description": "Services must be active and belong to client_id. Services should have the same period. One-time fee servies will not be included."
                },
                {
                    "param": "payment_failure_threshold",
                    "name": "Payment Failure Threshold",
                    "required": false,
                    "default": 5,
                    "description": "The maximum number of payment failures before a subscription is suspended. For example, if payment_failure_threshold is 2, the subscription automatically updates to the SUSPEND state if two consecutive payments fail."
                },
                {
                    "param": "setup_fee_failure_action",
                    "name": "Setup fee Failure Action",
                    "required": false,
                    "default": "CONTINUE",
                    "description": "Only applicable if the subscription conatin a one-time fee service. The action to take on the subscription if the initial payment for the setup fails. Possible values: CONTINUE (continues the subscription if the initial payment for the setup fails), or CANCEL (cancels the subscription if the initial payment for the setup fails)."
                },
                {
                    "param": "payment_method_preference",
                    "name": "Payment Method Preference",
                    "required": false,
                    "default": "IMMEDIATE_PAYMENT_REQUIRED",
                    "description": "The merchant-preferred payment methods. Possible values: UNRESTRICTED (accepts any type of payment from the customer), or IMMEDIATE_PAYMENT_REQUIRED (accepts only immediate payment from the customer. For example, credit card, PayPal balance, or instant ACH. Ensures that at the time of capture, the payment does not have the pending status)."
                },
                {
                    "param": "start_time",
                    "name": "Start Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. The date and time when the subscription started. Should be a time in the future."
                }
            ]
        },
        "paypal_subscription_get": {
            "method": "client.paypal_subscription_get",
            "title": "Get Paypal Subscription",
            "description": "Get Paypal subscription Data.",
            "params": [
                {
                    "param": "id",
                    "name": "Subscription ID",
                    "required": true,
                    "default": null,
                    "description": "It can be the Ubersmith subscription ID or the PayPal subscription ID"
                }
            ]
        },
        "paypal_subscription_list": {
            "method": "client.paypal_subscription_list",
            "title": "List Paypal Subscriptions",
            "description": "List Paypal subscriptions for every client or optionally for a specific client.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "All stsuses will be returned if not specified. can be an array of many statuses. Possible values:\nACTIVE = Only list active subscriptions\nCANCELLED = Only list canceled subscriptions\nEXPIRED = Only list expired subscriptions\nAPPROVAL_PENDING = Only list approval pending subscriptions\n"
                }
            ]
        },
        "paypal_transaction_details_get": {
            "method": "client.paypal_transaction_details_get",
            "title": "Get a PayPal Transaction Information",
            "description": "Fetch a PayPal transaction information",
            "params": [
                {
                    "param": "transaction_id",
                    "name": "Transaction ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "config",
                    "name": "PayPal configuration",
                    "required": false,
                    "default": "payment_gateway",
                    "description": "Specify which configuration should be used to communicate with the PayPal API. possible values: payment_gateway, billing_agreement"
                }
            ]
        },
        "permission_get": {
            "method": "client.permission_get",
            "title": "Get Client Permission",
            "description": "This method is used to get a client permission.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "resource_name",
                    "name": "Resource Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "action",
                    "name": "Action",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "permission_list": {
            "method": "client.permission_list",
            "title": "List Client Permissions",
            "description": "This method is used to return a tree/list of client permissions.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "resource_name",
                    "name": "Resource Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "effective",
                    "name": "Include Effective Actions",
                    "required": false,
                    "default": 0,
                    "description": "Include the effective (inherited) actions along with explicit actions"
                }
            ]
        },
        "permission_set": {
            "method": "client.permission_set",
            "title": "Set Client Permissions",
            "description": "This method is used to set client permissions.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "resource_name",
                    "name": "Resource Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "action",
                    "name": "Action",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "type",
                    "name": "Permission Type",
                    "required": true,
                    "default": null,
                    "description": "Available values: allow, deny, inherit"
                }
            ]
        },
        "quote_add": {
            "method": "client.quote_add",
            "title": "Add a New Quote",
            "description": "Adds a new quote to a client's account.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Quote Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "owner",
                    "name": "Owner",
                    "required": true,
                    "default": null,
                    "description": "An admin username or their ID number"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": "Specify the status of the quote. Options:\n  1 = Draft\n  2 = Waiting Approval\n  4 = Open\n  32 = Persistent\n  8 = Signed\n  16 = Cancelled"
                },
                {
                    "param": "order_queue_id",
                    "name": "Order Queue ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "term",
                    "name": "Term Length",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "term_type",
                    "name": "Term Type",
                    "required": false,
                    "default": "m",
                    "description": "Type of term.\nm = Months\ny = Years"
                },
                {
                    "param": "expires",
                    "name": "Expires On",
                    "required": false,
                    "default": null,
                    "description": "Expiration date of the quote. May be specified as a Unix timestamp or a php-compatible date string."
                },
                {
                    "param": "notes",
                    "name": "Notes",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "quote_comment_list": {
            "method": "client.quote_comment_list",
            "title": "List a Quote's Comments",
            "description": "This method is used to list a quote's comments.",
            "params": [
                {
                    "param": "quote_id",
                    "name": "Quote ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "filter_text",
                    "name": "Filter Text",
                    "required": false,
                    "default": null,
                    "description": "An array of strings to match against comments and attachment filenames. Comments which match all terms are returned."
                },
                {
                    "param": "client_viewable",
                    "name": "Client Viewable",
                    "required": false,
                    "default": null,
                    "description": "If client_viewable needs to be filtered (1 to only show client_viewable)"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "quote_duplicate": {
            "method": "client.quote_duplicate",
            "title": "Duplicate an Existing Quote",
            "description": "Duplicates a quote.",
            "params": [
                {
                    "param": "quote_id",
                    "name": "Quote ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "The specified client must be active and under the same brand as the quote's client"
                }
            ]
        },
        "quote_get": {
            "method": "client.quote_get",
            "title": "Get an Quote",
            "description": "This method is used to get details of a quote.",
            "params": [
                {
                    "param": "quote_id",
                    "name": "Quote ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "format",
                    "name": "Format",
                    "required": false,
                    "default": "json",
                    "description": "Return format:\njson = JSON (default)\npdf  = PDF"
                }
            ]
        },
        "quote_list": {
            "method": "client.quote_list",
            "title": "List Quotes",
            "description": "Lists quotes.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Client ID"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Options:\n  1 = Draft\n  2 = Waiting Approval\n  4 = Open\n  32 = Persistent\n  8 = Signed\n  16 = Cancelled"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "client_id",
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "quote_service_add": {
            "method": "client.quote_service_add",
            "title": "Add a New Service to a Quote",
            "description": "Adds a service to a quote.",
            "params": [
                {
                    "param": "quote_id",
                    "name": "Quote ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "desserv",
                    "name": "Description",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "plan_id",
                    "name": "Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "period",
                    "name": "Billing Period",
                    "required": true,
                    "default": null,
                    "description": "A numeric period, a list of which can be generated from the client.billing_period_list API method"
                },
                {
                    "param": "parent",
                    "name": "Parent Service",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "quantity",
                    "name": "Quantity",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "discount",
                    "name": "Discount",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "discount_type",
                    "name": "Discount Type",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "bill_type",
                    "name": "Bill Type",
                    "required": false,
                    "default": 1,
                    "description": "Calculate Billing by Month: 1, Billing by Period: 0"
                },
                {
                    "param": "setup_discount",
                    "name": "Setup Discount",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "setup_discount_type",
                    "name": "Setup Discount Type",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "setup_qs",
                    "name": "Setup Fee Quantity Discount",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "price",
                    "name": "Price",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "setup",
                    "name": "Setup Fee",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "options",
                    "name": "Options",
                    "required": false,
                    "default": 0,
                    "description": "A two-dimensional array. The first key is the Service Plan Upgrade ID. The second key is the field name. Example:\n  options[23][po_id]=82\n  options[23][price]=5.00\n  options[23][setup]=5.00\n  options[23][discount]=0\n  options[23][discount_type]=0\n  options[23][setup_discount]=0\n  options[23][setup_discount_type]=0\n  options[23][inv_hide]=0"
                },
                {
                    "param": "notes",
                    "name": "Notes",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "tax_engine_id",
                    "name": "Tax Engine ID",
                    "required": false,
                    "default": null,
                    "description": "Tax engine to use for this service, specify 0 to use the internal tax engine. If not set, the default value will be taken from the specified service plan."
                },
                {
                    "param": "taxes",
                    "name": "Array of Applicable Taxes",
                    "required": false,
                    "default": null,
                    "description": "A 2D array of taxes with key as tax_id and value as numeric boolean"
                },
                {
                    "param": "meta_*",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                }
            ]
        },
        "quote_service_delete": {
            "method": "client.quote_service_delete",
            "title": "Deletes an Existing Quote Service",
            "description": "Deletes a quote's service.",
            "params": [
                {
                    "param": "quote_service_id",
                    "name": "Quote Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "quote_service_duplicate": {
            "method": "client.quote_service_duplicate",
            "title": "Duplicate an Existing Quote Service",
            "description": "Copies a quote's service.",
            "params": [
                {
                    "param": "quote_id",
                    "name": "Quote ID",
                    "required": true,
                    "default": null,
                    "description": "The quote to which the copied service should go."
                },
                {
                    "param": "quote_service_id",
                    "name": "Quote Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "quote_service_update": {
            "method": "client.quote_service_update",
            "title": "Update an Existing Quote Service",
            "description": "Edits a quote's service.",
            "params": [
                {
                    "param": "quote_service_id",
                    "name": "Quote Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "desserv",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "plan_id",
                    "name": "Plan ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "parent",
                    "name": "Parent Service",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "quantity",
                    "name": "Quantity",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "period",
                    "name": "Billing Period",
                    "required": false,
                    "default": null,
                    "description": "A numeric period, a list of which can be generated from the client.billing_period_list API method"
                },
                {
                    "param": "discount",
                    "name": "Discount",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "discount_type",
                    "name": "Discount Type",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "bill_type",
                    "name": "Bill Type",
                    "required": false,
                    "default": null,
                    "description": "Calculate Billing by Month: 1, Billing by Period: 0"
                },
                {
                    "param": "setup_discount",
                    "name": "Setup Discount",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "setup_discount_type",
                    "name": "Setup Discount Type",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "setup_qs",
                    "name": "Setup Fee Quantity Discount",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "price",
                    "name": "Price",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "setup",
                    "name": "Setup Fee",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "options",
                    "name": "Options",
                    "required": false,
                    "default": 0,
                    "description": "A two-dimensional array. The first key is the Service Plan Upgrade ID. The second key is the field name. Example:\n  options[23][po_id]=82\n  options[23][price]=5.00\n  options[23][setup]=5.00\n  options[23][discount]=0\n  options[23][discount_type]=0\n  options[23][setup_discount]=0\n  options[23][setup_discount_type]=0\n  options[23][inv_hide]=0"
                },
                {
                    "param": "notes",
                    "name": "Notes",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "meta_*",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "tax_engine_id",
                    "name": "Tax Engine ID",
                    "required": false,
                    "default": null,
                    "description": "Tax engine to use for this service, specify 0 to use the internal tax engine. If not set, the default value will be taken from the specified service plan."
                },
                {
                    "param": "taxes",
                    "name": "Array of Applicable Taxes",
                    "required": false,
                    "default": null,
                    "description": "A 2D array of taxes with key as tax_id and value as numeric boolean"
                }
            ]
        },
        "quote_sign": {
            "method": "client.quote_sign",
            "title": "Sign and Authorize a Quote",
            "description": "Sign and authorize a quote, as well as set the payment method.",
            "params": [
                {
                    "param": "quote_id",
                    "name": "Quote ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "signer",
                    "name": "Name of Signer",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "signer_ip",
                    "name": "IP address of the signer",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billing_info_id",
                    "name": "Billing Info ID",
                    "required": false,
                    "default": null,
                    "description": "Billing Info ID or -1 for wire/check/Paypal"
                },
                {
                    "param": "cc_num",
                    "name": "Credit Card Number",
                    "required": false,
                    "default": null,
                    "description": "Only required if adding new cc billing information."
                },
                {
                    "param": "cc_cvv2",
                    "name": "Credit Card Verification",
                    "required": false,
                    "default": null,
                    "description": "Only required if adding new cc billing information."
                },
                {
                    "param": "cc_exp",
                    "name": "Credit Card Expiration",
                    "required": false,
                    "default": null,
                    "description": "Only required if adding new cc billing information."
                },
                {
                    "param": "contract",
                    "name": "File containing Contract",
                    "required": false,
                    "default": null,
                    "description": "The contract file. When using cURL the value for the contract parameter should be @<filename> where <filename> is the contract you wish to attach"
                },
                {
                    "param": "ach_acct",
                    "name": "Account Number",
                    "required": false,
                    "default": null,
                    "description": "Only required if adding new ach billing information."
                },
                {
                    "param": "ach_aba",
                    "name": "Routing Number",
                    "required": false,
                    "default": null,
                    "description": "Only required if adding new ach billing information."
                },
                {
                    "param": "ach_type",
                    "name": "Account Type",
                    "required": false,
                    "default": null,
                    "description": "C = Checking S = Savings. Only required if adding new ach billing information."
                },
                {
                    "param": "ach_bank",
                    "name": "Bank Name",
                    "required": false,
                    "default": null,
                    "description": "Only required if adding new ach billing information."
                },
                {
                    "param": "first",
                    "name": "Client First Name",
                    "required": false,
                    "default": null,
                    "description": "Only required if overriding default client data."
                },
                {
                    "param": "last",
                    "name": "Client Last Name",
                    "required": false,
                    "default": null,
                    "description": "Only required if overriding default client data."
                },
                {
                    "param": "email",
                    "name": "Client Email",
                    "required": false,
                    "default": null,
                    "description": "Only required if overriding default client data."
                },
                {
                    "param": "company",
                    "name": "Client Company",
                    "required": false,
                    "default": null,
                    "description": "Only required if overriding default client data."
                },
                {
                    "param": "address",
                    "name": "Client Address",
                    "required": false,
                    "default": null,
                    "description": "Only required if overriding default client data."
                },
                {
                    "param": "city",
                    "name": "Client City",
                    "required": false,
                    "default": null,
                    "description": "Only required if overriding default client data."
                },
                {
                    "param": "state",
                    "name": "Client State",
                    "required": false,
                    "default": null,
                    "description": "Only required if overriding default client data."
                },
                {
                    "param": "zip",
                    "name": "Client Zip Code",
                    "required": false,
                    "default": null,
                    "description": "Only required if overriding default client data."
                },
                {
                    "param": "country",
                    "name": "Client Country",
                    "required": false,
                    "default": null,
                    "description": "Only required if overriding default client data."
                },
                {
                    "param": "phone",
                    "name": "Client Phone",
                    "required": false,
                    "default": null,
                    "description": "Only required if overriding default client data."
                },
                {
                    "param": "threedsecure",
                    "name": "Provider specific 3D Secure parameters (array)",
                    "required": false,
                    "default": null,
                    "description": "Associative array of 3D Secure 2 parameters specific to each credit card gateway provider.\n\n<b>Paysafe Token:</b>\n[\n\"authentication_id\" => String &lt;Required&gt;\n]\n\n<b>Braintree Token:</b>\n[\n\"payment_method_nonce\" => String &lt;Required&gt;\n]\n\n<b>Stripe:</b>\n[\n\"payment_intent_id\" => String &lt;Required&gt;\n]\n\n<b>Sage Pay Token (3dSecure v2): </b>\n[\n\"ThreeDSNotificationURL\" => String <Required>\n\"BrowserColorDepth\" => Number <Optional> default 24\n\"BrowserScreenHeight\" => Number <Optional> default 1080\n\"BrowserScreenWidth\" => Number <Optional> default 1920\n\"BrowserTZ\" => Number <Optional> default 240\n\"BrowserLanguage\" => String <Optional> default \"en-US\"\n\"ChallengeWindowSize\" => String <Optional> default \"03\"\n\"InitiatedType\" => \"CIT\" or \"MIT\" <Optional> default \"CIT\"\n]\n\nInitiatedType is used to send the transaction as Client Inititated Transaction(CIT)\nor Merchant Initiated Transaction(MIT). CIT should be used when the client is on session\nand MIT during automated charge where the client is off session.\n\nIf a challenge was required, the result must be sent via those key. They should be added to the threedsecure parameter:\n[\n\"vpstxid_or_md\" => String <Required>\n\"cres_or_pares\" => String <Required>\n\"ThreeDSNotificationURL\" => String <Required>\n...\n]\n\nThey should have been posted by the bank to the specified ThreeDSNotificationURL once the challenge is completed by the customer."
                }
            ]
        },
        "quote_update": {
            "method": "client.quote_update",
            "title": "Update an Existing Quote",
            "description": "Edits a quote.",
            "params": [
                {
                    "param": "quote_id",
                    "name": "Quote ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Quote Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "owner",
                    "name": "Owner",
                    "required": false,
                    "default": null,
                    "description": "An admin username or their ID number"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Specify the status of the quote. Options:\n  1 = Draft\n  2 = Waiting Approval\n  4 = Open\n  32 = Persistent\n  8 = Signed\n  16 = Cancelled"
                },
                {
                    "param": "order_queue_id",
                    "name": "Order Queue ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "term",
                    "name": "Term Length",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "term_type",
                    "name": "Term Type",
                    "required": false,
                    "default": null,
                    "description": "Type of term.\nm = Months\ny = Years"
                },
                {
                    "param": "expires",
                    "name": "Expires On",
                    "required": false,
                    "default": null,
                    "description": "Expiration date of the quote. May be specified as a Unix timestamp or a php-compatible date string."
                },
                {
                    "param": "notes",
                    "name": "Notes",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "reactivate": {
            "method": "client.reactivate",
            "title": "Reactivate a Client",
            "description": "This method is used to reactivate a client.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "refund_list": {
            "method": "client.refund_list",
            "title": "List a Client's Refunds",
            "description": "This method is used to list a client's refunds.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "invoice_id",
                    "name": "Invoice ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "begin",
                    "name": "Begin Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. If empty, output will begin from the earliest refund."
                },
                {
                    "param": "end",
                    "name": "End Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. If empty, output will end at the most recent refund."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "renewal_list": {
            "method": "client.renewal_list",
            "title": "List Services for Renewal",
            "description": "This method is used to generate a list of services which are due for renewal in the specified period.",
            "params": [
                {
                    "param": "user_login",
                    "name": "Client Login",
                    "required": true,
                    "default": null,
                    "description": "Client's login name or ID."
                }
            ]
        },
        "send_account_statement": {
            "method": "client.send_account_statement",
            "title": "Send Account Statement",
            "description": "This method is used to send a client account statement.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "send_welcome": {
            "method": "client.send_welcome",
            "title": "Send a Welcome Letter",
            "description": "This method is used to send the welcome letter to a client.",
            "params": [
                {
                    "param": "user_login",
                    "name": "Client Login",
                    "required": true,
                    "default": null,
                    "description": "Client's login name or ID."
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "body",
                    "name": "Welcome Letter Body",
                    "required": false,
                    "default": "service plan or system default",
                    "description": ""
                },
                {
                    "param": "subject",
                    "name": "Welcome Letter Subject",
                    "required": false,
                    "default": "service plan or system default",
                    "description": ""
                },
                {
                    "param": "reply",
                    "name": "Reply-To Address",
                    "required": false,
                    "default": "service plan or system default",
                    "description": ""
                },
                {
                    "param": "service",
                    "name": "Service Description",
                    "required": false,
                    "default": "from service",
                    "description": ""
                },
                {
                    "param": "ipaddress",
                    "name": "IP Address",
                    "required": false,
                    "default": "from service",
                    "description": ""
                },
                {
                    "param": "username",
                    "name": "Username",
                    "required": false,
                    "default": "from service",
                    "description": ""
                },
                {
                    "param": "password",
                    "name": "Password",
                    "required": false,
                    "default": "from service",
                    "description": ""
                },
                {
                    "param": "servername",
                    "name": "Service Domain or Server Name",
                    "required": false,
                    "default": "from service",
                    "description": ""
                },
                {
                    "param": "email",
                    "name": "Email Address",
                    "required": false,
                    "default": "client email",
                    "description": ""
                }
            ]
        },
        "service_add": {
            "method": "client.service_add",
            "title": "Add a New Service",
            "description": "This method is used to add a new service to a client's account.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "description",
                    "name": "Service Description",
                    "required": false,
                    "default": null,
                    "description": "Required if Service Plan is not specified."
                },
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": false,
                    "default": null,
                    "description": "Overrides servtype if specified."
                },
                {
                    "param": "servtype",
                    "name": "Service Plan code",
                    "required": false,
                    "default": null,
                    "description": "Deprecated."
                },
                {
                    "param": "parent_id",
                    "name": "Parent Service ID",
                    "required": false,
                    "default": null,
                    "description": "To create the new service as a child of a preexisting service, set this parameter to the id of the parent service. The new service will be created as its child."
                },
                {
                    "param": "period",
                    "name": "Period",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "price",
                    "name": "Price",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "bill_type",
                    "name": "How Pricing is Calculated",
                    "required": false,
                    "default": 0,
                    "description": "Specifies if the renewal cost of the service should be determined by month or by period.\n0 = By Period\n1 = By Month\nIf not set, the default value will be taken from the specified service plan. If no service plan is specified, By Period pricing is used."
                },
                {
                    "param": "quantity",
                    "name": "Quantity",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Service Status",
                    "required": false,
                    "default": 1,
                    "description": "1 = Active\n2 = Pending\n3 = Suspended\n4 = Cancelled"
                },
                {
                    "param": "discount",
                    "name": "Discount Level",
                    "required": false,
                    "default": null,
                    "description": "The discount level for the service, specified either as a dollar amount or a percentage (the default)."
                },
                {
                    "param": "discount_type",
                    "name": "Discount Type",
                    "required": false,
                    "default": null,
                    "description": "The method for calculating the discount:\n0 = percentage\n1 = dollar value"
                },
                {
                    "param": "auto_bill",
                    "name": "Automatically Charge",
                    "required": false,
                    "default": 0,
                    "description": "This setting determines if the service should be included when the system tries to charge the client's credit card to pay an invoice. If not set, the default value will be taken from the specified service plan."
                },
                {
                    "param": "setup",
                    "name": "Setup Fee Amount",
                    "required": false,
                    "default": 0,
                    "description": "If non-zero, a one time 'setup' child service will be added for that amount. The bill_type and auto_bill settings will match those of the main service being added."
                },
                {
                    "param": "post_renew",
                    "name": "Post Renew Flag",
                    "required": false,
                    "default": 0,
                    "description": "Setting this flag to 1 will enable Post Renew functionality for the service. This is only required for very specific situations and in general isn't needed."
                },
                {
                    "param": "bill_prior",
                    "name": "Number of Days Before to Bill for Service",
                    "required": false,
                    "default": 0,
                    "description": "If specified, the service will be billed in advance for upcoming renewals. Use this in conjunction with the cancel_after setting to prevent renewals for unpaid services. This cannot be used together with post_renew."
                },
                {
                    "param": "suspend_bool",
                    "name": "Auto Suspend Enable",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to enable automatic service suspension if an invoice goes unpaid for suspend_after days."
                },
                {
                    "param": "suspend_after",
                    "name": "Auto Suspend After X Days",
                    "required": false,
                    "default": 0,
                    "description": "Number of days after which to suspend unpaid services."
                },
                {
                    "param": "cancel_bool",
                    "name": "Auto Cancel Enable",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to enable automatic service cancellation if an invoice goes unpaid for cancel_after days."
                },
                {
                    "param": "cancel_after",
                    "name": "Auto Cancel After X Days",
                    "required": false,
                    "default": 0,
                    "description": "Number of days after which to cancel unpaid services."
                },
                {
                    "param": "planned_activation_date",
                    "name": "Planned Activation Date",
                    "required": false,
                    "default": 0,
                    "description": "The date on which the service is intended to be provided to the client.  For reporting purposes only."
                },
                {
                    "param": "activation_date",
                    "name": "Activation Date",
                    "required": false,
                    "default": 0,
                    "description": "The date on which the service gets provided to the client."
                },
                {
                    "param": "client_acceptance_date",
                    "name": "Client Acceptance Date",
                    "required": false,
                    "default": 0,
                    "description": "The date on which the client approved the provided service.  For reporting purposes only."
                },
                {
                    "param": "expected_cancellation_date",
                    "name": "Expected Cancellation Date",
                    "required": false,
                    "default": 0,
                    "description": "The date on which the service will likely be ended. For reporting purposes only."
                },
                {
                    "param": "start",
                    "name": "Billing Start Date",
                    "required": false,
                    "default": "current date",
                    "description": "When the service should start."
                },
                {
                    "param": "end",
                    "name": "End Date",
                    "required": false,
                    "default": 0,
                    "description": "When the service should end. Setting it to 0 will create a service with no end date."
                },
                {
                    "param": "userid",
                    "name": "Service User ID",
                    "required": false,
                    "default": null,
                    "description": "A user id for the service."
                },
                {
                    "param": "pass",
                    "name": "Service Password",
                    "required": false,
                    "default": null,
                    "description": "A password for the service."
                },
                {
                    "param": "server",
                    "name": "Service Domain or Server Name",
                    "required": false,
                    "default": null,
                    "description": "A domain or server name for the service."
                },
                {
                    "param": "ip_address",
                    "name": "Service IP Address",
                    "required": false,
                    "default": null,
                    "description": "An IP address for the service."
                },
                {
                    "param": "options",
                    "name": "Service Options Array",
                    "required": false,
                    "default": null,
                    "description": "The option array matrix.\nFormat:\n  options[upgrade_id][type]=value\n\nOptions for \"type\": po_id, price, discount, discount_type, cost, inv_hide\n\nExample:\n  options[0][po_id]=100\n  options[0][price]=10.00\n  options[3][po_id]=101\n  options[3][price]=22.00"
                },
                {
                    "param": "tax_engine_id",
                    "name": "Tax Engine ID",
                    "required": false,
                    "default": null,
                    "description": "Tax engine to use for this service, specify 0 to use the internal tax engine. If not set, the default value will be taken from the specified service plan."
                },
                {
                    "param": "tax_trans_type_code",
                    "name": "Transaction Type Code",
                    "required": false,
                    "default": null,
                    "description": "Transaction Type Code for third party tax engine use. If not set, or passed as an empty string, the system will always use the code set in the service plan."
                },
                {
                    "param": "tax_situs_code",
                    "name": "Situs Rule (US/Canada)",
                    "required": false,
                    "default": null,
                    "description": "Situs Rule for third party tax engine use (US/Canada). If not set, or passed as an empty string, the system will always use the code set in the service plan."
                },
                {
                    "param": "tax_situs_code_world",
                    "name": "Situs Rule (Non US/Canada)",
                    "required": false,
                    "default": null,
                    "description": "Situs Rule for third party tax engine use (Non US/Canada). If not set, or passed as an empty string, the system will always use the code set in the service plan."
                },
                {
                    "param": "tax_zip_code",
                    "name": "Zip Code",
                    "required": false,
                    "default": null,
                    "description": "Zip Code for third party tax engine use."
                },
                {
                    "param": "tax_p2p_zip_code",
                    "name": "Point to Point Zip Code",
                    "required": false,
                    "default": null,
                    "description": "Point to Point Zip Code for third party tax engine use."
                },
                {
                    "param": "tax_trans_type_code_setup",
                    "name": "Setup Fee Transaction Type Code",
                    "required": false,
                    "default": null,
                    "description": "Setup Fee Transaction Type Code for third party tax engine use. If not set, or passed as an empty string, the setup fee service will be set to use the plan default."
                },
                {
                    "param": "tax_situs_code_setup",
                    "name": "Setup Fee Situs Rule (US/Canada)",
                    "required": false,
                    "default": null,
                    "description": "Setup Fee Situs Rule for third party tax engine use (US/Canada). If not set, or passed as an empty string, the setup fee service will be set to the use the plan default."
                },
                {
                    "param": "tax_situs_code_setup_world",
                    "name": "Setup Fee Situs Rule (Non US/Canada)",
                    "required": false,
                    "default": null,
                    "description": "Setup Fee Situs Rule for third party tax engine use (Non US/Canada). If not set, or passed as an empty string, the setup fee service will be set to the use the plan default."
                },
                {
                    "param": "tax_zip_code_setup",
                    "name": "Setup Fee Zip Code",
                    "required": false,
                    "default": null,
                    "description": "Setup Zip Code for third party tax engine use."
                },
                {
                    "param": "tax_p2p_zip_code_setup",
                    "name": "Point to Point Setup Fee Zip Code",
                    "required": false,
                    "default": null,
                    "description": "Point to Point Setup Zip Code for third party tax engine use."
                },
                {
                    "param": "taxes",
                    "name": "Taxes",
                    "required": false,
                    "default": null,
                    "description": "An array of tax ids which should be enabled for the service.\n\nExample:\n\tSet tax id 1 and 3 on the service:\n\ttaxes[1]=1\n\ttaxes[3]=3\n\n\tSet no taxes on the service:\n\ttaxes[0]=0"
                },
                {
                    "param": "setup_taxes",
                    "name": "Setup Taxes",
                    "required": false,
                    "default": null,
                    "description": "An array of tax ids which should be enabled for the setup fee (if applicable)."
                },
                {
                    "param": "comment",
                    "name": "Service Comment",
                    "required": false,
                    "default": null,
                    "description": "If specified, this text will be added as a comment on the service."
                },
                {
                    "param": "custom_notes",
                    "name": "Service Notes",
                    "required": false,
                    "default": null,
                    "description": "An array of custom service notes."
                },
                {
                    "param": "meta_*",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "facility_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": "Assigned facility for reporting purposes."
                },
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": false,
                    "default": null,
                    "description": "Assigned zone for reporting purposes."
                },
                {
                    "param": "balance",
                    "name": "Balance",
                    "required": false,
                    "default": null,
                    "description": "Balance of next billing period"
                },
                {
                    "param": "prorated",
                    "name": "Prorated",
                    "required": false,
                    "default": 0,
                    "description": "Flag that the balance is prorated"
                },
                {
                    "param": "renewdate",
                    "name": "Renewal Date",
                    "required": false,
                    "default": null,
                    "description": "Service renewal date"
                },
                {
                    "param": "contract_term_id",
                    "name": "Contract Term ID",
                    "required": false,
                    "default": null,
                    "description": "Contract to be associated with this service"
                },
                {
                    "param": "rate_plan_id",
                    "name": "Rate Plan ID",
                    "required": false,
                    "default": null,
                    "description": "Rate plan to be applied to this service"
                }
            ]
        },
        "service_comment_list": {
            "method": "client.service_comment_list",
            "title": "List a Service's Comments",
            "description": "This method is used to list a service's comments.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "filter_text",
                    "name": "Filter Text",
                    "required": false,
                    "default": null,
                    "description": "An array of strings to match against comments and attachment filenames. Comments which match all terms are returned."
                },
                {
                    "param": "client_viewable",
                    "name": "Client Viewable",
                    "required": false,
                    "default": null,
                    "description": "If client_viewable needs to be filtered (1 to only show client_viewable)"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "service_deactivate": {
            "method": "client.service_deactivate",
            "title": "Deactivate a Service",
            "description": "This method is used to deactivate a service associated with a client.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": "ID of the service to deactivate."
                }
            ]
        },
        "service_get": {
            "method": "client.service_get",
            "title": "Get a Service",
            "description": "This method is used to get a service associated with a client.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "metadata",
                    "name": "Custom Fields Flag",
                    "required": false,
                    "default": 0,
                    "description": "If set to 1, custom fields will be included."
                },
                {
                    "param": "modules",
                    "name": "Modules Flag",
                    "required": false,
                    "default": 0,
                    "description": "If set to 1, service module data will be included."
                },
                {
                    "param": "bill_date",
                    "name": "Bill Date",
                    "required": false,
                    "default": null,
                    "description": "If specified, return the effective cost for the date, default to current renewal period"
                },
                {
                    "param": "notes",
                    "name": "Notes Flag",
                    "required": false,
                    "default": 0,
                    "description": "If set to 1, service notes and service plan notes will be included."
                }
            ]
        },
        "service_list": {
            "method": "client.service_list",
            "title": "List a Client's Services",
            "description": "This method is used to list a client's services.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "parentpack",
                    "name": "Parent Service ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "period",
                    "name": "Period",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "pack_type_select",
                    "name": "Service Selection",
                    "required": false,
                    "default": 0,
                    "description": "0 = all current** active* services (recurring and one-time fees)\n1 = all current** active* recurring services\n2 = all current** active* one-time services\n3 = all services (including Cancelled and Deactivated)\n4 = all active* services that are not Deactivated and have not reached their end date (or have no end date set)\n\n* The term <b>active</b> represents services with Active, Pending and Suspended service statuses\n**The term <b>current</b> represents services with a start date which is NOT in the future, <b>and</b>:\na-) For services that are NOT one time fees:\n That have not reached their end date or have no end date\nb-) For one time fee services:\n That have a start or end date no older than 30 days ago"
                },
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "ID of order that created the service"
                },
                {
                    "param": "bill_date",
                    "name": "Bill Date",
                    "required": false,
                    "default": null,
                    "description": "If specified, return the effective cost for the date, default to today"
                },
                {
                    "param": "metadata",
                    "name": "Include Custom Fields",
                    "required": false,
                    "default": 0,
                    "description": "If set to 1, all custom fields will be included.\n\t\t\tmetadata can also be an array of individual fields to include, ie. \"metadata[field_name1]=1 metadata[field_name2]=1 etc...\"\n\t\t\tNote that fields with show_in_list flag set will always be included even if metadata is not specificied or it is set to 0."
                },
                {
                    "param": "[any included custom field variable]",
                    "name": "Custom Field Filters",
                    "required": false,
                    "default": null,
                    "description": "Filter list by custom field values, ie. \"myfield1=somevalue myfield2=somevalue etc...\""
                },
                {
                    "param": "options",
                    "name": "Include Service Options",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to include service options in output."
                },
                {
                    "param": "devices",
                    "name": "Include Devices",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to include associated devices in output."
                },
                {
                    "param": "modules",
                    "name": "Include Service Modules",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to include service modules in output."
                },
                {
                    "param": "notes",
                    "name": "Include Notes",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to include service notes and service plan notes in output."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "service_metadata_get": {
            "method": "client.service_metadata_get",
            "title": "Get a Service's Custom Fields",
            "description": "This method is used to get a service's custom fields.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "service_metadata_single": {
            "method": "client.service_metadata_single",
            "title": "Get a Service's Custom Field Value",
            "description": "This method is used to get a single custom field value from a service.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "metaconf_id",
                    "name": "Custom Field Item ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "variable",
                    "name": "Custom Field Variable Name",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "service_module_call": {
            "method": "client.service_module_call",
            "title": "Call a Service Module Function",
            "description": "This method is used to execute a service module function.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "module_id",
                    "name": "Module Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "function",
                    "name": "Function Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "module_params",
                    "name": "Parameters",
                    "required": false,
                    "default": null,
                    "description": "Array"
                }
            ]
        },
        "service_note_add": {
            "method": "client.service_note_add",
            "title": "Add a New Service Note",
            "description": "This method is used to add a service note.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "spn_id",
                    "name": "Service Plan Note ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, the service note will be customized based on an existing service plan note."
                },
                {
                    "param": "note",
                    "name": "Note Text",
                    "required": true,
                    "default": null,
                    "description": "The note text. Optional if service plan note id is specified."
                }
            ]
        },
        "service_note_delete": {
            "method": "client.service_note_delete",
            "title": "Delete a Service Note",
            "description": "This method is used to delete a service note.",
            "params": [
                {
                    "param": "note_id",
                    "name": "Note ID",
                    "required": true,
                    "default": null,
                    "description": "The note to delete."
                }
            ]
        },
        "service_note_update": {
            "method": "client.service_note_update",
            "title": "Update a Service Note",
            "description": "This method is used to update a service note.",
            "params": [
                {
                    "param": "note_id",
                    "name": "Note ID",
                    "required": true,
                    "default": null,
                    "description": "The note to update."
                },
                {
                    "param": "note",
                    "name": "Note Text",
                    "required": true,
                    "default": null,
                    "description": "The note text."
                }
            ]
        },
        "service_price_changes_list": {
            "method": "client.service_price_changes_list",
            "title": "List a Service's Price changes",
            "description": "This method is used to list a service's price changes.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "service_price_set": {
            "method": "client.service_price_set",
            "title": "Set a Service Price",
            "description": "This method is used to set a service price. If a price is already set for the specified date it will be updated.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "price",
                    "name": "Price",
                    "required": true,
                    "default": null,
                    "description": "The base price of the package for the time frame specified."
                },
                {
                    "param": "start_date",
                    "name": "Start Date",
                    "required": false,
                    "default": null,
                    "description": "The start date of the package price. If not set, it will default to today. See the distinction between creating and updating a Service Period in notes section below."
                },
                {
                    "param": "plan_id",
                    "name": "Plan ID",
                    "required": false,
                    "default": null,
                    "description": "The service plan ID of the package.\nIf not set, the default value will be taken from the specified service."
                },
                {
                    "param": "contract_term_id",
                    "name": "Contract Term ID",
                    "required": false,
                    "default": null,
                    "description": "Contract to be associated with this service price.\nIf not set, the default value will be taken from the specified service."
                },
                {
                    "param": "rate_plan_id",
                    "name": "Rate Plan ID",
                    "required": false,
                    "default": null,
                    "description": "Rate plan to be applied to this service price.\nIf not set, the default value will be taken from the specified service."
                },
                {
                    "param": "quantity",
                    "name": "Quantity",
                    "required": false,
                    "default": null,
                    "description": "Quantity of this service price\nIf not set, the default value will be taken from the specified service."
                },
                {
                    "param": "period",
                    "name": "Billing Period",
                    "required": false,
                    "default": null,
                    "description": "The billing period.\nIf not set, the default value will be taken from the specified service."
                },
                {
                    "param": "permanent",
                    "name": "Permanent",
                    "required": false,
                    "default": null,
                    "description": "If set to 1. The price will be overridden for all future billing periods."
                },
                {
                    "param": "bill_type",
                    "name": "Bill Calculated",
                    "required": false,
                    "default": null,
                    "description": "Specifies if the renewal cost of the service should be determined by month or by period.\nIf not set, the default value will be taken from the specified service.\nOptions: \n  0 = By Period\n  1 = By Month"
                },
                {
                    "param": "discount",
                    "name": "Discount",
                    "required": false,
                    "default": null,
                    "description": "The discount of the package for the time frame specified.\nIf not set, the default value will be taken from the specified service."
                },
                {
                    "param": "discount_type",
                    "name": "Discount Type",
                    "required": false,
                    "default": null,
                    "description": "The discount type of the package for the time frame specified.\nIf not set, the default value will be taken from the specified service."
                },
                {
                    "param": "options",
                    "name": "Service Options",
                    "required": false,
                    "default": null,
                    "description": "An array of options which should be enabled for the package price.\nIf not set, the default value will be taken from the specified service.\nThe option array matrix.\nFormat:\n  options[upgrade_id][type]=value\n\nOptions for \"type\": po_id, price, discount, discount_type, cost, inv_hide\n\nExample:\n  options[0][po_id]=100\n  options[0][price]=10.00\n  options[3][po_id]=101\n  options[3][price]=22.00"
                }
            ]
        },
        "service_prorate": {
            "method": "client.service_prorate",
            "title": "[Deprecated] Prorate a Service",
            "description": "This method is used to prorate a service associated with a client.\n\t\t[Deprecated]\n\t\tThis method is no longer in use. Prorate values are calculated automatically based on the New Renewal Date.\n\t\tThe use of `new_balance` or `reason` will generate an invalid parameter error.\n\t\t",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "new_renew",
                    "name": "New Renewal Date",
                    "required": false,
                    "default": "today",
                    "description": ""
                },
                {
                    "param": "new_balance",
                    "name": "[Removed] Desired Balance",
                    "required": false,
                    "default": null,
                    "description": "If not set, the system will determine the prorated balance based on the specified date."
                },
                {
                    "param": "reason",
                    "name": "[Removed] Prorate Reason",
                    "required": false,
                    "default": null,
                    "description": "If not set, the system will provide a default pro-rate reason based on the specified date."
                }
            ]
        },
        "service_storage_delete": {
            "method": "client.service_storage_delete",
            "title": "Delete a Service's Storage",
            "description": "This method is used to delete a service's storage.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "item",
                    "name": "Item",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "service_storage_get": {
            "method": "client.service_storage_get",
            "title": "Get a Service's Storage",
            "description": "This method is used to get a service's storage.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "item",
                    "name": "Item",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "service_storage_list": {
            "method": "client.service_storage_list",
            "title": "List a Service's Storage",
            "description": "This method is used to list a service's storage.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID(s)",
                    "required": false,
                    "default": null,
                    "description": "A single service ID or an array of service IDs"
                },
                {
                    "param": "items",
                    "name": "Item(s)",
                    "required": false,
                    "default": null,
                    "description": "A single item or an array of items"
                }
            ]
        },
        "service_storage_set": {
            "method": "client.service_storage_set",
            "title": "Set a Service's Storage",
            "description": "This method is used to set a service's storage.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "item",
                    "name": "Item",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "value",
                    "name": "Value",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "encrypt",
                    "name": "Encrypt",
                    "required": false,
                    "default": false,
                    "description": ""
                }
            ]
        },
        "service_update": {
            "method": "client.service_update",
            "title": "Update a Service",
            "description": "This method is used to update a service associated with a client.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "description",
                    "name": "Service Description",
                    "required": false,
                    "default": null,
                    "description": "Required if Service Plan is not specified."
                },
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": false,
                    "default": null,
                    "description": "Overrides servtype if specified."
                },
                {
                    "param": "servtype",
                    "name": "Service Plan code",
                    "required": false,
                    "default": null,
                    "description": "Deprecated."
                },
                {
                    "param": "parent_id",
                    "name": "Parent Service ID",
                    "required": false,
                    "default": null,
                    "description": "To create the new service as a child of a preexisting service, set this parameter to the id of the parent service. The new service will be created as its child."
                },
                {
                    "param": "period",
                    "name": "Period",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "price",
                    "name": "Price",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "bill_type",
                    "name": "How Pricing is Calculated",
                    "required": false,
                    "default": 0,
                    "description": "Specifies if the renewal cost of the service should be determined by month or by period.\n0 = By Period\n1 = By Month\nIf not set, the default value will be taken from the specified service plan. If no service plan is specified, By Period pricing is used."
                },
                {
                    "param": "quantity",
                    "name": "Quantity",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Service Status",
                    "required": false,
                    "default": 1,
                    "description": "1 = Active\n2 = Pending\n3 = Suspended\n4 = Cancelled"
                },
                {
                    "param": "discount",
                    "name": "Discount Level",
                    "required": false,
                    "default": null,
                    "description": "The discount level for the service, specified either as a dollar amount or a percentage (the default)."
                },
                {
                    "param": "discount_type",
                    "name": "Discount Type",
                    "required": false,
                    "default": null,
                    "description": "The method for calculating the discount:\n0 = percentage\n1 = dollar value"
                },
                {
                    "param": "auto_bill",
                    "name": "Automatically Charge",
                    "required": false,
                    "default": 0,
                    "description": "This setting determines if the service should be included when the system tries to charge the client's credit card to pay an invoice. If not set, the default value will be taken from the specified service plan."
                },
                {
                    "param": "post_renew",
                    "name": "Post Renew Flag",
                    "required": false,
                    "default": 0,
                    "description": "Setting this flag to 1 will enable Post Renew functionality for the service. This is only required for very specific situations and in general isn't needed."
                },
                {
                    "param": "bill_prior",
                    "name": "Number of Days Before to Bill for Service",
                    "required": false,
                    "default": 0,
                    "description": "If specified, the service will be billed in advance for upcoming renewals. Use this in conjunction with the cancel_after setting to prevent renewals for unpaid services. This cannot be used together with post_renew."
                },
                {
                    "param": "suspend_bool",
                    "name": "Auto Suspend Enable",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to enable automatic service suspension if an invoice goes unpaid for suspend_after days."
                },
                {
                    "param": "suspend_after",
                    "name": "Auto Suspend After X Days",
                    "required": false,
                    "default": 0,
                    "description": "Number of days after which to suspend unpaid services."
                },
                {
                    "param": "cancel_bool",
                    "name": "Auto Cancel Enable",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to enable automatic service cancellation if an invoice goes unpaid for cancel_after days."
                },
                {
                    "param": "cancel_after",
                    "name": "Auto Cancel After X Days",
                    "required": false,
                    "default": 0,
                    "description": "Number of days after which to cancel unpaid services."
                },
                {
                    "param": "planned_activation_date",
                    "name": "Planned Activation Date",
                    "required": false,
                    "default": 0,
                    "description": "The date on which the service is intended to be provided to the client.  For reporting purposes only."
                },
                {
                    "param": "activation_date",
                    "name": "Activation Date",
                    "required": false,
                    "default": 0,
                    "description": "The date on which the service gets provided to the client."
                },
                {
                    "param": "client_acceptance_date",
                    "name": "Client Acceptance Date",
                    "required": false,
                    "default": 0,
                    "description": "The date on which the client approved the provided service.  For reporting purposes only."
                },
                {
                    "param": "expected_cancellation_date",
                    "name": "Expected Cancellation Date",
                    "required": false,
                    "default": 0,
                    "description": "The date on which the service will likely be ended. For reporting purposes only."
                },
                {
                    "param": "start",
                    "name": "Billing Start Date",
                    "required": false,
                    "default": null,
                    "description": "When the service should start."
                },
                {
                    "param": "end",
                    "name": "End Date",
                    "required": false,
                    "default": 0,
                    "description": "When the service should end. Setting it to 0 will create a service with no end date."
                },
                {
                    "param": "lastrenew",
                    "name": "Last Renewal Date",
                    "required": false,
                    "default": null,
                    "description": "The last renewal date of the service."
                },
                {
                    "param": "renewdate",
                    "name": "Next Renewal Date",
                    "required": false,
                    "default": null,
                    "description": "The next renewal date of the service."
                },
                {
                    "param": "userid",
                    "name": "Service User ID",
                    "required": false,
                    "default": null,
                    "description": "A user id for the service."
                },
                {
                    "param": "pass",
                    "name": "Service Password",
                    "required": false,
                    "default": null,
                    "description": "A password for the service."
                },
                {
                    "param": "server",
                    "name": "Service Domain or Server Name",
                    "required": false,
                    "default": null,
                    "description": "A domain or server name for the service."
                },
                {
                    "param": "ip_address",
                    "name": "Service IP Address",
                    "required": false,
                    "default": null,
                    "description": "An IP address for the service."
                },
                {
                    "param": "options",
                    "name": "Service Options Array",
                    "required": false,
                    "default": null,
                    "description": "The option array matrix.\nFormat:\n  options[upgrade_id][type]=value\n\nOptions for \"type\": po_id, price, discount, discount_type, cost, inv_hide\n\nExample:\n  options[0][po_id]=100\n  options[0][price]=10.00\n  options[3][po_id]=101\n  options[3][price]=22.00\n\n See the notes section below for updating upgrade options of a service pricing period."
                },
                {
                    "param": "tax_engine_id",
                    "name": "Tax Engine ID",
                    "required": false,
                    "default": null,
                    "description": "Tax engine to use for this service, specify 0 to use the internal tax engine."
                },
                {
                    "param": "tax_trans_type_code",
                    "name": "Transaction Type Code",
                    "required": false,
                    "default": null,
                    "description": "Transaction Type Code for tax engine use. If set to blank, this value will be inherited from the specified service plan and will change when the plan's value changes."
                },
                {
                    "param": "tax_situs_code",
                    "name": "Situs Rule (US/Canada)",
                    "required": false,
                    "default": null,
                    "description": "Situs Rule for tax engine use (US/Canada). If set to blank, this value will be inherited from the specified service plan and will change when the plan's value changes."
                },
                {
                    "param": "tax_situs_code_world",
                    "name": "Situs Rule (Non US/Canada)",
                    "required": false,
                    "default": null,
                    "description": "Situs Rule for tax engine use (Non US/Canada). If set to blank, this value will be inherited from the specified service plan and will change when the plan's value changes."
                },
                {
                    "param": "tax_zip_code",
                    "name": "Zip Code",
                    "required": false,
                    "default": null,
                    "description": "Zip Code for tax engine use."
                },
                {
                    "param": "tax_p2p_zip_code",
                    "name": "Point to Point Zip Code",
                    "required": false,
                    "default": null,
                    "description": "Point to Point Zip Code for tax engine use."
                },
                {
                    "param": "taxes",
                    "name": "Taxes",
                    "required": false,
                    "default": null,
                    "description": "An array of tax ids which should be enabled for the service.\n\nExample:\n\tSet tax id 1 and 3 on the service:\n\ttaxes[1]=1\n\ttaxes[3]=3\n\n\tSet no taxes on the service:\n\ttaxes[0]=0"
                },
                {
                    "param": "meta_*",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "facility_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": "Assigned facility for reporting purposes."
                },
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": false,
                    "default": null,
                    "description": "Assigned zone for reporting purposes."
                },
                {
                    "param": "prorate",
                    "name": "Pro-rate Price Change",
                    "required": false,
                    "default": null,
                    "description": "1 = Pro-rate price change to the specified day,0 = Do not pro-rate price change."
                },
                {
                    "param": "prorate_date",
                    "name": "Pro-rate Date",
                    "required": false,
                    "default": null,
                    "description": "If specified together with prorate=1, this will be the effective date of the price change."
                },
                {
                    "param": "billed",
                    "name": "Billed Status",
                    "required": false,
                    "default": null,
                    "description": "The updated invoice status 0=unbilled, 1=billed, 2=pre-billed"
                },
                {
                    "param": "contract_term_id",
                    "name": "Contract Term ID",
                    "required": false,
                    "default": null,
                    "description": "Contract to be associated with this service"
                },
                {
                    "param": "rate_plan_id",
                    "name": "Rate Plan ID",
                    "required": false,
                    "default": null,
                    "description": "Rate plan to be applied to this service"
                }
            ]
        },
        "set_login": {
            "method": "client.set_login",
            "title": "Set a Client's Login",
            "description": "This method is used to set a client's login.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "uber_pass",
                    "name": "New Password",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "uber_login",
                    "name": "New Login Name",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "storage_delete": {
            "method": "client.storage_delete",
            "title": "Delete a Client's Storage",
            "description": "This method is used to delete a client's storage.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "item",
                    "name": "Item",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "storage_get": {
            "method": "client.storage_get",
            "title": "Get a Client's Storage",
            "description": "This method is used to get a client's storage.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "item",
                    "name": "Item",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "storage_list": {
            "method": "client.storage_list",
            "title": "List a Client's Storage",
            "description": "This method is used to list a client's storage.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID(s)",
                    "required": false,
                    "default": null,
                    "description": "A single client ID or an array of client IDs"
                },
                {
                    "param": "item",
                    "name": "Item(s)",
                    "required": false,
                    "default": null,
                    "description": "A single item or an array of items"
                }
            ]
        },
        "storage_set": {
            "method": "client.storage_set",
            "title": "Set a Client's Storage",
            "description": "This method is used to set a client's storage.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "item",
                    "name": "Item",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "value",
                    "name": "Value",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "encrypt",
                    "name": "Encrypt",
                    "required": false,
                    "default": false,
                    "description": ""
                }
            ]
        },
        "tax_exemption_add": {
            "method": "client.tax_exemption_add",
            "title": "Add a new Tax Exemption",
            "description": "This method is used to add a tax exemption for a client.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Client ID"
                },
                {
                    "param": "tax_exemption_type_id",
                    "name": "Tax Exemption Type ID",
                    "required": false,
                    "default": null,
                    "description": "Tax Exemption Type ID"
                },
                {
                    "param": "certificate_id",
                    "name": "Certificate ID",
                    "required": false,
                    "default": null,
                    "description": "Certificate ID"
                },
                {
                    "param": "start_date",
                    "name": "Effective Date",
                    "required": false,
                    "default": null,
                    "description": "Effective Date"
                },
                {
                    "param": "end_date",
                    "name": "Expiration Date",
                    "required": false,
                    "default": null,
                    "description": "Expiration Date. Set to 0 for none."
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "-1 = Pending Approval\n0 = Deactivated\n1 = Active"
                },
                {
                    "param": "pdf",
                    "name": "Certificate PDF",
                    "required": false,
                    "default": null,
                    "description": "PDF for certificate."
                }
            ]
        },
        "tax_exemption_get": {
            "method": "client.tax_exemption_get",
            "title": "Get a Client's Tax Exemption",
            "description": "This method is used to get a client's tax exemption.",
            "params": [
                {
                    "param": "tax_exemption_id",
                    "name": "Tax Exemption ID",
                    "required": true,
                    "default": null,
                    "description": "Tax Exemption ID"
                }
            ]
        },
        "tax_exemption_list": {
            "method": "client.tax_exemption_list",
            "title": "List a Client's Tax Exemptions",
            "description": "This method is used to list a client's tax exemptions.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Client ID"
                },
                {
                    "param": "tax_exemption_type_id",
                    "name": "Tax Exemption Type ID",
                    "required": false,
                    "default": null,
                    "description": "Tax Exemption Type ID"
                },
                {
                    "param": "certificate_id",
                    "name": "Certificate ID",
                    "required": false,
                    "default": null,
                    "description": "Certificate ID"
                },
                {
                    "param": "start_date",
                    "name": "Effective Date",
                    "required": false,
                    "default": null,
                    "description": "If specified, only tax exemptions effective on or after this date will be returned."
                },
                {
                    "param": "end_date",
                    "name": "Expiration Date",
                    "required": false,
                    "default": null,
                    "description": "If specified, only tax exemptions effective before this date will be returned."
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "-1 = Pending Approval\n0 = Deactivated\n1 = Active"
                },
                {
                    "param": "active",
                    "name": "Active Exemptions",
                    "required": false,
                    "default": null,
                    "description": "If set to 1 or TRUE, only active and unexpired tax exemptions will be returned."
                },
                {
                    "param": "inactive",
                    "name": "Inactive Exemptions",
                    "required": false,
                    "default": null,
                    "description": "If set to 1 or TRUE, only inactive and/or expired tax exemptions will be returned."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "tax_exemption_update": {
            "method": "client.tax_exemption_update",
            "title": "Update a Client's Tax Exemption",
            "description": "This method is used to update a Client's tax exemption.",
            "params": [
                {
                    "param": "tax_exemption_id",
                    "name": "Tax Exemption ID",
                    "required": true,
                    "default": null,
                    "description": "Tax Exemption ID"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Client ID"
                },
                {
                    "param": "tax_exemption_type_id",
                    "name": "Tax Exemption Type ID",
                    "required": false,
                    "default": null,
                    "description": "Tax Exemption Type ID"
                },
                {
                    "param": "certificate_id",
                    "name": "Certificate ID",
                    "required": false,
                    "default": null,
                    "description": "Certificate ID"
                },
                {
                    "param": "start_date",
                    "name": "Effective Date",
                    "required": false,
                    "default": null,
                    "description": "Effective Date"
                },
                {
                    "param": "end_date",
                    "name": "Expiration Date",
                    "required": false,
                    "default": null,
                    "description": "Expiration Date. Set to 0 for none."
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "-1 = Pending Approval\n0 = Deactivated\n1 = Active"
                },
                {
                    "param": "pdf",
                    "name": "Certificate PDF",
                    "required": false,
                    "default": null,
                    "description": "PDF for certificate. Set to FALSE to remove current file."
                }
            ]
        },
        "update": {
            "method": "client.update",
            "title": "Update a Client",
            "description": "This method is used to update a client's account information.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "first",
                    "name": "First Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "last",
                    "name": "Last Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "company",
                    "name": "Company",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "email",
                    "name": "Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "address",
                    "name": "Street Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "city",
                    "name": "City",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "state",
                    "name": "State/Province",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "zip",
                    "name": "Zip/Postcode",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "country",
                    "name": "Country",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "phone",
                    "name": "Telephone Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fax",
                    "name": "Fax Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "login_enabled",
                    "name": "Enable Login",
                    "required": false,
                    "default": null,
                    "description": "This determines whether the client can log into the client interface."
                },
                {
                    "param": "uber_login",
                    "name": "Username",
                    "required": false,
                    "default": null,
                    "description": "This is the username that the client will use to log in. If not specified the client id may be used to log in."
                },
                {
                    "param": "credit_bool",
                    "name": "Billing Method",
                    "required": false,
                    "default": 0,
                    "description": "The default client billing method to use. Acceptable ID values are obtained from the client.list_payment_method call."
                },
                {
                    "param": "grace_due",
                    "name": "Due Date Method",
                    "required": false,
                    "default": 0,
                    "description": "Method used to calculate invoice due date:\n0 = Grace Period (invoice is due 'datepay' days after generation)\n1 = Static Due Date (invoice is due on 'datedue' day of the month, only applicable to monthly invoicing)"
                },
                {
                    "param": "prebill_method",
                    "name": "Pre Bill Method",
                    "required": false,
                    "default": null,
                    "description": "Method used in conjunction with Pre Bill Days to determine how far in advance to bill for services. Acceptable values are: 0 - Do not pre bill, 1 - Pre bill up to <prebill_days> after Invoice Due Date, 2 - Pre bill up to <prebill_days> after Invoice Send Date."
                },
                {
                    "param": "prebill_days",
                    "name": "Pre Bill Days",
                    "required": false,
                    "default": null,
                    "description": "Number of days used in conjunction with Pre Bill Method to determine how far in advance to bill for services. A value of '0' will invoice up to, and including, either the Invoice Due Date (including any Grace Period) or Invoice Send Date as appropriate."
                },
                {
                    "param": "charge_days",
                    "name": "Charge Delay",
                    "required": false,
                    "default": null,
                    "description": "The number of days the system should wait after generating an invoice before charging any credit cards."
                },
                {
                    "param": "datesend",
                    "name": "Invoice Send Date",
                    "required": false,
                    "default": "system_default",
                    "description": "Day of the month client will be invoiced (monthly invoicing only)."
                },
                {
                    "param": "datedue",
                    "name": "Invoice Due Date",
                    "required": false,
                    "default": null,
                    "description": "Day of the month on which the invoice is due.\nIf datedue is less than or equal to datesend, the invoice will be due on that day of the following month."
                },
                {
                    "param": "datepay",
                    "name": "Grace Period",
                    "required": false,
                    "default": null,
                    "description": "Number of days after which the invoice will be due."
                },
                {
                    "param": "discount",
                    "name": "Discount Level",
                    "required": false,
                    "default": 0,
                    "description": "The default discount level for the client, specified either as a dollar amount or a percentage (the default)."
                },
                {
                    "param": "discount_type",
                    "name": "Discount Type",
                    "required": false,
                    "default": 0,
                    "description": "The method for calculating the discount:\n0 = percentage\n1 = dollar value"
                },
                {
                    "param": "referred",
                    "name": "Referred By",
                    "required": false,
                    "default": null,
                    "description": "This field stores whoever may have referred the client."
                },
                {
                    "param": "active",
                    "name": "Client Status",
                    "required": false,
                    "default": 1,
                    "description": "1 = Client, 2 = Lead"
                },
                {
                    "param": "late_fee_scheme_id",
                    "name": "Late Fee Schedule",
                    "required": false,
                    "default": null,
                    "description": "Late fee schedule"
                },
                {
                    "param": "apply_latefee_on_latefees",
                    "name": "Apply Late Fee On Late Fees",
                    "required": false,
                    "default": 0,
                    "description": "1= Yes, 0: No. Will be applied if the Late fee schedule is set"
                },
                {
                    "param": "default_renew",
                    "name": "Default Renew Date",
                    "required": false,
                    "default": null,
                    "description": "Default renew date for new services"
                },
                {
                    "param": "prorate_min_days",
                    "name": "Prorate Min. Days",
                    "required": false,
                    "default": 0,
                    "description": "Minimum number of proratable days (inclusive)"
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "Active Brand"
                },
                {
                    "param": "retry_every",
                    "name": "Retry Interval",
                    "required": false,
                    "default": null,
                    "description": "When a client's credit card is declined, the charge is stored in a queue and is retried at a later date. The number of days between retries is defined by this setting."
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "This variable takes the integer that corresponds to the desired level of priority given to a client's support tickets.\n0 = Low\n1 = Normal\n2 = High\n3 = 911"
                },
                {
                    "param": "access",
                    "name": "Access Settings",
                    "required": false,
                    "default": null,
                    "description": "The access settings for the client. This is an array containing the permissions for the client."
                },
                {
                    "param": "strict",
                    "name": "Strict Mode",
                    "required": false,
                    "default": 0,
                    "description": "This field is used to tell the API script whether or not the new client's Ubersmith login name must be unique.\nIf strict is set to 0 and the specified login name is already in use the client will be added to the system and the API script will return a note saying that their information must be updated inside the system.\nIf strict is set to 1, any duplicate login name will cause the script to return a failure as well as a note explaining why."
                },
                {
                    "param": "meta_*",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "auto_apply_credit",
                    "name": "Auto Apply Credit",
                    "required": false,
                    "default": null,
                    "description": "Automatically apply account credits"
                },
                {
                    "param": "vat_id",
                    "name": "VAT ID",
                    "required": false,
                    "default": null,
                    "description": "Tax Identification Number"
                },
                {
                    "param": "overdue_notice_id",
                    "name": "Overdue Notice Schedules ID",
                    "required": false,
                    "default": null,
                    "description": "The client default overdue Invoice schedules ID. If set to 0, the brand's default overdue notice schedules will be applied to the client."
                },
                {
                    "param": "mute_overdue_notice",
                    "name": "Mute Overdue Notice Schedules",
                    "required": false,
                    "default": null,
                    "description": "1: mute invoice overdue notice schedules. 0: unmute invoice overdue notice schedules."
                }
            ]
        }
    },
    "device": {
        "add": {
            "method": "device.add",
            "title": "Add a New Device",
            "description": "This method is used to create a new device.",
            "params": [
                {
                    "param": "dev_desc",
                    "name": "Device Description",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "type_id",
                    "name": "Device Type ID",
                    "required": true,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "label",
                    "name": "Device Label",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "parent",
                    "name": "Parent Device ID",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "rack_id",
                    "name": "Rack ID",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "rack_pos",
                    "name": "Position Within Rack",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "height",
                    "name": "Device Height",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_owned",
                    "name": "Client Owns Physical Device",
                    "required": false,
                    "default": 0,
                    "description": "0 = Client does not own physical device, 1 = Client owns physical device"
                },
                {
                    "param": "connection_node_type_id",
                    "name": "Connection Node Type ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "front_image_file_id",
                    "name": "Front Image File ID",
                    "required": false,
                    "default": null,
                    "description": "A file id to use for the device's front image"
                },
                {
                    "param": "back_image_file_id",
                    "name": "Back Image File ID",
                    "required": false,
                    "default": null,
                    "description": "A file id to use for the device's back image"
                },
                {
                    "param": "front_image",
                    "name": "Attachment",
                    "required": false,
                    "default": null,
                    "description": "An image file for the device's front image. When using cURL the value for the parameter should be @<filename> where <filename> is the image you wish to attach."
                },
                {
                    "param": "back_image",
                    "name": "Attachment",
                    "required": false,
                    "default": null,
                    "description": "An image file for the device's back image. When using cURL the value for the parameter should be @<filename> where <filename> is the image you wish to attach."
                },
                {
                    "param": "meta_*",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                }
            ]
        },
        "cage_add": {
            "method": "device.cage_add",
            "title": "Add a cage",
            "description": "This method is used to add a cage in the system.",
            "params": [
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": true,
                    "default": null,
                    "description": "The Cage Zone ID"
                },
                {
                    "param": "cage_name",
                    "name": "Cage Name",
                    "required": false,
                    "default": null,
                    "description": "Name for Cage. Required if code is not provided"
                },
                {
                    "param": "cage_code",
                    "name": "Cage Code",
                    "required": false,
                    "default": null,
                    "description": "Code for Cage. Required if name is not provided"
                },
                {
                    "param": "cage_type",
                    "name": "Cage Type",
                    "required": false,
                    "default": null,
                    "description": "Options:\n0 = Cage\n1 = Suite"
                },
                {
                    "param": "ac_power_capacity",
                    "name": "AC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "AC power capacity measured in Amps"
                },
                {
                    "param": "dc_power_capacity",
                    "name": "DC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "DC power capacity measured in Amps"
                },
                {
                    "param": "area_display_value",
                    "name": "Area Size Value",
                    "required": false,
                    "default": "0.00",
                    "description": "The area size measured in square feet.\nIf not set or set to \"0\" and either <b>width_display_value</b> and/or <b>depth_display_value</b> is set, the area will automatically be calculated."
                },
                {
                    "param": "meta_",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": "0",
                    "description": "The client id."
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": "0",
                    "description": "The cage status can only be edited if parent location statuses are in an unoccupied state. Otherwise the status is inherited.\n\nUnoccupied\n0 = Available\n1 = Inactive\n\nReserved / Occupied\n2 = Internal Reserved\n3 = Internal Occupied\n4 = Customer Right of First Refusal\n5 = Customer Occupied"
                },
                {
                    "param": "rofr_expiration_date",
                    "name": "ROFR Expiration Date",
                    "required": false,
                    "default": "0",
                    "description": "The expiration date of the contractual Right of First Refusal (ROFR)"
                },
                {
                    "param": "assigned_date",
                    "name": "Assigned Date",
                    "required": false,
                    "default": "0",
                    "description": "The assigned date"
                },
                {
                    "param": "width_display_value",
                    "name": "Width Value",
                    "required": false,
                    "default": "0.00",
                    "description": "The cage width"
                },
                {
                    "param": "width_display_unit",
                    "name": "Width Unit",
                    "required": false,
                    "default": 1,
                    "description": "Units of measurement\n1 = inches\n2 = feet\n3 = yards"
                },
                {
                    "param": "depth_display_value",
                    "name": "Depth Value",
                    "required": false,
                    "default": "0.00",
                    "description": "The cage depth"
                },
                {
                    "param": "depth_display_unit",
                    "name": "Depth Unit",
                    "required": false,
                    "default": 1,
                    "description": "Units of measurement\n1 = inches\n2 = feet\n3 = yards"
                }
            ]
        },
        "cage_list": {
            "method": "device.cage_list",
            "title": "List Device Cages",
            "description": "This method is used to list device cages.",
            "params": [
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Facility ID"
                },
                {
                    "param": "fac_code",
                    "name": "Facility Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Facility Code"
                },
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Zone ID"
                },
                {
                    "param": "zone_code",
                    "name": "Zone Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Zone Code"
                },
                {
                    "param": "cage_id",
                    "name": "Cage ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Cage ID"
                },
                {
                    "param": "cage_code",
                    "name": "Cage Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Cage Code"
                },
                {
                    "param": "row_id",
                    "name": "Row ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Row ID"
                },
                {
                    "param": "row_code",
                    "name": "Row Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Row Code"
                },
                {
                    "param": "rack_id",
                    "name": "Rack ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Rack ID"
                },
                {
                    "param": "rack_code",
                    "name": "Rack Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Rack Code"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Client ID"
                },
                {
                    "param": "metadata",
                    "name": "Include Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "If set, custom fields metadata will be included in the response output"
                },
                {
                    "param": "exclude_downstream",
                    "name": "Exclude downstream",
                    "required": false,
                    "default": false,
                    "description": "If set, downstream locations (rows, racks) will be excluded from the response output"
                }
            ]
        },
        "cage_update": {
            "method": "device.cage_update",
            "title": "Update a cage",
            "description": "This method is used to update a cage in the system.",
            "params": [
                {
                    "param": "cage_id",
                    "name": "Cage ID",
                    "required": true,
                    "default": null,
                    "description": "The Cage ID"
                },
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": false,
                    "default": null,
                    "description": "The Cage Zone ID"
                },
                {
                    "param": "cage_name",
                    "name": "Cage Name",
                    "required": false,
                    "default": null,
                    "description": "Name for Cage."
                },
                {
                    "param": "cage_code",
                    "name": "Cage Code",
                    "required": false,
                    "default": null,
                    "description": "Code for Cage."
                },
                {
                    "param": "cage_type",
                    "name": "Cage Type",
                    "required": false,
                    "default": null,
                    "description": "Options:\n0 = Cage\n1 = Suite"
                },
                {
                    "param": "ac_power_capacity",
                    "name": "AC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "AC power capacity measured in Amps"
                },
                {
                    "param": "dc_power_capacity",
                    "name": "DC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "DC power capacity measured in Amps"
                },
                {
                    "param": "area_display_value",
                    "name": "Area Size Value",
                    "required": false,
                    "default": "0.00",
                    "description": "The area size measured in square feet.\nIf not set or set to \"0\" and either <b>width_display_value</b> and/or <b>depth_display_value</b> is set, the area will automatically be calculated."
                },
                {
                    "param": "meta_",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": "0",
                    "description": "The client id."
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": "0",
                    "description": "The cage status can only be edited if parent location statuses are in an unoccupied state. Otherwise the status is inherited.\n\nUnoccupied\n0 = Available\n1 = Inactive\n\nReserved / Occupied\n2 = Internal Reserved\n3 = Internal Occupied\n4 = Customer Right of First Refusal\n5 = Customer Occupied"
                },
                {
                    "param": "rofr_expiration_date",
                    "name": "ROFR Expiration Date",
                    "required": false,
                    "default": "0",
                    "description": "The expiration date of the contractual Right of First Refusal (ROFR)"
                },
                {
                    "param": "assigned_date",
                    "name": "Assigned Date",
                    "required": false,
                    "default": "0",
                    "description": "The assigned date"
                },
                {
                    "param": "width_display_value",
                    "name": "Width Value",
                    "required": false,
                    "default": "0.00",
                    "description": "The cage width"
                },
                {
                    "param": "width_display_unit",
                    "name": "Width Unit",
                    "required": false,
                    "default": 1,
                    "description": "Units of measurement\n1 = inches\n2 = feet\n3 = yards"
                },
                {
                    "param": "depth_display_value",
                    "name": "Depth Value",
                    "required": false,
                    "default": "0.00",
                    "description": "The cage depth"
                },
                {
                    "param": "depth_display_unit",
                    "name": "Depth Unit",
                    "required": false,
                    "default": 1,
                    "description": "Units of measurement\n1 = inches\n2 = feet\n3 = yards"
                }
            ]
        },
        "comment_list": {
            "method": "device.comment_list",
            "title": "List a Device's Comments",
            "description": "This method is used to list a device's comments.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "filter_text",
                    "name": "Filter Text",
                    "required": false,
                    "default": null,
                    "description": "An array of strings to match against comments and attachment filenames. Comments which match all terms are returned."
                },
                {
                    "param": "client_viewable",
                    "name": "Client Viewable",
                    "required": false,
                    "default": null,
                    "description": "If client_viewable needs to be filtered (1 to only show client_viewable)"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "connection_add": {
            "method": "device.connection_add",
            "title": "Add a Device Connection",
            "description": "This method is used to add a new Connection between Devices.",
            "params": [
                {
                    "param": "name",
                    "name": "Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "links",
                    "name": "Links",
                    "required": true,
                    "default": null,
                    "description": "Array of links"
                },
                {
                    "param": "connection_type_id",
                    "name": "Connection Type ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "A single status ID. Options: \n  1 = Active\n  2 = Testing\n  4 = Failed\n  8 = New\n  16 = Inactive"
                }
            ]
        },
        "connection_delete": {
            "method": "device.connection_delete",
            "title": "Delete a Device Connection",
            "description": "This method is used to remove Connections between Devices.",
            "params": [
                {
                    "param": "connection_id",
                    "name": "Connection ID",
                    "required": false,
                    "default": null,
                    "description": "One or more (comma-separated) Connection ID numbers."
                },
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": "Delete all connections on the given Device ID.  Ignored if a Connection ID is supplied."
                },
                {
                    "param": "connection_class_id",
                    "name": "Connection Class ID",
                    "required": false,
                    "default": 10000,
                    "description": "The category of connection types to list. Options: \n  10000 = Network\n  10001 = Power\n  10002 = Virtual\n  -1 = All"
                }
            ]
        },
        "connection_link_add": {
            "method": "device.connection_link_add",
            "title": "Add a Connection Link",
            "description": "This method is used to add a new Link within a Connection.",
            "params": [
                {
                    "param": "connection_id",
                    "name": "Connection ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "segments",
                    "name": "Segments",
                    "required": true,
                    "default": null,
                    "description": "Array of segments"
                }
            ]
        },
        "connection_link_list": {
            "method": "device.connection_link_list",
            "title": "List Connection Links",
            "description": "This method is used to list Connection Links.",
            "params": [
                {
                    "param": "connection_id",
                    "name": "Connection ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "A single status ID. Options: \n  1 = Active\n  2 = Testing\n  4 = Failed\n  8 = New\n  16 = Inactive"
                },
                {
                    "param": "status_bit",
                    "name": "Status Bit",
                    "required": false,
                    "default": null,
                    "description": "Multiple status IDs, using bitwise logic. Options: \n  1 = Active\n  2 = Testing\n  4 = Failed\n  8 = New\n  16 = Inactive\n  255 = All\n  15 = Not Inactive"
                },
                {
                    "param": "connection_class_id",
                    "name": "Connection Class ID",
                    "required": false,
                    "default": 10000,
                    "description": "The category of connection types to list. Options: \n  10000 = Network\n  10001 = Power\n  10002 = Virtual\n  -1 = All"
                },
                {
                    "param": "src_interface_id",
                    "name": "Source Interface",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "dst_interface_id",
                    "name": "Destination Interface",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "connection_link_update": {
            "method": "device.connection_link_update",
            "title": "Update a Connection Link",
            "description": "This method is used to update a Link within a Connection.",
            "params": [
                {
                    "param": "connection_link_id",
                    "name": "Connection Link ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "segments",
                    "name": "Segments",
                    "required": false,
                    "default": null,
                    "description": "Array of segments"
                }
            ]
        },
        "connection_list": {
            "method": "device.connection_list",
            "title": "List Device Connections",
            "description": "This method is used to list a device's Connections.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "A single status ID. Options: \n  1 = Active\n  2 = Testing\n  4 = Failed\n  8 = New\n  16 = Inactive"
                },
                {
                    "param": "status_bit",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Multiple status IDs, using bitwise logic. Options: \n  1 = Active\n  2 = Testing\n  4 = Failed\n  8 = New\n  16 = Inactive\n  255 = All\n  15 = Not Inactive"
                },
                {
                    "param": "connection_class_id",
                    "name": "Connection Class ID",
                    "required": false,
                    "default": 10000,
                    "description": "The category of connection types to list. Options: \n  10000 = Network\n  10001 = Power\n  10002 = Virtual\n  -1 = All"
                },
                {
                    "param": "connection_id",
                    "name": "Connection ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "src_interface_id",
                    "name": "Source Interface",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "dst_interface_id",
                    "name": "Destination Interface",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "connection_node_type_list": {
            "method": "device.connection_node_type_list",
            "title": "List Connection Node Types",
            "description": "This method is used to list available connection node types.",
            "params": []
        },
        "connection_type_add": {
            "method": "device.connection_type_add",
            "title": "Add a Connection Type",
            "description": "Adds a new connection type",
            "params": [
                {
                    "param": "connection_class_id",
                    "name": "Connection Class ID",
                    "required": true,
                    "default": null,
                    "description": "The category of this connection type. Options: \n  10000 = Network\n  10001 = Power\n  10002 = Virtual"
                },
                {
                    "param": "status",
                    "name": "Status ID",
                    "required": false,
                    "default": 1,
                    "description": "Options: \n  0 = Inactive\n  1 = Active"
                },
                {
                    "param": "code",
                    "name": "Code",
                    "required": true,
                    "default": null,
                    "description": "An abbreviation to quickly identify the connection type at a glance"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "connection_type_list": {
            "method": "device.connection_type_list",
            "title": "List Connection Types",
            "description": "This method is used to list available connection types.",
            "params": [
                {
                    "param": "connection_class_id",
                    "name": "Connection Class ID",
                    "required": false,
                    "default": 10000,
                    "description": "The category of connection types to list. Options: \n  10000 = Network\n  10001 = Power\n  10002 = Virtual\n  -1 = All"
                }
            ]
        },
        "connection_update": {
            "method": "device.connection_update",
            "title": "Update a Device Connection",
            "description": "This method is used to update a Connection between Devices.",
            "params": [
                {
                    "param": "connection_id",
                    "name": "Connection ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "A single status ID. Options: \n  1 = Active\n  2 = Testing\n  4 = Failed\n  8 = New\n  16 = Inactive"
                }
            ]
        },
        "cpanel_add": {
            "method": "device.cpanel_add",
            "title": "Add a cPanel Account",
            "description": "This method is used to add a cPanel account.",
            "params": [
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "create",
                    "name": "Create Flag",
                    "required": false,
                    "default": 1,
                    "description": "Set to 0 if account already exists on the cPanel server. This will only create the association within Ubersmith to manage the account."
                },
                {
                    "param": "cpanel_plan",
                    "name": "cPanel Plan Code",
                    "required": false,
                    "default": "from service plan",
                    "description": ""
                }
            ]
        },
        "delete": {
            "method": "device.delete",
            "title": "Delete a Device",
            "description": "This method is used to delete a device.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "force_delete_connections",
                    "name": "Allow deleting a device that has connections",
                    "required": false,
                    "default": null,
                    "description": "By default, deleting a device is blocked if it has connections.  Setting this to 1 automatically deletes connections this device has before deleting the device."
                }
            ]
        },
        "dns_record_add": {
            "method": "device.dns_record_add",
            "title": "Add a DNS record",
            "description": "This method is used to add a new DNS record to a DNS Zone.",
            "params": [
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": true,
                    "default": null,
                    "description": "ID of specific DNS zone."
                },
                {
                    "param": "type",
                    "name": "Record Type",
                    "required": true,
                    "default": null,
                    "description": "Record Type"
                },
                {
                    "param": "name",
                    "name": "Record Name",
                    "required": true,
                    "default": null,
                    "description": "Record Name"
                },
                {
                    "param": "content",
                    "name": "Record Content",
                    "required": true,
                    "default": null,
                    "description": "Record Content"
                },
                {
                    "param": "ttl",
                    "name": "TTL",
                    "required": false,
                    "default": null,
                    "description": "The  TTL of the record."
                },
                {
                    "param": "prio",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The priority of the record."
                },
                {
                    "param": "disabled",
                    "name": "Record Status",
                    "required": false,
                    "default": 0,
                    "description": "Record Status, 0 = Enabled 1 = Disabled"
                }
            ]
        },
        "dns_record_delete": {
            "method": "device.dns_record_delete",
            "title": "Delete a DNS Record",
            "description": "This method is used to delete a DNS Record.",
            "params": [
                {
                    "param": "record_id",
                    "name": "Record ID",
                    "required": true,
                    "default": null,
                    "description": "DNS Record ID."
                }
            ]
        },
        "dns_record_list": {
            "method": "device.dns_record_list",
            "title": "List DNS records",
            "description": "This method is used to list DNS records.",
            "params": [
                {
                    "param": "record_id",
                    "name": "Record ID",
                    "required": false,
                    "default": null,
                    "description": "ID of specific DNS record."
                },
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": false,
                    "default": null,
                    "description": "ID of specific DNS zone."
                },
                {
                    "param": "zone_name",
                    "name": "Zone Name",
                    "required": false,
                    "default": null,
                    "description": "Name of specific DNS zone."
                },
                {
                    "param": "type",
                    "name": "Record Type",
                    "required": false,
                    "default": null,
                    "description": "Record Type"
                },
                {
                    "param": "name",
                    "name": "Record Name",
                    "required": false,
                    "default": null,
                    "description": "Record Name"
                },
                {
                    "param": "content",
                    "name": "Record Content",
                    "required": false,
                    "default": null,
                    "description": "Record Content"
                },
                {
                    "param": "disabled",
                    "name": "Record Status",
                    "required": false,
                    "default": null,
                    "description": "Record Status, 0 = Enabled 1 = Disabled"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Client ID"
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": "Service ID"
                },
                {
                    "param": "exclude_special",
                    "name": "Exclude Special Records",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to exclude SOA, MX & NS records"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "name",
                    "description": "Field to order results by, available fields: record_id, name"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending\ndesc = Descending"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": 0,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "dns_record_update": {
            "method": "device.dns_record_update",
            "title": "Update a DNS record",
            "description": "This method is used to update a DNS record.",
            "params": [
                {
                    "param": "record_id",
                    "name": "Record ID",
                    "required": true,
                    "default": null,
                    "description": "ID of specific DNS record."
                },
                {
                    "param": "type",
                    "name": "Record Type",
                    "required": false,
                    "default": null,
                    "description": "Record Type"
                },
                {
                    "param": "name",
                    "name": "Record Name",
                    "required": false,
                    "default": null,
                    "description": "Record Name"
                },
                {
                    "param": "content",
                    "name": "Record Content",
                    "required": false,
                    "default": null,
                    "description": "Record Content"
                },
                {
                    "param": "ttl",
                    "name": "TTL",
                    "required": false,
                    "default": null,
                    "description": "The TTL of the record."
                },
                {
                    "param": "prio",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The priority of the record."
                },
                {
                    "param": "disabled",
                    "name": "Record Status",
                    "required": false,
                    "default": null,
                    "description": "Record Status, 0 = Enabled 1 = Disabled"
                }
            ]
        },
        "dns_zone_add": {
            "method": "device.dns_zone_add",
            "title": "Add a DNS Zone",
            "description": "This method is used to add a new DNS Zone",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Optional field to associate the zone with a specific client."
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": "Optional field to associate the zone with a specific service."
                },
                {
                    "param": "name",
                    "name": "Domain Name",
                    "required": true,
                    "default": null,
                    "description": "The name of the DNS Zone."
                },
                {
                    "param": "hostmaster",
                    "name": "Hostmaster",
                    "required": false,
                    "default": null,
                    "description": "The Hostmaster for the Zone."
                },
                {
                    "param": "refresh",
                    "name": "Refresh Interval",
                    "required": false,
                    "default": null,
                    "description": "The Refresh time in seconds for the zone."
                },
                {
                    "param": "retry",
                    "name": "Retry Interval",
                    "required": false,
                    "default": null,
                    "description": "The Retry time in seconds for the zone."
                },
                {
                    "param": "expire",
                    "name": "Expire Interval",
                    "required": false,
                    "default": null,
                    "description": "The Expire time in seconds for the zone."
                },
                {
                    "param": "default_ttl",
                    "name": "Default TTL",
                    "required": false,
                    "default": null,
                    "description": "The Default TTL of the Zone."
                },
                {
                    "param": "ns1",
                    "name": "Primary Nameserver",
                    "required": false,
                    "default": null,
                    "description": "The Primary Nameserver address."
                },
                {
                    "param": "ns2",
                    "name": "Secondary Nameserver",
                    "required": false,
                    "default": null,
                    "description": "The Secondary Nameserver address."
                },
                {
                    "param": "ns3",
                    "name": "Tertiary Nameserver",
                    "required": false,
                    "default": null,
                    "description": "The Tertiary Nameserver address."
                },
                {
                    "param": "ns4",
                    "name": "Quaternary Nameserver",
                    "required": false,
                    "default": null,
                    "description": "The Quaternary Nameserver address."
                }
            ]
        },
        "dns_zone_delete": {
            "method": "device.dns_zone_delete",
            "title": "Delete a DNS Zone",
            "description": "This method is used to delete a DNS Zone.",
            "params": [
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": true,
                    "default": null,
                    "description": "DNS Zone ID."
                }
            ]
        },
        "dns_zone_list": {
            "method": "device.dns_zone_list",
            "title": "List DNS Zones",
            "description": "This method is used to list DNS Zones.",
            "params": [
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": false,
                    "default": null,
                    "description": "DNS Zone ID"
                },
                {
                    "param": "name",
                    "name": "Zone Name",
                    "required": false,
                    "default": null,
                    "description": "DNS Zone Name"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Client ID"
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": "Service ID"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "name",
                    "description": "Field to order results by, available fields: zone_id, name"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending\ndesc = Descending"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": 0,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "dns_zone_update": {
            "method": "device.dns_zone_update",
            "title": "Update a DNS Zone",
            "description": "This method is used to update a DNS Zone.",
            "params": [
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": true,
                    "default": null,
                    "description": "DNS Zone ID."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Optional field to associate the domain with a specific client."
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": "Optional field to associate domain with a specific service."
                },
                {
                    "param": "name",
                    "name": "Domain Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the DNS Zone."
                },
                {
                    "param": "hostmaster",
                    "name": "Hostmaster",
                    "required": false,
                    "default": null,
                    "description": "The Hostmaster for the Zone."
                },
                {
                    "param": "refresh",
                    "name": "Refresh Interval",
                    "required": false,
                    "default": null,
                    "description": "The Refresh time in seconds for the zone."
                },
                {
                    "param": "retry",
                    "name": "Retry Interval",
                    "required": false,
                    "default": null,
                    "description": "The Retry time in seconds for the zone."
                },
                {
                    "param": "expire",
                    "name": "Expire Interval",
                    "required": false,
                    "default": null,
                    "description": "The Expire time in seconds for the zone."
                },
                {
                    "param": "default_ttl",
                    "name": "Default TTL",
                    "required": false,
                    "default": null,
                    "description": "The Default TTL in seconds for the Zone."
                }
            ]
        },
        "event_list": {
            "method": "device.event_list",
            "title": "List Device Events",
            "description": "This method is used to list device events.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "begin",
                    "name": "Start Date",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "end",
                    "name": "End Date",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "eventuser",
                    "name": "User",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "searchfor",
                    "name": "Search String",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "facility_add": {
            "method": "device.facility_add",
            "title": "Add a facility",
            "description": "This method is used to add a facility in the system.",
            "params": [
                {
                    "param": "fac_name",
                    "name": "Facility Name",
                    "required": false,
                    "default": null,
                    "description": "Name for Facility. Required if code is not provided"
                },
                {
                    "param": "fac_code",
                    "name": "Facility Code",
                    "required": false,
                    "default": null,
                    "description": "Code for Facility. Required if name is not provided"
                },
                {
                    "param": "fac_description",
                    "name": "Facility Description",
                    "required": false,
                    "default": null,
                    "description": "The Facility description."
                },
                {
                    "param": "fac_address",
                    "name": "Address",
                    "required": false,
                    "default": null,
                    "description": "The Facility street address."
                },
                {
                    "param": "fac_address2",
                    "name": "Address 2",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fac_city",
                    "name": "City",
                    "required": false,
                    "default": null,
                    "description": "The Facility city."
                },
                {
                    "param": "fac_state",
                    "name": "State",
                    "required": false,
                    "default": null,
                    "description": "The Facility state."
                },
                {
                    "param": "fac_zip",
                    "name": "Postal code",
                    "required": false,
                    "default": null,
                    "description": "The Facility postal code."
                },
                {
                    "param": "fac_country",
                    "name": "Country",
                    "required": false,
                    "default": null,
                    "description": "The 2-letter ISO country code (ISO 3166-1 alpha-2)"
                },
                {
                    "param": "phone",
                    "name": "Telephone",
                    "required": false,
                    "default": null,
                    "description": "The Facility telephone."
                },
                {
                    "param": "provider_client_id",
                    "name": "Provide Client Id",
                    "required": false,
                    "default": null,
                    "description": "The Provider client ID"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": "0",
                    "description": "The client id."
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": "0",
                    "description": "Unoccupied\n0 = Available\n1 = Inactive\n\nReserved / Occupied\n2 = Internal Reserved\n3 = Internal Occupied\n4 = Customer Right of First Refusal\n5 = Customer Occupied"
                },
                {
                    "param": "rofr_expiration_date",
                    "name": "ROFR Expiration Date",
                    "required": false,
                    "default": "0",
                    "description": "The expiration date of the contractual Right of First Refusal (ROFR)"
                },
                {
                    "param": "assigned_date",
                    "name": "Assigned Date",
                    "required": false,
                    "default": "0",
                    "description": "The assigned date"
                },
                {
                    "param": "ac_power_capacity",
                    "name": "AC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "AC power capacity measured in Amps"
                },
                {
                    "param": "dc_power_capacity",
                    "name": "DC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "DC power capacity measured in Amps"
                },
                {
                    "param": "area_display_value",
                    "name": "Area Size Value",
                    "required": false,
                    "default": "0.00",
                    "description": "The area size measured in square feet."
                },
                {
                    "param": "meta_",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                }
            ]
        },
        "facility_list": {
            "method": "device.facility_list",
            "title": "List Device Facilities",
            "description": "This method is used to list device facilities.",
            "params": [
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Facility ID"
                },
                {
                    "param": "fac_code",
                    "name": "Facility Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Facility Code"
                },
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Zone ID"
                },
                {
                    "param": "zone_code",
                    "name": "Zone Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Zone Code"
                },
                {
                    "param": "cage_id",
                    "name": "Cage ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Cage ID"
                },
                {
                    "param": "cage_code",
                    "name": "Cage Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Cage Code"
                },
                {
                    "param": "row_id",
                    "name": "Row ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Row ID"
                },
                {
                    "param": "row_code",
                    "name": "Row Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Row Code"
                },
                {
                    "param": "rack_id",
                    "name": "Rack ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Rack ID"
                },
                {
                    "param": "rack_code",
                    "name": "Rack Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Rack Code"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Client ID"
                },
                {
                    "param": "metadata",
                    "name": "Include Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "If set, custom fields metadata will be included in the response output"
                },
                {
                    "param": "exclude_downstream",
                    "name": "Exclude downstream",
                    "required": false,
                    "default": false,
                    "description": "If set, downstream locations (zones, cages, rows, racks) will be excluded from the response output"
                }
            ]
        },
        "facility_update": {
            "method": "device.facility_update",
            "title": "Update a facility",
            "description": "This method is used to update a facility in the system.",
            "params": [
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": true,
                    "default": null,
                    "description": "The Facility ID"
                },
                {
                    "param": "fac_name",
                    "name": "Facility Name",
                    "required": false,
                    "default": null,
                    "description": "Name for Facility."
                },
                {
                    "param": "fac_code",
                    "name": "Facility Code",
                    "required": false,
                    "default": null,
                    "description": "Code for Facility."
                },
                {
                    "param": "fac_description",
                    "name": "Facility Description",
                    "required": false,
                    "default": null,
                    "description": "The Facility description."
                },
                {
                    "param": "fac_address",
                    "name": "Address",
                    "required": false,
                    "default": null,
                    "description": "The Facility street address."
                },
                {
                    "param": "fac_address2",
                    "name": "Address 2",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fac_city",
                    "name": "City",
                    "required": false,
                    "default": null,
                    "description": "The Facility city."
                },
                {
                    "param": "fac_state",
                    "name": "State",
                    "required": false,
                    "default": null,
                    "description": "The Facility state."
                },
                {
                    "param": "fac_zip",
                    "name": "Postal code",
                    "required": false,
                    "default": null,
                    "description": "The Facility postal code."
                },
                {
                    "param": "fac_country",
                    "name": "Country",
                    "required": false,
                    "default": null,
                    "description": "The 2-letter ISO country code (ISO 3166-1 alpha-2)"
                },
                {
                    "param": "phone",
                    "name": "Telephone",
                    "required": false,
                    "default": null,
                    "description": "The Facility telephone."
                },
                {
                    "param": "provider_client_id",
                    "name": "Provide Client Id",
                    "required": false,
                    "default": null,
                    "description": "The Provider client ID"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": "0",
                    "description": "The client id."
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": "0",
                    "description": "The facility status can only be edited if it is in an unoccupied state.\n\nUnoccupied\n0 = Available\n1 = Inactive\n\nReserved / Occupied\n2 = Internal Reserved\n3 = Internal Occupied\n4 = Customer Right of First Refusal\n5 = Customer Occupied"
                },
                {
                    "param": "rofr_expiration_date",
                    "name": "ROFR Expiration Date",
                    "required": false,
                    "default": "0",
                    "description": "The expiration date of the contractual Right of First Refusal (ROFR)"
                },
                {
                    "param": "assigned_date",
                    "name": "Assigned Date",
                    "required": false,
                    "default": "0",
                    "description": "The assigned date"
                },
                {
                    "param": "ac_power_capacity",
                    "name": "AC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "AC power capacity measured in Amps"
                },
                {
                    "param": "dc_power_capacity",
                    "name": "DC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "DC power capacity measured in Amps"
                },
                {
                    "param": "area_display_value",
                    "name": "Area Size Value",
                    "required": false,
                    "default": "0.00",
                    "description": "The area size measured in square feet."
                },
                {
                    "param": "meta_",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                }
            ]
        },
        "get": {
            "method": "device.get",
            "title": "Get a Device",
            "description": "This method is used to get a device's details.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "metadata",
                    "name": "Device Custom Fields",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "modules",
                    "name": "Device Modules",
                    "required": false,
                    "default": 0,
                    "description": "1 = modules & module_details, 2 = module_details. If a device module encounters an error, an array containing uber_error_code and uber_error_message keys is returned."
                },
                {
                    "param": "tags",
                    "name": "Device Tags",
                    "required": false,
                    "default": 0,
                    "description": "1 = include device tags sub-array"
                },
                {
                    "param": "locations",
                    "name": "Device Locations",
                    "required": false,
                    "default": 1,
                    "description": "0 = do not include rack/row/cage/zone/facility sub-arrays"
                }
            ]
        },
        "hostname_get": {
            "method": "device.hostname_get",
            "title": "Get Control Panel Host Device information",
            "description": "This method is used to get control panel host information. Returns all active system hosts if no params are provided",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": false,
                    "default": null,
                    "description": "Legacy: If provided, will retrieve only legacy hosts created before v.3.0.0. Param service_id is ignored."
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": "If provided, will retrieve the control panel host of the service"
                }
            ]
        },
        "interface_add": {
            "method": "device.interface_add",
            "title": "Add a Device Interface",
            "description": "This method is used to add a new Interface to a Device.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Interface Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "interface_type_id",
                    "name": "Interface Type ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "mac",
                    "name": "MAC Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": "1 = Active, 2 = Testing, 4 = Failed, 0 = Inactive, 8 = Deactivated, 16 = Internal"
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "interface_list": {
            "method": "device.interface_list",
            "title": "List Device Interfaces",
            "description": "This method is used to list a device's Interfaces.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "mac",
                    "name": "MAC Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "1 = Active, 2 = Testing, 4 = Failed, 0 = Inactive, 8 = Deactivated, 16 = Internal"
                },
                {
                    "param": "interface_type_id",
                    "name": "Interface Type ID",
                    "required": false,
                    "default": null,
                    "description": "\n  10001 = Interface\n  10000 = Unknown"
                },
                {
                    "param": "connection_class_id",
                    "name": "Connection Class ID",
                    "required": false,
                    "default": 10000,
                    "description": "The category of this connection type. Options: \n  10000 = Network\n  10001 = Power\n  10002 = Virtual\n  -1 = All"
                },
                {
                    "param": "device_interface_id",
                    "name": "Device Interface ID",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "interface_type_add": {
            "method": "device.interface_type_add",
            "title": "Add an Interface Type",
            "description": "Adds a new interface type",
            "params": [
                {
                    "param": "connection_class_id",
                    "name": "Connection Class ID",
                    "required": true,
                    "default": null,
                    "description": "The category of this connection type. Options: \n  10000 = Network\n  10001 = Power\n  10002 = Virtual"
                },
                {
                    "param": "status",
                    "name": "Status ID",
                    "required": false,
                    "default": 1,
                    "description": "Options: \n  0 = Inactive\n  1 = Active"
                },
                {
                    "param": "code",
                    "name": "Code",
                    "required": true,
                    "default": null,
                    "description": "An abbreviation to quickly identify the interface type at a glance"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "interface_type_list": {
            "method": "device.interface_type_list",
            "title": "List Device Interface Types",
            "description": "This method is used to list available device interface types.",
            "params": [
                {
                    "param": "connection_class_id",
                    "name": "Connection Class ID",
                    "required": false,
                    "default": 10000,
                    "description": "The category of connection class types to list. Options: \n  10000 = Network\n  10001 = Power\n  10002 = Virtual\n  -1 = All"
                }
            ]
        },
        "interface_update": {
            "method": "device.interface_update",
            "title": "Update a Device Interface",
            "description": "This method is used to update an Interface on a Device.",
            "params": [
                {
                    "param": "device_interface_id",
                    "name": "Device Interface ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Interface Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "interface_type_id",
                    "name": "Interface Type ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "mac",
                    "name": "MAC Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "1 = Active, 2 = Testing, 4 = Failed, 0 = Inactive, 8 = Deactivated, 16 = Internal"
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "ip_assign": {
            "method": "device.ip_assign",
            "title": "Assign an IP to a Device",
            "description": "This method is used to assign an IP address to a device.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "addr",
                    "name": "IP Assignment",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "cidr",
                    "name": "CIDR Assignment Size",
                    "required": false,
                    "default": 32,
                    "description": ""
                },
                {
                    "param": "vlan_num",
                    "name": "VLAN Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "group_id",
                    "name": "IP Group ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "force",
                    "name": "Force Flag",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "ip_assignment_add": {
            "method": "device.ip_assignment_add",
            "title": "Create a New IP Assignment",
            "description": "This method is used to create a new IP address assignment.",
            "params": [
                {
                    "param": "addr",
                    "name": "Address(es) to Assign",
                    "required": false,
                    "default": null,
                    "description": "String or Array, CIDR or range notation, example: 10.0.0.0 - 10.0.0.10."
                },
                {
                    "param": "cidr",
                    "name": "CIDR Assignment Size",
                    "required": false,
                    "default": null,
                    "description": "Automatically create one (1) new assignment of this size, only used if addr is not specified."
                },
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": "The target device for IP assignment must be provided."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "If the service_id is not providing with the client_id the service_id will be set to 0."
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": "Providing the service_id will lookup the related client_id. Either the client_id or service_id must be provided."
                },
                {
                    "param": "group_id",
                    "name": "Group ID",
                    "required": false,
                    "default": null,
                    "description": "Providing a client_id requires that it belongs to the group_id. Providing the group_id will lookup the client_id."
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": 0,
                    "description": "Providing the device_id will lookup the fac_id value for the device. Only used if the addr value is not provided."
                },
                {
                    "param": "pool_id",
                    "name": "Pool ID",
                    "required": false,
                    "default": 0,
                    "description": "Only used if the addr value is not provided."
                },
                {
                    "param": "block_id",
                    "name": "Block ID",
                    "required": false,
                    "default": 0,
                    "description": "Only used if the addr value is not provided."
                },
                {
                    "param": "assign_description",
                    "name": "Description",
                    "required": false,
                    "default": "",
                    "description": "A brief description of the IP assignment"
                },
                {
                    "param": "addr_type",
                    "name": "Address Type",
                    "required": false,
                    "default": 1,
                    "description": "1 = Global\n2 = Local\n4 = Gateway"
                }
            ]
        },
        "ip_assignment_delete": {
            "method": "device.ip_assignment_delete",
            "title": "Delete a Device IP Assignment",
            "description": "This method is used to delete an IP assignment from a device.",
            "params": [
                {
                    "param": "assign_id",
                    "name": "IP Assignment ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "ip_assignment_list": {
            "method": "device.ip_assignment_list",
            "title": "List Device IP Assignments",
            "description": "This method is used to list a device's IP assignments.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": "Is required only if 'client_id', 'group_id' and 'service_id' are not specified."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Is required only if 'device_id', 'group_id', and 'service_id' are not specified."
                },
                {
                    "param": "group_id",
                    "name": "IP Group ID",
                    "required": false,
                    "default": null,
                    "description": "Is required only if 'device_id', 'client_id', and 'service_id' are not specified."
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": "Is required only if 'device_id', 'client_id', and 'group_id' are not specified."
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "ip_assignment_update": {
            "method": "device.ip_assignment_update",
            "title": "Update a Device IP Assignment",
            "description": "This method is used to update a device's IP assignment.",
            "params": [
                {
                    "param": "assign_id",
                    "name": "IP Assignment ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "addr",
                    "name": "IP Address",
                    "required": false,
                    "default": null,
                    "description": "CIDR notation."
                },
                {
                    "param": "assign_description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "group_id",
                    "name": "Group ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "addr_type",
                    "name": "Address Type",
                    "required": false,
                    "default": 1,
                    "description": "1 = Global\n2 = Local\n4 = Gateway"
                }
            ]
        },
        "ip_block_add": {
            "method": "device.ip_block_add",
            "title": "Add a Block",
            "description": "This method is used to add a Block in the system.",
            "params": [
                {
                    "param": "pool_id",
                    "name": "Pool ID",
                    "required": true,
                    "default": null,
                    "description": "The Block pool ID."
                },
                {
                    "param": "addr",
                    "name": "Network (CIDR)",
                    "required": true,
                    "default": null,
                    "description": "The Block classless inter-domain routing (CIDR) address."
                },
                {
                    "param": "block_description",
                    "name": "Block Description",
                    "required": false,
                    "default": "",
                    "description": "The Block description."
                },
                {
                    "param": "priority",
                    "name": "Priority",
                    "required": false,
                    "default": 1,
                    "description": "The Block priority."
                },
                {
                    "param": "block_assign",
                    "name": "Auto Assignment",
                    "required": false,
                    "default": 1,
                    "description": "If the Block is assigned automatically"
                }
            ]
        },
        "ip_block_delete": {
            "method": "device.ip_block_delete",
            "title": "Delete a Block",
            "description": "This method is used to delete a Block.",
            "params": [
                {
                    "param": "block_id",
                    "name": "Block ID",
                    "required": true,
                    "default": null,
                    "description": "The id of the Block to delete."
                }
            ]
        },
        "ip_block_list": {
            "method": "device.ip_block_list",
            "title": "List IP Blocks",
            "description": "This method is used to list IP blocks.",
            "params": [
                {
                    "param": "block_id",
                    "name": "Block ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "pool_id",
                    "name": "Pool ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "block_assign",
                    "name": "Auto-assignment",
                    "required": false,
                    "default": null,
                    "description": "Return only IP blocks with the auto-assignment set to the specific flag: 1 = Yes, 0 = No"
                },
                {
                    "param": "ipver",
                    "name": "IP Version",
                    "required": false,
                    "default": null,
                    "description": "Possible versions:\n4\n6"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "ip_block_update": {
            "method": "device.ip_block_update",
            "title": "Update a Block",
            "description": "This method is used to update a Block in the system.",
            "params": [
                {
                    "param": "block_id",
                    "name": "Block ID",
                    "required": true,
                    "default": null,
                    "description": "The Block ID"
                },
                {
                    "param": "addr",
                    "name": "Network (CIDR)",
                    "required": false,
                    "default": null,
                    "description": "The Block classless inter-domain routing (CIDR) address."
                },
                {
                    "param": "block_description",
                    "name": "Block Description",
                    "required": false,
                    "default": "",
                    "description": "The Block description."
                },
                {
                    "param": "priority",
                    "name": "Priority",
                    "required": false,
                    "default": 1,
                    "description": "The Block priority."
                },
                {
                    "param": "block_assign",
                    "name": "Auto Assignment",
                    "required": false,
                    "default": 1,
                    "description": "If the Block is assigned automatically"
                }
            ]
        },
        "ip_get_available": {
            "method": "device.ip_get_available",
            "title": "List Available IP Addresses",
            "description": "This method is used to list existing IP Assignments which are not currently associated with a device.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, use the client associated with this device"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, use this client"
                },
                {
                    "param": "cidr",
                    "name": "CIDR Assignment Size",
                    "required": false,
                    "default": 32,
                    "description": ""
                },
                {
                    "param": "vlan_num",
                    "name": "VLAN Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "group_id",
                    "name": "IP Group ID",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "ip_get_unassigned": {
            "method": "device.ip_get_unassigned",
            "title": "Get Unassigned IP Addresses",
            "description": "This method is used to get a list of unassigned IP Addresses.",
            "params": [
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "pool_id",
                    "name": "IP Address Pool ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "block_id",
                    "name": "IP Address Block ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "cidr",
                    "name": "CIDR Assignment Size",
                    "required": false,
                    "default": 32,
                    "description": ""
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": 50,
                    "description": ""
                }
            ]
        },
        "ip_group_add": {
            "method": "device.ip_group_add",
            "title": "Add a Device IP Group",
            "description": "This method is used to add an IP group to a device.",
            "params": [
                {
                    "param": "group_description",
                    "name": "Group Description",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "0 = Global"
                },
                {
                    "param": "vlan_range_id",
                    "name": "VLAN Range ID",
                    "required": false,
                    "default": null,
                    "description": "Required if vlan_num is specified."
                },
                {
                    "param": "vlan_num",
                    "name": "VLAN Number",
                    "required": false,
                    "default": null,
                    "description": "Will be auto-assigned if not specified and vlan_range_id is non-zero."
                },
                {
                    "param": "hsrp",
                    "name": "HSRP",
                    "required": false,
                    "default": null,
                    "description": "Enable or disable HSRP on the group, disabled by default (1 = Enable, 0 = Disable)"
                }
            ]
        },
        "ip_group_delete": {
            "method": "device.ip_group_delete",
            "title": "Delete a Device IP Group",
            "description": "This method is used to delete an IP group from a device.",
            "params": [
                {
                    "param": "group_id",
                    "name": "Group ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "ip_group_list": {
            "method": "device.ip_group_list",
            "title": "List a Device IP Group",
            "description": "This method is used to list a device's IP groups.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": "Is required only if 'client_id' and 'fac_id' are not specified."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Is required only if 'device_id' and 'fac_id' are not specified."
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": "Is required only if 'device_id' and 'client_id' are not specified."
                },
                {
                    "param": "vlan_range_id",
                    "name": "VLAN Range ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "vlan_num",
                    "name": "VLAN Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "is_vlan",
                    "name": "VLAN Flag",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "is_hsrp",
                    "name": "HSRP Flag",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "empty",
                    "name": "Empty VLANs",
                    "required": false,
                    "default": null,
                    "description": "If true and is_vlan, return all \"empty\" VLANs"
                },
                {
                    "param": "with_ips",
                    "name": "With IPs",
                    "required": false,
                    "default": null,
                    "description": "Boolean. Only use this if client_id is provided. This parameter will add a filter to return only IP groups containing an IP assigned to the client or IP groups themselves assigned to the client."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "ip_group_update": {
            "method": "device.ip_group_update",
            "title": "Update a Device IP Group",
            "description": "This method is used to update a device's IP group.",
            "params": [
                {
                    "param": "group_id",
                    "name": "Group ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "group_description",
                    "name": "Group Description",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "0 = Global"
                },
                {
                    "param": "vlan_range_id",
                    "name": "VLAN Range ID",
                    "required": false,
                    "default": null,
                    "description": "Required if vlan_num is specified."
                },
                {
                    "param": "vlan_num",
                    "name": "VLAN Number",
                    "required": false,
                    "default": null,
                    "description": "Will be auto-assigned if not specified and vlan_range_id is non-zero."
                },
                {
                    "param": "hsrp",
                    "name": "HSRP",
                    "required": false,
                    "default": null,
                    "description": "Enable or disable HSRP on the group (1 = Enable, 0 = Disable)"
                }
            ]
        },
        "ip_lookup": {
            "method": "device.ip_lookup",
            "title": "Look Up a Device IP",
            "description": "This method is used to look up the details of the assignment which contains the specified IP address.",
            "params": [
                {
                    "param": "ip",
                    "name": "IP Address",
                    "required": true,
                    "default": null,
                    "description": "Required if vlan_num is specified."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Required if addr_type is 'local' or 'all'"
                },
                {
                    "param": "addr_type",
                    "name": "IP Assignment Type",
                    "required": false,
                    "default": "global",
                    "description": "Options are 'local', 'global', or 'all'"
                },
                {
                    "param": "metadata",
                    "name": "Custom Fields Flag",
                    "required": false,
                    "default": 0,
                    "description": "Will be auto-assigned if not specified and vlan_range_id is non-zero."
                }
            ]
        },
        "ip_pool_add": {
            "method": "device.ip_pool_add",
            "title": "Add a Pool",
            "description": "This method is used to add a Pool in the system.",
            "params": [
                {
                    "param": "pool_name",
                    "name": "Name",
                    "required": true,
                    "default": null,
                    "description": "The Pool name."
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": 0,
                    "description": "The Pool facility ID. 0 Represents all Facilities"
                },
                {
                    "param": "pool_assign",
                    "name": "Auto Assignment",
                    "required": false,
                    "default": true,
                    "description": "If the Pool is assigned automatically"
                },
                {
                    "param": "pool_description",
                    "name": "Pool Description",
                    "required": false,
                    "default": "",
                    "description": "The Pool description."
                },
                {
                    "param": "max_util",
                    "name": "Maximum Utilization",
                    "required": false,
                    "default": 0,
                    "description": "The value is a percentage. If total utilization exceeds this threshold, the pool status will be set to alert.\nIf the utilization approaches this threshold, the pool status will be set to warning."
                },
                {
                    "param": "min_subnet",
                    "name": "Minimum Subnets",
                    "required": false,
                    "default": 0,
                    "description": "This specifies the minimum amount of contiguous free IP space within the pool.\nYou must specify the subnet size to check for (min_subnet_size), and the minimum number of subnets that the pool should contain.\nIf the pool contains less than this many available subnets, the pool status will be set to alert.\nIf the number of available subnets is less than 1.5x this setting, the pool status will be set to warning."
                },
                {
                    "param": "min_subnet_size",
                    "name": "Minimum Subnet Size",
                    "required": false,
                    "default": 0,
                    "description": "<a href=\"#appendix\"></a>The subnet size to check for the minimum number of subnets (that the pool should contain).\n0 represents no selection. See Appendix section for available options"
                },
                {
                    "param": "notify_address",
                    "name": "Notify Address",
                    "required": false,
                    "default": "",
                    "description": "If an alert threshold is set, this is the email address that alerts will be sent to."
                }
            ]
        },
        "ip_pool_delete": {
            "method": "device.ip_pool_delete",
            "title": "Delete a Pool",
            "description": "This method is used to delete a Pool.",
            "params": [
                {
                    "param": "pool_id",
                    "name": "Pool ID",
                    "required": true,
                    "default": null,
                    "description": "The id of the Pool to delete."
                }
            ]
        },
        "ip_pool_list": {
            "method": "device.ip_pool_list",
            "title": "List IP Pools",
            "description": "This method is used to list IP pools.",
            "params": [
                {
                    "param": "pool_id",
                    "name": "Pool ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "pool_assign",
                    "name": "Auto-assignment",
                    "required": false,
                    "default": null,
                    "description": "Return only IP pools with the auto-assignment set to the specific flag: 1 = Yes, 0 = No"
                },
                {
                    "param": "show_blocks",
                    "name": "Show IP blocks",
                    "required": false,
                    "default": null,
                    "description": "If specified, the return will also include IP blocks associated with each IP pool"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "ip_pool_update": {
            "method": "device.ip_pool_update",
            "title": "Update a Pool",
            "description": "This method is used to update a Pool in the system.",
            "params": [
                {
                    "param": "pool_id",
                    "name": "Pool ID",
                    "required": true,
                    "default": null,
                    "description": "The Pool ID"
                },
                {
                    "param": "pool_name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The Pool name."
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": 0,
                    "description": "The Pool facility ID. 0 Represents all Facilities"
                },
                {
                    "param": "pool_assign",
                    "name": "Auto Assignment",
                    "required": false,
                    "default": true,
                    "description": "If the Pool is assigned automatically"
                },
                {
                    "param": "pool_description",
                    "name": "Pool Description",
                    "required": false,
                    "default": "",
                    "description": "The Pool description."
                },
                {
                    "param": "max_util",
                    "name": "Maximum Utilization",
                    "required": false,
                    "default": 0,
                    "description": "The value is a percentage. If total utilization exceeds this threshold, the pool status will be set to alert.\nIf the utilization approaches this threshold, the pool status will be set to warning."
                },
                {
                    "param": "min_subnet",
                    "name": "Minimum Subnets",
                    "required": false,
                    "default": 0,
                    "description": "This specifies the minimum amount of contiguous free IP space within the pool.\nYou must specify the subnet size to check for (min_subnet_size), and the minimum number of subnets that the pool should contain.\nIf the pool contains less than this many available subnets, the pool status will be set to alert.\nIf the number of available subnets is less than 1.5x this setting, the pool status will be set to warning."
                },
                {
                    "param": "min_subnet_size",
                    "name": "Minimum Subnet Size",
                    "required": false,
                    "default": 0,
                    "description": "<a href=\"#appendix\"></a>The subnet size to check for the minimum number of subnets (that the pool should contain).\n0 represents no selection. See Appendix section for available options"
                },
                {
                    "param": "notify_address",
                    "name": "Notify Address",
                    "required": false,
                    "default": "",
                    "description": "If an alert threshold is set, this is the email address that alerts will be sent to."
                }
            ]
        },
        "ip_unassign": {
            "method": "device.ip_unassign",
            "title": "Unassign a Device IP",
            "description": "This method is used to unassign a device's IP.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "assign_id",
                    "name": "IP Assignment ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "addr",
                    "name": "IP Address",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "list": {
            "method": "device.list",
            "title": "List Devices",
            "description": "This method is used to list devices in the system.",
            "params": [
                {
                    "param": "parent",
                    "name": "Parent Device ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, only devices which are children of the specified device are returned. If the special value 0 is specified, only top-level devices are returned."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "device",
                    "name": "Device ID(s)",
                    "required": false,
                    "default": null,
                    "description": "A single device ID or an array of device IDs"
                },
                {
                    "param": "status",
                    "name": "Device Status",
                    "required": false,
                    "default": null,
                    "description": "Possible values:\nup\nwarn\ndown"
                },
                {
                    "param": "label",
                    "name": "Device Label",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "dev_desc",
                    "name": "Device Description",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "devtype_group_id",
                    "name": "Device Type Group ID",
                    "required": false,
                    "default": null,
                    "description": "Return only devices in the specified device type group. If the value 0 is specified, devices of ungrouped types will be returned."
                },
                {
                    "param": "type_id",
                    "name": "Device Type ID",
                    "required": false,
                    "default": null,
                    "description": "Return only devices of the specified type. Set to 0 to return devices without a type set."
                },
                {
                    "param": "rack_id",
                    "name": "Rack ID",
                    "required": false,
                    "default": null,
                    "description": "Return only devices in the specified rack. Set to 0 to return devices without a rack."
                },
                {
                    "param": "row_id",
                    "name": "Row ID",
                    "required": false,
                    "default": null,
                    "description": "Return only devices in the specified row. Set to 0 to return devices without a row."
                },
                {
                    "param": "cage_id",
                    "name": "Cage ID",
                    "required": false,
                    "default": null,
                    "description": "Return only devices in the specified cage. Set to 0 to return devices without a cage."
                },
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": false,
                    "default": null,
                    "description": "Return only devices in the specified zone. Set to 0 to return devices without a zone."
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": "Return only devices in the specified facility. Set to 0 to return devices without a facility."
                },
                {
                    "param": "tag_id",
                    "name": "Tag ID",
                    "required": false,
                    "default": null,
                    "description": "Return only devices with the specified tag."
                },
                {
                    "param": "tag_ids",
                    "name": "Tag IDs",
                    "required": false,
                    "default": null,
                    "description": "Return only devices with the specified tags. An array of tag IDs"
                },
                {
                    "param": "require_ip",
                    "name": "Include IP Addresses",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to include IP Address information in the output."
                },
                {
                    "param": "metadata",
                    "name": "Include Custom Fields",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to include custom fields in the output."
                },
                {
                    "param": "tags",
                    "name": "Include Tags",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to include device tags in the output."
                },
                {
                    "param": "modules",
                    "name": "Device Modules",
                    "required": false,
                    "default": null,
                    "description": "1 = modules & module_details, 2 = module_details"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "module_call": {
            "method": "device.module_call",
            "title": "Call a Device Module Function",
            "description": "This method is used to execute a device module function.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "module_id",
                    "name": "Module Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "function",
                    "name": "Function Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "module_params",
                    "name": "Parameters",
                    "required": false,
                    "default": null,
                    "description": "Array"
                }
            ]
        },
        "module_call_aggregate": {
            "method": "device.module_call_aggregate",
            "title": "Call an Aggregate Device Module Function",
            "description": "This method is used to execute an aggregate device module function.",
            "params": [
                {
                    "param": "device_ids",
                    "name": "Device ID Array",
                    "required": true,
                    "default": null,
                    "description": "Array of Device IDs"
                },
                {
                    "param": "module_id",
                    "name": "Device Module Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "function",
                    "name": "Function Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "module_params",
                    "name": "Parameters",
                    "required": false,
                    "default": null,
                    "description": "Array"
                }
            ]
        },
        "module_graph": {
            "method": "device.module_graph",
            "title": "Generate Device Module Graph",
            "description": "This method is used to generate a device module graph.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "module_id",
                    "name": "Device Module Name",
                    "required": true,
                    "default": null,
                    "description": "The device module identifier, it can either be the module ID or the module name."
                },
                {
                    "param": "module_params",
                    "name": "Module Parameters",
                    "required": false,
                    "default": null,
                    "description": "Array of module parameters (e.g. module_params[start]=1368721108)."
                },
                {
                    "param": "title",
                    "name": "Graph Title",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "start",
                    "name": "Start Date",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp"
                },
                {
                    "param": "end",
                    "name": "End Date",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp"
                },
                {
                    "param": "period",
                    "name": "Graph Period",
                    "required": false,
                    "default": null,
                    "description": "Possible values:\nhour - Current Hour\nday - Current Day\nweek - Current Week\nmonth - Current Month\nyear - Current Year\nlastmonth - Previous Month\nlastyear - Previous Year"
                }
            ]
        },
        "module_report": {
            "method": "device.module_report",
            "title": "Get a Device Module Report",
            "description": "This method is used to generate a device module report.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "module_id",
                    "name": "Module Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "start",
                    "name": "Start Time",
                    "required": true,
                    "default": null,
                    "description": "A Unix timestamp or in calendar format (ex. Oct/01/2022)"
                },
                {
                    "param": "end",
                    "name": "End Time",
                    "required": true,
                    "default": null,
                    "description": "A Unix timestamp or in calendar format (ex. Oct/10/2022)"
                }
            ]
        },
        "monitor_add": {
            "method": "device.monitor_add",
            "title": "Add a New Device Monitor",
            "description": "This method is used to add a new device monitor.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "protocol",
                    "name": "Protocol",
                    "required": true,
                    "default": null,
                    "description": "icmp = Ping\ndns = DNS\ntcp = TCP\nssl = SSL\nmodule = Device Module (see extra)"
                },
                {
                    "param": "address",
                    "name": "Monitored IP Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "label",
                    "name": "Monitor Label",
                    "required": false,
                    "default": null,
                    "description": "Additional textual identifier for the monitor"
                },
                {
                    "param": "notify",
                    "name": "Notification Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "notify_delay",
                    "name": "Notification Delay",
                    "required": false,
                    "default": 0,
                    "description": "Delay before sending notification in seconds\n0 = Send notification immediately"
                },
                {
                    "param": "notify_interval",
                    "name": "Notification Interval",
                    "required": false,
                    "default": 0,
                    "description": "Interval between notifications in seconds\n0 = Do not re-notify"
                },
                {
                    "param": "script_id",
                    "name": "Script ID",
                    "required": false,
                    "default": null,
                    "description": "Script to run for TCP & SSL monitors"
                },
                {
                    "param": "port",
                    "name": "Port",
                    "required": false,
                    "default": null,
                    "description": "Port for TCP & SSL Monitors"
                },
                {
                    "param": "loss",
                    "name": "Packet Loss",
                    "required": false,
                    "default": null,
                    "description": "Maximum Allowable Packet Loss %"
                },
                {
                    "param": "extra",
                    "name": "Extra Parameters",
                    "required": false,
                    "default": null,
                    "description": "Array of extra Parameters (see extra[<x>])"
                },
                {
                    "param": "extra[notify_downstream]",
                    "name": "Notify Downstream Device Owners",
                    "required": false,
                    "default": 0,
                    "description": "0 = No\n1= Yes"
                },
                {
                    "param": "extra[module]",
                    "name": "Module Name",
                    "required": false,
                    "default": null,
                    "description": "Device Module Name"
                },
                {
                    "param": "extra[<x>]",
                    "name": "Additional Parameters",
                    "required": false,
                    "default": null,
                    "description": "Additional Parameters to store in the extra array, e.g. parameters required by device module monitors"
                }
            ]
        },
        "monitor_delete": {
            "method": "device.monitor_delete",
            "title": "Delete a Device Monitor",
            "description": "This method is used to delete a device monitor.",
            "params": [
                {
                    "param": "mon_id",
                    "name": "Monitor ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "protocol",
                    "name": "Protocol",
                    "required": false,
                    "default": null,
                    "description": "icmp = Ping\ndns = DNS\ntcp = TCP\nssl = SSL\nmodule = Device Module (see extra)"
                },
                {
                    "param": "script_id",
                    "name": "Script ID",
                    "required": false,
                    "default": null,
                    "description": "Script to run for TCP & SSL monitors"
                },
                {
                    "param": "module",
                    "name": "Module Name",
                    "required": false,
                    "default": null,
                    "description": "Device Module Name"
                }
            ]
        },
        "monitor_disable": {
            "method": "device.monitor_disable",
            "title": "Disable a Device Monitor",
            "description": "This method is used to disable a device monitor.",
            "params": [
                {
                    "param": "mon_id",
                    "name": "Monitor ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "script_id",
                    "name": "Script ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "module",
                    "name": "Module Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "zone_id",
                    "name": "Monitor ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "devtype_group_id",
                    "name": "Device Type Group ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "monitor_enable": {
            "method": "device.monitor_enable",
            "title": "Enable a Device Monitor",
            "description": "This method is used to enable a device monitor.",
            "params": [
                {
                    "param": "mon_id",
                    "name": "Monitor ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "script_id",
                    "name": "Script ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "module",
                    "name": "Module Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "zone_id",
                    "name": "Monitor ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "devtype_group_id",
                    "name": "Device Type Group ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "monitor_get": {
            "method": "device.monitor_get",
            "title": "Get a Device Monitor",
            "description": "This method is used to get a device monitor's details.",
            "params": [
                {
                    "param": "mon_id",
                    "name": "Monitor ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "logs",
                    "name": "Monitor Logs",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order monitor log results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return monitor log records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of monitor log rows to return"
                }
            ]
        },
        "monitor_list": {
            "method": "device.monitor_list",
            "title": "List Device Monitors",
            "description": "This method is used to list device monitors.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "mon_id",
                    "name": "Monitor ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "state",
                    "name": "Monitor State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "not_state",
                    "name": "Monitor State",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "script_id",
                    "name": "Script ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "module",
                    "name": "Device Module",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "protocol",
                    "name": "Monitoring Protocol",
                    "required": false,
                    "default": null,
                    "description": "icmp = Ping\ndns = DNS\ntcp = TCP\nssl = SSL\nmodule = Device Module (see extra)"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "monitor_update": {
            "method": "device.monitor_update",
            "title": "Update a Device Monitor",
            "description": "This method is used to update a device monitor.",
            "params": [
                {
                    "param": "mon_id",
                    "name": "Monitor ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "protocol",
                    "name": "Protocol",
                    "required": true,
                    "default": null,
                    "description": "icmp = Ping\ndns = DNS\ntcp = TCP\nssl = SSL\nmodule = Device Module (see extra)"
                },
                {
                    "param": "address",
                    "name": "Monitored IP Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "label",
                    "name": "Monitor Label",
                    "required": false,
                    "default": null,
                    "description": "Additional textual identifier for the monitor"
                },
                {
                    "param": "notify",
                    "name": "Notification Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "notify_delay",
                    "name": "Notification Delay",
                    "required": false,
                    "default": 0,
                    "description": "Delay before sending notification in seconds\n0 = Send notification immediately"
                },
                {
                    "param": "notify_interval",
                    "name": "Notification Interval",
                    "required": false,
                    "default": 0,
                    "description": "Interval between notifications in seconds\n0 = Do not re-notify"
                },
                {
                    "param": "script_id",
                    "name": "Script ID",
                    "required": false,
                    "default": null,
                    "description": "Script to run for TCP & SSL monitors"
                },
                {
                    "param": "port",
                    "name": "Port",
                    "required": false,
                    "default": null,
                    "description": "Port for TCP & SSL Monitors"
                },
                {
                    "param": "loss",
                    "name": "Packet Loss",
                    "required": false,
                    "default": null,
                    "description": "Maximum Allowable Packet Loss %"
                },
                {
                    "param": "extra",
                    "name": "Extra Parameters",
                    "required": false,
                    "default": null,
                    "description": "Array of extra Parameters (see extra[<x>])"
                },
                {
                    "param": "extra[notify_downstream]",
                    "name": "Notify Downstream Device Owners",
                    "required": false,
                    "default": 0,
                    "description": "0 = No\n1= Yes"
                },
                {
                    "param": "extra[module]",
                    "name": "Module Name",
                    "required": false,
                    "default": null,
                    "description": "Device Module Name"
                },
                {
                    "param": "extra[<x>]",
                    "name": "Additional Parameters",
                    "required": false,
                    "default": null,
                    "description": "Additional Parameters to store in the extra array, e.g. parameters required by device module monitors"
                }
            ]
        },
        "rack_add": {
            "method": "device.rack_add",
            "title": "Add a rack",
            "description": "This method is used to add a rack in the system.",
            "params": [
                {
                    "param": "row_id",
                    "name": "Row ID",
                    "required": true,
                    "default": null,
                    "description": "The Row ID."
                },
                {
                    "param": "rack_name",
                    "name": "Rack Name",
                    "required": false,
                    "default": null,
                    "description": "Name for Rack. Required if code is not provided"
                },
                {
                    "param": "rack_code",
                    "name": "Rack Code",
                    "required": false,
                    "default": null,
                    "description": "Code for Rack. Required if name is not provided"
                },
                {
                    "param": "rack_direction",
                    "name": "Rack Direction And Type",
                    "required": false,
                    "default": "bottom",
                    "description": "Standard type options: bottom, top\n\nBreadrack type options: bottom-left, bottom-right, top-left, top-right"
                },
                {
                    "param": "rack_unit",
                    "name": "Rack Unit",
                    "required": false,
                    "default": "42",
                    "description": "A unit of measurement defined as 1 3&#47;4 inches - 44.45 mm (EIA-310 specification).\n*Only configurable for standard type racks"
                },
                {
                    "param": "shelves",
                    "name": "Rack Shelves",
                    "required": false,
                    "default": "1",
                    "description": "Number of shelves, from 1 to 100.\n*Only configurable for breadrack type racks"
                },
                {
                    "param": "slots",
                    "name": "Rack Slots",
                    "required": false,
                    "default": "1",
                    "description": "Number of slots\n*Only configurable for breadrack type racks"
                },
                {
                    "param": "ac_power_capacity",
                    "name": "AC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "AC power capacity measured in Amps"
                },
                {
                    "param": "dc_power_capacity",
                    "name": "DC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "DC power capacity measured in Amps"
                },
                {
                    "param": "area_display_value",
                    "name": "Area Size Value",
                    "required": false,
                    "default": "0.00",
                    "description": "The area size measured in square feet.\nIf not set or set to \"0\" and either <b>width_display_value</b> and/or <b>depth_display_value</b> is set, the area will automatically be calculated."
                },
                {
                    "param": "meta_",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": "0",
                    "description": "The client id."
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": "0",
                    "description": "The rack status can only be edited if parent location statuses are in an unoccupied state. Otherwise the status is inherited.\n\nUnoccupied\n0 = Available\n1 = Inactive\n\nReserved / Occupied\n2 = Internal Reserved\n3 = Internal Occupied\n4 = Customer Right of First Refusal\n5 = Customer Occupied"
                },
                {
                    "param": "rofr_expiration_date",
                    "name": "ROFR Expiration Date",
                    "required": false,
                    "default": "0",
                    "description": "The expiration date of the contractual Right of First Refusal (ROFR)"
                },
                {
                    "param": "assigned_date",
                    "name": "Assigned Date",
                    "required": false,
                    "default": "0",
                    "description": "The assigned date"
                },
                {
                    "param": "width_display_value",
                    "name": "Width Value",
                    "required": false,
                    "default": "19",
                    "description": "The rack width"
                },
                {
                    "param": "width_display_unit",
                    "name": "Width Unit",
                    "required": false,
                    "default": 1,
                    "description": "Units of measurement\n1 = inches\n2 = feet\n3 = yards"
                },
                {
                    "param": "depth_display_value",
                    "name": "Depth Value",
                    "required": false,
                    "default": "42",
                    "description": "The rack depth"
                },
                {
                    "param": "depth_display_unit",
                    "name": "Depth Unit",
                    "required": false,
                    "default": 1,
                    "description": "Units of measurement\n1 = inches\n2 = feet\n3 = yards"
                },
                {
                    "param": "height_display_value",
                    "name": "Height Value",
                    "required": false,
                    "default": "73.50",
                    "description": "The rack height\n*Only configurable for breadrack type racks"
                },
                {
                    "param": "height_display_unit",
                    "name": "Height Unit",
                    "required": false,
                    "default": 1,
                    "description": "Units of measurement\n1 = inches\n2 = feet\n3 = yards\n*Only configurable for breadrack type racks"
                }
            ]
        },
        "rack_list": {
            "method": "device.rack_list",
            "title": "List Racks",
            "description": "This method is used to list racks, including devices by position.",
            "params": [
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Facility ID"
                },
                {
                    "param": "fac_code",
                    "name": "Facility Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Facility Code"
                },
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Zone ID"
                },
                {
                    "param": "zone_code",
                    "name": "Zone Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Zone Code"
                },
                {
                    "param": "cage_id",
                    "name": "Cage ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Cage ID"
                },
                {
                    "param": "cage_code",
                    "name": "Cage Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Cage Code"
                },
                {
                    "param": "row_id",
                    "name": "Row ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Row ID"
                },
                {
                    "param": "row_code",
                    "name": "Row Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Row Code"
                },
                {
                    "param": "rack_id",
                    "name": "Rack ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Rack ID"
                },
                {
                    "param": "rack_code",
                    "name": "Rack Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Rack Code"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Client ID"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Unoccupied\n0 = Available\n1 = Inactive\n\nReserved / Occupied\n2 = Internal Reserved\n3 = Internal Occupied\n4 = Customer Right of First Refusal\n5 = Customer Occupied"
                }
            ]
        },
        "rack_update": {
            "method": "device.rack_update",
            "title": "Update a rack",
            "description": "This method is used to update a rack in the system.",
            "params": [
                {
                    "param": "rack_id",
                    "name": "Rack ID",
                    "required": true,
                    "default": null,
                    "description": "The Rack ID"
                },
                {
                    "param": "row_id",
                    "name": "Row ID",
                    "required": false,
                    "default": null,
                    "description": "The Row ID."
                },
                {
                    "param": "rack_name",
                    "name": "Rack Name",
                    "required": false,
                    "default": null,
                    "description": "Name for Rack."
                },
                {
                    "param": "rack_code",
                    "name": "Rack Code",
                    "required": false,
                    "default": null,
                    "description": "Code for Rack."
                },
                {
                    "param": "rack_direction",
                    "name": "Rack Direction And Type",
                    "required": false,
                    "default": "bottom",
                    "description": "Standard type options: bottom, top\n\nBreadrack type options: bottom-left, bottom-right, top-left, top-right"
                },
                {
                    "param": "rack_unit",
                    "name": "Rack Unit",
                    "required": false,
                    "default": "42",
                    "description": "A unit of measurement defined as 1 3&#47;4 inches - 44.45 mm (EIA-310 specification).\n*Only configurable for standard type racks"
                },
                {
                    "param": "shelves",
                    "name": "Rack Shelves",
                    "required": false,
                    "default": "1",
                    "description": "Number of shelves, from 1 to 100.\n*Only configurable for breadrack type racks"
                },
                {
                    "param": "slots",
                    "name": "Rack Slots",
                    "required": false,
                    "default": "1",
                    "description": "Number of slots\n*Only configurable for breadrack type racks"
                },
                {
                    "param": "ac_power_capacity",
                    "name": "AC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "AC power capacity measured in Amps"
                },
                {
                    "param": "dc_power_capacity",
                    "name": "DC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "DC power capacity measured in Amps"
                },
                {
                    "param": "area_display_value",
                    "name": "Area Size Value",
                    "required": false,
                    "default": "0.00",
                    "description": "The area size measured in square feet.\nIf not set or set to \"0\" and either <b>width_display_value</b> and/or <b>depth_display_value</b> is set, the area will automatically be calculated."
                },
                {
                    "param": "meta_",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": "0",
                    "description": "The client id."
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": "0",
                    "description": "The rack status can only be edited if parent location statuses are in an unoccupied state. Otherwise the status is inherited.\n\nUnoccupied\n0 = Available\n1 = Inactive\n\nReserved / Occupied\n2 = Internal Reserved\n3 = Internal Occupied\n4 = Customer Right of First Refusal\n5 = Customer Occupied"
                },
                {
                    "param": "rofr_expiration_date",
                    "name": "ROFR Expiration Date",
                    "required": false,
                    "default": "0",
                    "description": "The expiration date of the contractual Right of First Refusal (ROFR)"
                },
                {
                    "param": "assigned_date",
                    "name": "Assigned Date",
                    "required": false,
                    "default": "0",
                    "description": "The assigned date"
                },
                {
                    "param": "width_display_value",
                    "name": "Width Value",
                    "required": false,
                    "default": "19",
                    "description": "The rack width"
                },
                {
                    "param": "width_display_unit",
                    "name": "Width Unit",
                    "required": false,
                    "default": 1,
                    "description": "Units of measurement\n1 = inches\n2 = feet\n3 = yards"
                },
                {
                    "param": "depth_display_value",
                    "name": "Depth Value",
                    "required": false,
                    "default": "42",
                    "description": "The rack depth"
                },
                {
                    "param": "depth_display_unit",
                    "name": "Depth Unit",
                    "required": false,
                    "default": 1,
                    "description": "Units of measurement\n1 = inches\n2 = feet\n3 = yards"
                },
                {
                    "param": "height_display_value",
                    "name": "Height Value",
                    "required": false,
                    "default": "73.50",
                    "description": "The rack height\n*Only configurable for breadrack type racks"
                },
                {
                    "param": "height_display_unit",
                    "name": "Height Unit",
                    "required": false,
                    "default": 1,
                    "description": "Units of measurement\n1 = inches\n2 = feet\n3 = yards\n*Only configurable for breadrack type racks"
                }
            ]
        },
        "raw_module_list": {
            "method": "device.raw_module_list",
            "title": "List Available Device Modules",
            "description": "This method returns a list of device modules.",
            "params": []
        },
        "reboot": {
            "method": "device.reboot",
            "title": "Set a Device's Power State",
            "description": "This method is used to control the power state of a device.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "power_action",
                    "name": "Power Action",
                    "required": true,
                    "default": null,
                    "description": "Possible values:\non\noff\nreboot"
                },
                {
                    "param": "outlet",
                    "name": "Outlet Number",
                    "required": false,
                    "default": null,
                    "description": "Control an individual port"
                }
            ]
        },
        "reboot_graph": {
            "method": "device.reboot_graph",
            "title": "Get a Reboot Graph",
            "description": "This method is used to generate a graph of the power usage for a specified device.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "module_id",
                    "name": "Device Module Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "start_time",
                    "name": "Start Date",
                    "required": false,
                    "default": null,
                    "description": "In calendar format"
                },
                {
                    "param": "end_time",
                    "name": "End Date",
                    "required": false,
                    "default": null,
                    "description": "In calendar format"
                },
                {
                    "param": "title",
                    "name": "Graph Title",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "width",
                    "name": "Graph Width",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "height",
                    "name": "Graph Height",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "period",
                    "name": "Graph Period",
                    "required": false,
                    "default": null,
                    "description": "Possible values:\nhour - Current Hour\nday - Current Day\nweek - Current Week\nmonth - Current Month\nlastmonth - Previous Month\nyear - Current Year\nlastyear - Previous Year\ncustom - Custom Period\nIf using the start_time and end_time parameters, period must be set to custom."
                }
            ]
        },
        "row_add": {
            "method": "device.row_add",
            "title": "Add a row",
            "description": "This method is used to add a row in the system.",
            "params": [
                {
                    "param": "cage_id",
                    "name": "Cage ID",
                    "required": true,
                    "default": null,
                    "description": "The Cage ID."
                },
                {
                    "param": "row_name",
                    "name": "Row Name",
                    "required": false,
                    "default": null,
                    "description": "Name for Row. Required if code is not provided"
                },
                {
                    "param": "row_code",
                    "name": "Row Code",
                    "required": false,
                    "default": null,
                    "description": "Code for Row. Required if name is not provided"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": "0",
                    "description": "The row status can only be edited if parent location statuses are in an unoccupied state. Otherwise the status is inherited.\n\nUnoccupied\n0 = Available\n1 = Inactive"
                },
                {
                    "param": "meta_",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                }
            ]
        },
        "row_list": {
            "method": "device.row_list",
            "title": "List Device Rows",
            "description": "This method is used to list device rows.",
            "params": [
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Facility ID"
                },
                {
                    "param": "fac_code",
                    "name": "Facility Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Facility Code"
                },
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Zone ID"
                },
                {
                    "param": "zone_code",
                    "name": "Zone Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Zone Code"
                },
                {
                    "param": "cage_id",
                    "name": "Cage ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Cage ID"
                },
                {
                    "param": "cage_code",
                    "name": "Cage Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Cage Code"
                },
                {
                    "param": "row_id",
                    "name": "Row ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Row ID"
                },
                {
                    "param": "row_code",
                    "name": "Row Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Row Code"
                },
                {
                    "param": "rack_id",
                    "name": "Rack ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Rack ID"
                },
                {
                    "param": "rack_code",
                    "name": "Rack Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Rack Code"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Client ID"
                },
                {
                    "param": "metadata",
                    "name": "Include Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "If set, custom fields metadata will be included in the response output"
                },
                {
                    "param": "exclude_downstream",
                    "name": "Exclude downstream",
                    "required": false,
                    "default": false,
                    "description": "If set, downstream locations (racks) will be excluded from the response output"
                }
            ]
        },
        "row_update": {
            "method": "device.row_update",
            "title": "Update a row",
            "description": "This method is used to update a row in the system.",
            "params": [
                {
                    "param": "row_id",
                    "name": "Row ID",
                    "required": true,
                    "default": null,
                    "description": "The Row ID"
                },
                {
                    "param": "cage_id",
                    "name": "Cage ID",
                    "required": false,
                    "default": null,
                    "description": "The Cage ID."
                },
                {
                    "param": "row_name",
                    "name": "Row Name",
                    "required": false,
                    "default": null,
                    "description": "Name for Row."
                },
                {
                    "param": "row_code",
                    "name": "Row Code",
                    "required": false,
                    "default": null,
                    "description": "Code for Row."
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": "0",
                    "description": "The row status can only be edited if parent location statuses are in an unoccupied state. Otherwise the status is inherited.\n\nUnoccupied\n0 = Available\n1 = Inactive"
                },
                {
                    "param": "meta_",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                }
            ]
        },
        "storage_delete": {
            "method": "device.storage_delete",
            "title": "Delete a Device's Storage",
            "description": "This method is used to delete a device's storage.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "item",
                    "name": "Item",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "storage_get": {
            "method": "device.storage_get",
            "title": "Get a Device's Storage",
            "description": "This method is used to get a device's storage.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "item",
                    "name": "Item",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "storage_list": {
            "method": "device.storage_list",
            "title": "List a Device's Storage",
            "description": "This method is used to list a device's storage.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID(s)",
                    "required": false,
                    "default": null,
                    "description": "A single device ID or an array of device IDs"
                },
                {
                    "param": "items",
                    "name": "Item(s)",
                    "required": false,
                    "default": null,
                    "description": "A single item or an array of items"
                }
            ]
        },
        "storage_set": {
            "method": "device.storage_set",
            "title": "Set a Device's Storage",
            "description": "This method is used to set a device's storage.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "item",
                    "name": "Item",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "value",
                    "name": "Value",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "encrypt",
                    "name": "Encrypt",
                    "required": false,
                    "default": false,
                    "description": ""
                }
            ]
        },
        "tag": {
            "method": "device.tag",
            "title": "Tag a Device",
            "description": "This method is used to tag a device.",
            "params": [
                {
                    "param": "tag",
                    "name": "Tag(s) to set",
                    "required": true,
                    "default": null,
                    "description": "A single tag, or array of tags"
                },
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": "A single device ID, or array of device IDs"
                }
            ]
        },
        "tag_list": {
            "method": "device.tag_list",
            "title": "List Device Tags",
            "description": "This method is used to list all device tags.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, return tags assigned to the specified device."
                },
                {
                    "param": "has_devices",
                    "name": "Devices",
                    "required": false,
                    "default": null,
                    "description": "Return tags that are assigned to devices."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "type_add": {
            "method": "device.type_add",
            "title": "Add a new Device Type",
            "description": "This method is used to add a device type to the system. Device type id is returned on success.",
            "params": [
                {
                    "param": "type",
                    "name": "Device Type Name",
                    "required": true,
                    "default": null,
                    "description": "Name for device type"
                },
                {
                    "param": "type_{locale}",
                    "name": "Localized Device Type Name",
                    "required": false,
                    "default": null,
                    "description": "Localized (i18n) name for device type. Key name is dynamic (e.g.: type_en_US, type_pt_PT)"
                },
                {
                    "param": "devtype_group_id",
                    "name": "Device Type Group ID",
                    "required": false,
                    "default": 0,
                    "description": "Optional device type group the new device type will be a member of"
                },
                {
                    "param": "rackable_device",
                    "name": "Rackable Device",
                    "required": false,
                    "default": 1,
                    "description": "Flag to specify whether the height is measurable in rack units"
                },
                {
                    "param": "rack_units",
                    "name": "Rack Units",
                    "required": false,
                    "default": 1,
                    "description": "Number of Rack Units which measures the height of the device. Only valid if rackable_device is true."
                },
                {
                    "param": "width",
                    "name": "Width in mm",
                    "required": false,
                    "default": 0,
                    "description": "Width of device type in millimeters. Only use if not specifying width_display_unit."
                },
                {
                    "param": "width_display_value",
                    "name": "Width",
                    "required": false,
                    "default": null,
                    "description": "Width of device type in units of width_display_unit"
                },
                {
                    "param": "width_display_unit",
                    "name": "Width Units",
                    "required": false,
                    "default": null,
                    "description": "Dimensional units of width (INCHES,FEET,CENTIMETERS,METERS)"
                },
                {
                    "param": "depth",
                    "name": "Depth in mm",
                    "required": false,
                    "default": 0,
                    "description": "Depth of device type in millimeters. Only use if not specifying depth_display_unit."
                },
                {
                    "param": "depth_display_value",
                    "name": "Depth",
                    "required": false,
                    "default": null,
                    "description": "Depth of device type in units of width_display_unit"
                },
                {
                    "param": "depth_display_unit",
                    "name": "Depth Units",
                    "required": false,
                    "default": null,
                    "description": "Dimensional units of depth (INCHES,FEET,CENTIMETERS,METERS)"
                },
                {
                    "param": "height",
                    "name": "Height in mm",
                    "required": false,
                    "default": 0,
                    "description": "Height of device type. Only used if type is not a rackable_device"
                },
                {
                    "param": "height_display_value",
                    "name": "Height",
                    "required": false,
                    "default": null,
                    "description": "Height of device type in units of height_display_unit"
                },
                {
                    "param": "height_display_unit",
                    "name": "Height Units",
                    "required": false,
                    "default": null,
                    "description": "Dimensional units of height (INCHES,FEET,CENTIMETERS,METERS). Defaults to MILLIMETERS."
                },
                {
                    "param": "editable_dimensions",
                    "name": "Editable Dimensions",
                    "required": false,
                    "default": 0,
                    "description": "Flag to enable/disable editing the dimensions on devices of this device type"
                },
                {
                    "param": "client_access",
                    "name": "Client Visible",
                    "required": false,
                    "default": 0,
                    "description": "Flag to enable/disable visibility of this device type to clients adding new devices"
                },
                {
                    "param": "metadata_applies[{variable}]",
                    "name": "Custom Fields Applicability",
                    "required": false,
                    "default": null,
                    "description": "Set whether the custom fields specified by variable name applies to the device type. Accepted values are (-1: Default, 0: No, 1: Yes, 2: Required)"
                },
                {
                    "param": "front_image_file_id",
                    "name": "Front Image File ID",
                    "required": false,
                    "default": 0,
                    "description": "File id to use for the device type front image"
                },
                {
                    "param": "back_image_file_id",
                    "name": "Back Image File ID",
                    "required": false,
                    "default": 0,
                    "description": "File id to use for the device type back image"
                },
                {
                    "param": "block_delete_if_connected",
                    "name": "Block Delete if Connected",
                    "required": false,
                    "default": 0,
                    "description": "Prevent device deletion if it has Connections"
                }
            ]
        },
        "type_delete": {
            "method": "device.type_delete",
            "title": "Delete a Device Type",
            "description": "This method is used to delete a device type in the system. Child devices must be migrated to a new type",
            "params": [
                {
                    "param": "type_id",
                    "name": "Device Type ID",
                    "required": true,
                    "default": null,
                    "description": "Device type ID"
                },
                {
                    "param": "new_type_id",
                    "name": "New Type ID",
                    "required": true,
                    "default": null,
                    "description": "Migrate devices of old type to the new type specified by this ID. To leave devices with no new type provide an ID of 0."
                }
            ]
        },
        "type_group_add": {
            "method": "device.type_group_add",
            "title": "Add Device Type Group",
            "description": "This method is used to add a device type group in the system. Device type group id is returned on success.",
            "params": [
                {
                    "param": "name",
                    "name": "Device Type Group Name",
                    "required": true,
                    "default": null,
                    "description": "Name for device type group"
                },
                {
                    "param": "name_{locale}",
                    "name": "Localized Device Type Group Name",
                    "required": false,
                    "default": null,
                    "description": "Localized (i18n) name for device type group. Key name is dynamic (e.g.: name_en_US, name_pt_PT)"
                },
                {
                    "param": "metadata_applies[{variable}]",
                    "name": "Custom Fields Applicability",
                    "required": false,
                    "default": null,
                    "description": "Set whether custom fields applies to the device type group. Accepted values are 0 - No, 1 - Yes, 2 - Required"
                }
            ]
        },
        "type_group_delete": {
            "method": "device.type_group_delete",
            "title": "Delete Device Type Group",
            "description": "This method is used to delete a device type group in the system.",
            "params": [
                {
                    "param": "devtype_group_id",
                    "name": "Device Type Group ID",
                    "required": true,
                    "default": null,
                    "description": "Device type group ID to delete."
                }
            ]
        },
        "type_group_list": {
            "method": "device.type_group_list",
            "title": "List Device Type Groups",
            "description": "This method is used to list device type groups in the system.",
            "params": [
                {
                    "param": "devtype_group_id",
                    "name": "Device Type Group ID",
                    "required": false,
                    "default": null,
                    "description": "Return only the specified device type group."
                },
                {
                    "param": "metadata",
                    "name": "Include Custom Fields",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to include custom fields in the output."
                },
                {
                    "param": "modules",
                    "name": "Device Modules",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to include modules in the output."
                }
            ]
        },
        "type_group_module_add": {
            "method": "device.type_group_module_add",
            "title": "Add a Device Module to Device Type Group",
            "description": "This method is used to add a device module to a device type group.",
            "params": [
                {
                    "param": "devtype_group_id",
                    "name": "Device Type Group ID",
                    "required": true,
                    "default": null,
                    "description": "ID of device type group to update"
                },
                {
                    "param": "module",
                    "name": "Device Module Name",
                    "required": true,
                    "default": null,
                    "description": "Name of device module. Names are obtained from device.raw_module_list"
                },
                {
                    "param": "enabled",
                    "name": "Enabled",
                    "required": false,
                    "default": null,
                    "description": "Enable or disable the module by setting the value to 1 or 0, respectively"
                },
                {
                    "param": "priority",
                    "name": "Module Priority",
                    "required": false,
                    "default": null,
                    "description": "Set priority of the module (over similar device type module). 1 indicates highest priority, while 10 is the lowest."
                },
                {
                    "param": "client_access",
                    "name": "Client Access",
                    "required": false,
                    "default": null,
                    "description": "Set client access to None, View, or Edit using a value of 0, 1, or 2"
                },
                {
                    "param": "config[{variable}]",
                    "name": "Module Config",
                    "required": false,
                    "default": null,
                    "description": "Module configuration variable name is used to create a valid key, valid values vary per module. Be warned that modules are meant to be configured through the web admin and that making changes using this feature is unsupported unless directed to do so by Ubersmith staff."
                }
            ]
        },
        "type_group_module_delete": {
            "method": "device.type_group_module_delete",
            "title": "Remove a Device Module from a Device Type Group",
            "description": "This method is used to delete a device module from a device type group.",
            "params": [
                {
                    "param": "module_id",
                    "name": "Device Module ID",
                    "required": true,
                    "default": null,
                    "description": "ID of device module to remove from device type group"
                }
            ]
        },
        "type_group_module_update": {
            "method": "device.type_group_module_update",
            "title": "Configure a Device Module in a Device Type Group",
            "description": "This method is used to configure a device module in a device type group.",
            "params": [
                {
                    "param": "module_id",
                    "name": "Device Module ID",
                    "required": true,
                    "default": null,
                    "description": "ID of device type group module to update"
                },
                {
                    "param": "enabled",
                    "name": "Enabled",
                    "required": false,
                    "default": null,
                    "description": "Enable or disable the module by setting the value to 1 or 0, respectively"
                },
                {
                    "param": "priority",
                    "name": "Module Priority",
                    "required": false,
                    "default": null,
                    "description": "Set priority of the module (over similar device type module). 1 indicates highest priority, while 10 is the lowest."
                },
                {
                    "param": "client_access",
                    "name": "Client Access",
                    "required": false,
                    "default": null,
                    "description": "Set client access to None, View, or Edit using a value of 0, 1, or 2"
                },
                {
                    "param": "config[{variable}]",
                    "name": "Module Config",
                    "required": false,
                    "default": null,
                    "description": "Module configuration variable name is used to create a valid key, valid values vary per module. Be warned that modules are meant to be configured through the web admin and that making changes using this feature is unsupported unless directed to do so by Ubersmith staff."
                }
            ]
        },
        "type_group_update": {
            "method": "device.type_group_update",
            "title": "Update a Device Type Group",
            "description": "This method is used to update a device type group.",
            "params": [
                {
                    "param": "devtype_group_id",
                    "name": "Device Type Group ID",
                    "required": true,
                    "default": null,
                    "description": "ID of device type group to update"
                },
                {
                    "param": "name",
                    "name": "Device Type Group Name",
                    "required": false,
                    "default": null,
                    "description": "Name for device type group"
                },
                {
                    "param": "name_{locale}",
                    "name": "Localized Device Type Group Name",
                    "required": false,
                    "default": null,
                    "description": "Localized (i18n) name for device type group. Key name is dynamic (e.g.: name_en_US, name_pt_PT)"
                },
                {
                    "param": "metadata_applies[{variable}]",
                    "name": "Custom Fields Applicability",
                    "required": false,
                    "default": null,
                    "description": "Set whether custom fields applies to the device type group. Accepted values are 0 - No, 1 - Yes, 2 - Required"
                }
            ]
        },
        "type_list": {
            "method": "device.type_list",
            "title": "List Device Types",
            "description": "This method is used to list device types.",
            "params": [
                {
                    "param": "devtype_group_id",
                    "name": "Type Group ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "type_id",
                    "name": "Type ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "metadata",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "modules",
                    "name": "Device Modules",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "type_module_add": {
            "method": "device.type_module_add",
            "title": "Add a Device Module to Device Type",
            "description": "This method is used to add a device module to a device type.",
            "params": [
                {
                    "param": "devtype_id",
                    "name": "Device Type ID",
                    "required": true,
                    "default": null,
                    "description": "ID of device type to update"
                },
                {
                    "param": "module",
                    "name": "Device Module Name",
                    "required": true,
                    "default": null,
                    "description": "Name of device module. Names are obtained from device.raw_module_list"
                },
                {
                    "param": "enabled",
                    "name": "Enabled",
                    "required": false,
                    "default": null,
                    "description": "Enable or disable the module by setting the value to 1 or 0, respectively"
                },
                {
                    "param": "priority",
                    "name": "Module Priority",
                    "required": false,
                    "default": null,
                    "description": "Set priority of the module (over similar device type module). 1 indicates highest priority, while 10 is the lowest."
                },
                {
                    "param": "client_access",
                    "name": "Client Access",
                    "required": false,
                    "default": null,
                    "description": "Set client access to None, View, or Edit using a value of 0, 1, or 2"
                },
                {
                    "param": "config[{variable}]",
                    "name": "Module Config",
                    "required": false,
                    "default": null,
                    "description": "Module configuration variable name is used to create a valid key, valid values vary per module. Be warned that modules are meant to be configured through the web admin and that making changes using this feature is unsupported unless directed to do so by Ubersmith staff."
                }
            ]
        },
        "type_module_delete": {
            "method": "device.type_module_delete",
            "title": "Remove a Device Module from a Device Type",
            "description": "This method is used to delete a device module from a device type.",
            "params": [
                {
                    "param": "module_id",
                    "name": "Device Module ID",
                    "required": true,
                    "default": null,
                    "description": "ID of device module to remove from device type"
                }
            ]
        },
        "type_module_update": {
            "method": "device.type_module_update",
            "title": "Configure a Device Module in a Device Type",
            "description": "This method is used to configure a device module in a device type.",
            "params": [
                {
                    "param": "module_id",
                    "name": "Device Module ID",
                    "required": true,
                    "default": null,
                    "description": "ID of device module to remove from device type"
                },
                {
                    "param": "enabled",
                    "name": "Enabled",
                    "required": false,
                    "default": null,
                    "description": "Enable or disable the module by setting the value to 1 or 0, respectively"
                },
                {
                    "param": "priority",
                    "name": "Module Priority",
                    "required": false,
                    "default": null,
                    "description": "Set priority of the module (over similar device type module). 1 indicates highest priority, while 10 is the lowest."
                },
                {
                    "param": "client_access",
                    "name": "Client Access",
                    "required": false,
                    "default": null,
                    "description": "Set client access to None, View, or Edit using a value of 0, 1, or 2"
                },
                {
                    "param": "config[{variable}]",
                    "name": "Module Config",
                    "required": false,
                    "default": null,
                    "description": "Module configuration variable name is used to create a valid key, valid values vary per module. Be warned that modules are meant to be configured through the web admin and that making changes using this feature is unsupported unless directed to do so by Ubersmith staff."
                }
            ]
        },
        "type_update": {
            "method": "device.type_update",
            "title": "Edit a Device Type",
            "description": "This method is used to edit a device type in the system.",
            "params": [
                {
                    "param": "type_id",
                    "name": "Device Type ID",
                    "required": true,
                    "default": null,
                    "description": "Device type ID"
                },
                {
                    "param": "type",
                    "name": "Device Type Name",
                    "required": false,
                    "default": null,
                    "description": "Name for device type"
                },
                {
                    "param": "type_{locale}",
                    "name": "Localized Device Type Name",
                    "required": false,
                    "default": null,
                    "description": "Localized (i18n) name for device type. Key name is dynamic (e.g.: type_en_US, type_pt_PT)"
                },
                {
                    "param": "devtype_group_id",
                    "name": "Device Type Group ID",
                    "required": false,
                    "default": null,
                    "description": "The device type will be added to the specified device type group"
                },
                {
                    "param": "rackable_device",
                    "name": "Rackable Device",
                    "required": false,
                    "default": null,
                    "description": "Flag to specify whether the height is measurable in rack units"
                },
                {
                    "param": "rack_units",
                    "name": "Rack Units",
                    "required": false,
                    "default": null,
                    "description": "Number of Rack Units which measures the height of the device. Only valid if rackable_device is true."
                },
                {
                    "param": "width",
                    "name": "Width in mm",
                    "required": false,
                    "default": null,
                    "description": "Width of device type in millimeters. Only use if not specifying width_display_unit."
                },
                {
                    "param": "width_display_value",
                    "name": "Width",
                    "required": false,
                    "default": null,
                    "description": "Width of device type in units of width_display_unit"
                },
                {
                    "param": "width_display_unit",
                    "name": "Width Units",
                    "required": false,
                    "default": null,
                    "description": "Dimensional units of width (INCHES,FEET,CENTIMETERS,METERS)"
                },
                {
                    "param": "depth",
                    "name": "Depth in mm",
                    "required": false,
                    "default": null,
                    "description": "Depth of device type in millimeters. Only use if not specifying depth_display_unit."
                },
                {
                    "param": "depth_display_value",
                    "name": "Depth",
                    "required": false,
                    "default": null,
                    "description": "Depth of device type in units of width_display_unit"
                },
                {
                    "param": "depth_display_unit",
                    "name": "Depth Units",
                    "required": false,
                    "default": null,
                    "description": "Dimensional units of depth (INCHES,FEET,CENTIMETERS,METERS)"
                },
                {
                    "param": "height",
                    "name": "Height in mm",
                    "required": false,
                    "default": null,
                    "description": "Height of device type. Only used if type is not a rackable_device"
                },
                {
                    "param": "height_display_value",
                    "name": "Height",
                    "required": false,
                    "default": null,
                    "description": "Height of device type in units of height_display_unit"
                },
                {
                    "param": "height_display_unit",
                    "name": "Height Units",
                    "required": false,
                    "default": null,
                    "description": "Dimensional units of height (INCHES,FEET,CENTIMETERS,METERS). Defaults to MILLIMETERS."
                },
                {
                    "param": "editable_dimensions",
                    "name": "Editable Dimensions",
                    "required": false,
                    "default": null,
                    "description": "Flag to enable/disable editing the dimensions on devices of this device type"
                },
                {
                    "param": "client_access",
                    "name": "Client Visible",
                    "required": false,
                    "default": null,
                    "description": "Flag to enable/disable visibility of this device type to clients adding new devices"
                },
                {
                    "param": "metadata_applies[{variable}]",
                    "name": "Custom Fields Applicability",
                    "required": false,
                    "default": null,
                    "description": "Set whether the custom fields specified by variable name applies to the device type. Accepted values are (-1: Default, 0: No, 1: Yes, 2: Required)"
                },
                {
                    "param": "front_image_file_id",
                    "name": "Front Image File ID",
                    "required": false,
                    "default": null,
                    "description": "File id to use for the device type front image"
                },
                {
                    "param": "back_image_file_id",
                    "name": "Back Image File ID",
                    "required": false,
                    "default": null,
                    "description": "File id to use for the device type back image"
                },
                {
                    "param": "remove_front_image",
                    "name": "Remove Front Image",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to remove the device type front image"
                },
                {
                    "param": "remove_back_image",
                    "name": "Remove Back Image",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to remove the device type back image"
                },
                {
                    "param": "block_delete_if_connected",
                    "name": "Block Delete if Connected",
                    "required": false,
                    "default": null,
                    "description": "Prevent device deletion if it has Connections"
                }
            ]
        },
        "untag": {
            "method": "device.untag",
            "title": "Untag a Device",
            "description": "This method is used to untag a device.",
            "params": [
                {
                    "param": "tag",
                    "name": "Tag(s) to remove",
                    "required": true,
                    "default": null,
                    "description": "A single tag, or array of tags"
                },
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": null,
                    "description": "A single device ID, or array of device IDs"
                }
            ]
        },
        "update": {
            "method": "device.update",
            "title": "Update a Device",
            "description": "This method is used to update a device.",
            "params": [
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": true,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "dev_desc",
                    "name": "Device Description",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "label",
                    "name": "Device Label",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "parent",
                    "name": "Parent Device ID",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "type_id",
                    "name": "Device Type ID",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "rack_id",
                    "name": "Rack ID",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "rack_pos",
                    "name": "Position Within Rack",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "height",
                    "name": "Device Height",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_owned",
                    "name": "Client Owns Physical Device",
                    "required": false,
                    "default": 0,
                    "description": "0 = Client does not own physical device, 1 = Client owns physical device"
                },
                {
                    "param": "connection_node_type_id",
                    "name": "Connection Node Type ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "front_image_file_id",
                    "name": "Front Image File ID",
                    "required": false,
                    "default": null,
                    "description": "A file id to use for the device's front image"
                },
                {
                    "param": "back_image_file_id",
                    "name": "Back Image File ID",
                    "required": false,
                    "default": null,
                    "description": "A file id to use for the device's back image"
                },
                {
                    "param": "front_image",
                    "name": "Attachment",
                    "required": false,
                    "default": null,
                    "description": "An image file for the device's front image. When using cURL the value for the parameter should be @<filename> where <filename> is the image you wish to attach."
                },
                {
                    "param": "back_image",
                    "name": "Attachment",
                    "required": false,
                    "default": null,
                    "description": "An image file for the device's back image. When using cURL the value for the parameter should be @<filename> where <filename> is the image you wish to attach."
                },
                {
                    "param": "remove_front_image",
                    "name": "Remove Front Image",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to remove the device's front image"
                },
                {
                    "param": "remove_back_image",
                    "name": "Remove Back Image",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to remove the device's back image"
                },
                {
                    "param": "meta_*",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                }
            ]
        },
        "vlan_add": {
            "method": "device.vlan_add",
            "title": "Add a VLAN range",
            "description": "This method is used to add a VLAN range in the system.",
            "params": [
                {
                    "param": "vlan_type_id",
                    "name": "VLAN Type Id",
                    "required": false,
                    "default": "2",
                    "description": "Options:\n2 = Private\n1 = Public"
                },
                {
                    "param": "vlan_assignable",
                    "name": "VLAN Assignable",
                    "required": false,
                    "default": "0",
                    "description": "If the VLAN range is assignable (Boolean)"
                },
                {
                    "param": "hsrp",
                    "name": "HSRP",
                    "required": false,
                    "default": "0",
                    "description": "If true, all IP groups created under this particular VLAN will have HSRP enabled by default (Boolean). The HSRP setting can still be changed per IP group.\nHSRP enabled IP groups will reserve either the two IPs after the gateway address or below the broadcast address."
                },
                {
                    "param": "shared",
                    "name": "Shared",
                    "required": false,
                    "default": "0",
                    "description": "Whether the VLAN range is shared or not (Boolean)"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": true,
                    "default": null,
                    "description": "The VLAN range name."
                },
                {
                    "param": "desc",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The VLAN range description."
                },
                {
                    "param": "notify_address",
                    "name": "Notify Address",
                    "required": false,
                    "default": "",
                    "description": "If an alert threshold is set, this is the email address that alerts will be sent to."
                },
                {
                    "param": "min_available",
                    "name": "Alert threshold",
                    "required": false,
                    "default": "0",
                    "description": "If the number of available VLANs in this range falls below this threshold, the range status will be set to alert.\nIf the number of available VLANs is less than 1.5x this threshold, the range status will be set to warning."
                },
                {
                    "param": "add_ranges",
                    "name": "Add VLAN Ranges",
                    "required": false,
                    "default": false,
                    "description": "You may specify multiple ranges to create. For each, 'min', 'max' and 'assignable' values may be set. The default value for 'assignable' is false.\n\nExample of parameters format:\nranges[1]['min'], ranges[1]['max'], ranges[1]['assignable'], ranges[2]['min'], ranges[2]['max'], ranges[2]['assignable']"
                },
                {
                    "param": "add_facilities",
                    "name": "Add Facilities",
                    "required": false,
                    "default": "0",
                    "description": "A csv string containing the Facility IDs to add."
                }
            ]
        },
        "vlan_delete": {
            "method": "device.vlan_delete",
            "title": "Delete a Vlan Range",
            "description": "This method is used to delete a Vlan Range.",
            "params": [
                {
                    "param": "vlan_range_id",
                    "name": "Vlan Range ID",
                    "required": true,
                    "default": null,
                    "description": "The id of the Vlan Range to delete."
                }
            ]
        },
        "vlan_get_available": {
            "method": "device.vlan_get_available",
            "title": "List Available VLANs",
            "description": "This method is used to list available VLAN numbers, optionally filtered by:\n- VLAN range id (vlan_range_id)\n- facility id (fac_id)\n- HSRP (is_hsrp)\noptionally limited by:\n- limit (limit).\nReturns an array of all available VLAN numbers with VLAN range ID and title.",
            "params": [
                {
                    "param": "vlan_range_id",
                    "name": "VLAN Range ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "limit",
                    "name": "Results Limit",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "is_hsrp",
                    "name": "HSRP Flag",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "vlan_update": {
            "method": "device.vlan_update",
            "title": "Update a VLAN range",
            "description": "This method is used to update a VLAN range in the system.",
            "params": [
                {
                    "param": "vlan_range_id",
                    "name": "VLAN range Id",
                    "required": true,
                    "default": null,
                    "description": "The VLAN range id."
                },
                {
                    "param": "vlan_type_id",
                    "name": "VLAN Type Id",
                    "required": false,
                    "default": "2",
                    "description": "Options:\n2 = Private\n1 = Public"
                },
                {
                    "param": "vlan_assignable",
                    "name": "VLAN Assignable",
                    "required": false,
                    "default": "0",
                    "description": "If the VLAN range is assignable (Boolean)"
                },
                {
                    "param": "hsrp",
                    "name": "HSRP",
                    "required": false,
                    "default": "0",
                    "description": "If true, all IP groups created under this particular VLAN will have HSRP enabled by default (Boolean). The HSRP setting can still be changed per IP group.\nHSRP enabled IP groups will reserve either the two IPs after the gateway address or below the broadcast address."
                },
                {
                    "param": "shared",
                    "name": "Shared",
                    "required": false,
                    "default": "0",
                    "description": "Whether the VLAN range is shared or not (Boolean)"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The VLAN range name."
                },
                {
                    "param": "desc",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The VLAN range description."
                },
                {
                    "param": "notify_address",
                    "name": "Notify Address",
                    "required": false,
                    "default": "",
                    "description": "If an alert threshold is set, this is the email address that alerts will be sent to."
                },
                {
                    "param": "min_available",
                    "name": "Alert threshold",
                    "required": false,
                    "default": "0",
                    "description": "If the number of available VLANs in this range falls below this threshold, the range status will be set to alert.\nIf the number of available VLANs is less than 1.5x this threshold, the range status will be set to warning."
                },
                {
                    "param": "add_ranges",
                    "name": "Add VLAN Ranges",
                    "required": false,
                    "default": false,
                    "description": "You may specify multiple ranges to create. For each, 'min', 'max' and 'assignable' values may be set. The default value for 'assignable' is false.\n\nExample of parameters format:\nranges[1]['min'], ranges[1]['max'], ranges[1]['assignable'], ranges[2]['min'], ranges[2]['max'], ranges[2]['assignable']"
                },
                {
                    "param": "add_facilities",
                    "name": "Add Facilities",
                    "required": false,
                    "default": "0",
                    "description": "A csv string containing the Facility IDs to add."
                },
                {
                    "param": "update_ranges",
                    "name": "Update VLAN Ranges",
                    "required": false,
                    "default": false,
                    "description": "You may specify multiple ranges to update. For each, 'min', 'max' and 'assignable' values may be set. The default value for 'assignable' is false.\n\nExample of parameters format:\nranges[1]['min'], ranges[1]['max'], ranges[1]['assignable'], ranges[2]['min'], ranges[2]['max'], ranges[2]['assignable']\n<b>When updating existing ranges, the correct range ID must be the set, ex: ranges[ID]['min']</b>"
                },
                {
                    "param": "remove_facilities",
                    "name": "Add Facilities",
                    "required": false,
                    "default": "0",
                    "description": "A csv string containing the Facility IDs to remove."
                }
            ]
        },
        "zone_add": {
            "method": "device.zone_add",
            "title": "Add a zone",
            "description": "This method is used to add a zone in the system.",
            "params": [
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": true,
                    "default": null,
                    "description": "The Zone Facility ID"
                },
                {
                    "param": "zone_name",
                    "name": "Zone Name",
                    "required": false,
                    "default": null,
                    "description": "Name for Zone. Required if code is not provided"
                },
                {
                    "param": "zone_code",
                    "name": "Zone Code",
                    "required": false,
                    "default": null,
                    "description": "Code for Zone. Required if name is not provided"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": "0",
                    "description": "The client id."
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": "0",
                    "description": "The zone status can only be edited if parent location statuses are in an unoccupied state. Otherwise the status is inherited.\n\nUnoccupied\n0 = Available\n1 = Inactive\n\nReserved / Occupied\n2 = Internal Reserved\n3 = Internal Occupied\n4 = Customer Right of First Refusal\n5 = Customer Occupied"
                },
                {
                    "param": "rofr_expiration_date",
                    "name": "ROFR Expiration Date",
                    "required": false,
                    "default": "0",
                    "description": "The expiration date of the contractual Right of First Refusal (ROFR)"
                },
                {
                    "param": "assigned_date",
                    "name": "Assigned Date",
                    "required": false,
                    "default": "0",
                    "description": "The assigned date"
                },
                {
                    "param": "ac_power_capacity",
                    "name": "AC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "AC power capacity measured in Amps"
                },
                {
                    "param": "dc_power_capacity",
                    "name": "DC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "DC power capacity measured in Amps"
                },
                {
                    "param": "area_display_value",
                    "name": "Area Size Value",
                    "required": false,
                    "default": "0.00",
                    "description": "The area size measured in square feet."
                },
                {
                    "param": "meta_",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                }
            ]
        },
        "zone_list": {
            "method": "device.zone_list",
            "title": "List Device Zones",
            "description": "This method is used to list device zones.",
            "params": [
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Facility ID"
                },
                {
                    "param": "fac_code",
                    "name": "Facility Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Facility Code"
                },
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Zone ID"
                },
                {
                    "param": "zone_code",
                    "name": "Zone Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Zone Code"
                },
                {
                    "param": "cage_id",
                    "name": "Cage ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Cage ID"
                },
                {
                    "param": "cage_code",
                    "name": "Cage Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Cage Code"
                },
                {
                    "param": "row_id",
                    "name": "Row ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Row ID"
                },
                {
                    "param": "row_code",
                    "name": "Row Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Row Code"
                },
                {
                    "param": "rack_id",
                    "name": "Rack ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Rack ID"
                },
                {
                    "param": "rack_code",
                    "name": "Rack Code",
                    "required": false,
                    "default": null,
                    "description": "Filter by Rack Code"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Filter by Client ID"
                },
                {
                    "param": "metadata",
                    "name": "Include Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "If set, custom fields metadata will be included in the response output"
                },
                {
                    "param": "exclude_downstream",
                    "name": "Exclude downstream",
                    "required": false,
                    "default": false,
                    "description": "If set, downstream locations (cages, rows, racks) will be excluded from the response output"
                }
            ]
        },
        "zone_update": {
            "method": "device.zone_update",
            "title": "Update a zone",
            "description": "This method is used to update a zone in the system.",
            "params": [
                {
                    "param": "zone_id",
                    "name": "Zone ID",
                    "required": true,
                    "default": null,
                    "description": "The Zone ID"
                },
                {
                    "param": "fac_id",
                    "name": "Facility ID",
                    "required": false,
                    "default": null,
                    "description": "The Zone Facility ID"
                },
                {
                    "param": "zone_name",
                    "name": "Zone Name",
                    "required": false,
                    "default": null,
                    "description": "Name for Zone."
                },
                {
                    "param": "zone_code",
                    "name": "Zone Code",
                    "required": false,
                    "default": null,
                    "description": "Code for Zone."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": "0",
                    "description": "The client id."
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": "0",
                    "description": "The zone status can only be edited if parent location statuses are in an unoccupied state. Otherwise the status is inherited.\n\nUnoccupied\n0 = Available\n1 = Inactive\n\nReserved / Occupied\n2 = Internal Reserved\n3 = Internal Occupied\n4 = Customer Right of First Refusal\n5 = Customer Occupied"
                },
                {
                    "param": "rofr_expiration_date",
                    "name": "ROFR Expiration Date",
                    "required": false,
                    "default": "0",
                    "description": "The expiration date of the contractual Right of First Refusal (ROFR)"
                },
                {
                    "param": "assigned_date",
                    "name": "Assigned Date",
                    "required": false,
                    "default": "0",
                    "description": "The assigned date"
                },
                {
                    "param": "ac_power_capacity",
                    "name": "AC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "AC power capacity measured in Amps"
                },
                {
                    "param": "dc_power_capacity",
                    "name": "DC Power Capacity",
                    "required": false,
                    "default": "0",
                    "description": "DC power capacity measured in Amps"
                },
                {
                    "param": "area_display_value",
                    "name": "Area Size Value",
                    "required": false,
                    "default": "0.00",
                    "description": "The area size measured in square feet."
                },
                {
                    "param": "meta_",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                }
            ]
        }
    },
    "order": {
        "cancel": {
            "method": "order.cancel",
            "title": "Cancel an Order",
            "description": "This method is used to cancel a specified order.",
            "params": [
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "Required if hash is not specified"
                },
                {
                    "param": "hash",
                    "name": "Order Hash",
                    "required": false,
                    "default": null,
                    "description": "Required if order_id is not specified"
                }
            ]
        },
        "client_respond": {
            "method": "order.client_respond",
            "title": "Post a Client/Lead Order Response",
            "description": "This method is used to post a response on the specified order as a client or lead.",
            "params": [
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "Required if hash is not specified"
                },
                {
                    "param": "hash",
                    "name": "Order Hash",
                    "required": false,
                    "default": null,
                    "description": "Required if order_id is not specified"
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": "Required if author is not specified"
                },
                {
                    "param": "author",
                    "name": "Author Email",
                    "required": false,
                    "default": null,
                    "description": "Required if contact_id is not specified"
                },
                {
                    "param": "subject",
                    "name": "Subject",
                    "required": false,
                    "default": "",
                    "description": ""
                },
                {
                    "param": "cc",
                    "name": "Cc",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "body",
                    "name": "Response",
                    "required": false,
                    "default": "(no message)",
                    "description": ""
                },
                {
                    "param": "attach",
                    "name": "Attachments",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "coupon_add": {
            "method": "order.coupon_add",
            "title": "Add Coupon",
            "description": "This method is used to add a new coupon.",
            "params": [
                {
                    "param": "coupon_code",
                    "name": "Coupon Code",
                    "required": true,
                    "default": null,
                    "description": "The coupon code. Must be unique per Class ID."
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The coupon description. Required unless description_[locale] is set."
                },
                {
                    "param": "plan_id",
                    "name": "Plan ID",
                    "required": false,
                    "default": null,
                    "description": "The plan ID that this coupon applies to"
                },
                {
                    "param": "start",
                    "name": "Start",
                    "required": false,
                    "default": null,
                    "description": "The date the coupon becomes active"
                },
                {
                    "param": "expire",
                    "name": "Expire",
                    "required": false,
                    "default": 0,
                    "description": "The expiration date of the coupon"
                },
                {
                    "param": "recurring",
                    "name": "Recurring",
                    "required": false,
                    "default": 0,
                    "description": "Set to 0 for one-time use coupons, 1 for recurring coupons"
                },
                {
                    "param": "discount_value",
                    "name": "Discount Value",
                    "required": false,
                    "default": 0,
                    "description": "The numeric value of the discount for this coupon"
                },
                {
                    "param": "dollar",
                    "name": "Dollar",
                    "required": false,
                    "default": 0,
                    "description": "Set to 0 if the discount_value is a percentage, 1 if it is a dollar amount"
                },
                {
                    "param": "setup_discount_value",
                    "name": "Setup Discount Value",
                    "required": false,
                    "default": 0,
                    "description": "The numeric value of the setup discount for this coupon"
                },
                {
                    "param": "setup_dollar",
                    "name": "Setup Dollar",
                    "required": false,
                    "default": 0,
                    "description": "Set to 0 if the setup_discount_value is a percentage, 1 if it is a dollar amount"
                },
                {
                    "param": "max_uses",
                    "name": "Max Uses",
                    "required": false,
                    "default": 0,
                    "description": "The maximum number of times the coupon can be used"
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "The brand ID that this coupon applies to"
                },
                {
                    "param": "active",
                    "name": "Active",
                    "required": false,
                    "default": 1,
                    "description": "Set to 0 to mark coupon as inactive, 1 to make it active"
                },
                {
                    "param": "vip",
                    "name": "VIP",
                    "required": false,
                    "default": 0,
                    "description": "Set to 0 to make coupon available to all clients, 1 for existing clients only"
                },
                {
                    "param": "description_[locale]",
                    "name": "Locale description",
                    "required": false,
                    "default": null,
                    "description": "Coupon description for language specified by the default locale of the system. e.g: description_en_US"
                },
                {
                    "param": "opts",
                    "name": "Service Plan Options",
                    "required": false,
                    "default": null,
                    "description": "The values for the service plan options based on the plan_id provided. Format: \n\nopts[spo_id][discount_type]=0\nopts[spo_id][discount]=10\nopts[spo_id][setup_discount_type]=1\nopts[spo_id][setup_discount]=5.00\n\n"
                }
            ]
        },
        "coupon_client_add": {
            "method": "order.coupon_client_add",
            "title": "Add Coupon Client",
            "description": "This method is used to add client(s) to a coupon.",
            "params": [
                {
                    "param": "coupon_id",
                    "name": "Coupon ID",
                    "required": true,
                    "default": null,
                    "description": "The coupon id to add the client(s) to"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Specify a single client ID or multiple client IDs to add. Format: \n\nclient_id=X -OR- client_id[0]=X client_id[1]=Y\n\n"
                }
            ]
        },
        "coupon_client_delete": {
            "method": "order.coupon_client_delete",
            "title": "Delete Coupon Client",
            "description": "This method is used to delete client(s) from a coupon.",
            "params": [
                {
                    "param": "coupon_id",
                    "name": "Coupon ID",
                    "required": true,
                    "default": null,
                    "description": "The coupon id to delete the client from"
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "Specify a single client ID or multiple client IDs to delete. Format: \n\nclient_id=X -OR- client_id[0]=X client_id[1]=Y\n\n"
                }
            ]
        },
        "coupon_get": {
            "method": "order.coupon_get",
            "title": "Get Order Coupon Details",
            "description": "This method is used to get the details of a specified order coupon.",
            "params": [
                {
                    "param": "coupon_id",
                    "name": "Coupon ID",
                    "required": false,
                    "default": null,
                    "description": "Required if coupon_code is not specified"
                },
                {
                    "param": "coupon_code",
                    "name": "Coupon Code",
                    "required": false,
                    "default": null,
                    "description": "Required if coupon_id is not specified"
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "Optional, used only if coupon_code is specified"
                }
            ]
        },
        "coupon_list": {
            "method": "order.coupon_list",
            "title": "Coupon List",
            "description": "This method is used to retrieve list of coupons.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": false,
                    "default": null,
                    "description": "Find the coupons for this service plan."
                },
                {
                    "param": "start",
                    "name": "Coupon Start Date",
                    "required": false,
                    "default": null,
                    "description": "Find the coupons that are valid on or after this timestamp."
                },
                {
                    "param": "expire",
                    "name": "Coupon Expiration Date",
                    "required": false,
                    "default": null,
                    "description": "Find the coupons that expire on or before this timestamp."
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "The brand ID that the coupons apply to."
                },
                {
                    "param": "active",
                    "name": "Active",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to find active coupons, 0 to find inactive coupons, or omit to find all."
                },
                {
                    "param": "include_options",
                    "name": "Include Options",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to include service plan options in the output."
                },
                {
                    "param": "include_clients",
                    "name": "Include Clients",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to include clients enabled for the coupon in the output."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "coupon_update": {
            "method": "order.coupon_update",
            "title": "Update Coupon Details",
            "description": "This method is used to update the details for a coupon.",
            "params": [
                {
                    "param": "coupon_id",
                    "name": "Coupon ID",
                    "required": true,
                    "default": null,
                    "description": "The id of the coupon to update"
                },
                {
                    "param": "coupon_code",
                    "name": "Coupon Code",
                    "required": false,
                    "default": null,
                    "description": "The coupon code"
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The coupon description"
                },
                {
                    "param": "plan_id",
                    "name": "Plan ID",
                    "required": false,
                    "default": null,
                    "description": "The plan ID that this coupon applies to, set to 0 to remove"
                },
                {
                    "param": "start",
                    "name": "Start",
                    "required": false,
                    "default": null,
                    "description": "The date the coupon becomes active"
                },
                {
                    "param": "expire",
                    "name": "Expire",
                    "required": false,
                    "default": null,
                    "description": "The expiration date of the coupon"
                },
                {
                    "param": "recurring",
                    "name": "Recurring",
                    "required": false,
                    "default": null,
                    "description": "Set to 0 for one-time use coupons, 1 for recurring coupons"
                },
                {
                    "param": "discount_value",
                    "name": "Discount Value",
                    "required": false,
                    "default": null,
                    "description": "The numeric value of the discount for this coupon"
                },
                {
                    "param": "dollar",
                    "name": "Dollar",
                    "required": false,
                    "default": null,
                    "description": "Set to 0 if the discount_value is a percentage, 1 if it is a dollar amount"
                },
                {
                    "param": "setup_discount_value",
                    "name": "Setup Discount Value",
                    "required": false,
                    "default": null,
                    "description": "The numeric value of the setup discount for this coupon"
                },
                {
                    "param": "setup_dollar",
                    "name": "Setup Dollar",
                    "required": false,
                    "default": null,
                    "description": "Set to 0 if the setup_discount_value is a percentage, 1 if it is a dollar amount"
                },
                {
                    "param": "max_uses",
                    "name": "Max Uses",
                    "required": false,
                    "default": null,
                    "description": "The maximum number of times the coupon can be used"
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "The brand ID that this coupon applies to"
                },
                {
                    "param": "active",
                    "name": "Active",
                    "required": false,
                    "default": null,
                    "description": "Set to 0 to mark coupon as inactive, 1 to make it active"
                },
                {
                    "param": "vip",
                    "name": "VIP",
                    "required": false,
                    "default": null,
                    "description": "Set to 0 to make coupon available to all clients, 1 for existing clients only"
                },
                {
                    "param": "description_[locale]",
                    "name": "Locale description",
                    "required": false,
                    "default": null,
                    "description": "Coupon description for language specified by locale"
                },
                {
                    "param": "opts",
                    "name": "Service Plan Options",
                    "required": false,
                    "default": null,
                    "description": "The values for the service plan options based on the plan_id provided. Format: \n\nopts[spo_id][discount_type]=0\nopts[spo_id][discount]=10\nopts[spo_id][setup_discount_type]=1\nopts[spo_id][setup_discount]=5.00\n\n"
                }
            ]
        },
        "create": {
            "method": "order.create",
            "title": "Create a New Order",
            "description": "This method is used to create a new order.",
            "params": [
                {
                    "param": "order_queue_id",
                    "name": "Order Queue ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ts",
                    "name": "Timestamp",
                    "required": false,
                    "default": "current time",
                    "description": ""
                },
                {
                    "param": "order_form_id",
                    "name": "Order Form ID",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "order_status",
                    "name": "Step ID",
                    "required": false,
                    "default": "Leads Step ID",
                    "description": ""
                },
                {
                    "param": "activity",
                    "name": "Activity Timestamp",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "progress",
                    "name": "Progress",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "add_default_pack_upgrades",
                    "name": "Add Default Service Upgrades",
                    "required": false,
                    "default": false,
                    "description": "If true, this will automatically add the default Service plan upgrade selections to each new Service added.\nOnly Services with a specified and valid plan_id are eligible (ex: info[\"pack1\"][\"plan_id\"] = 5)"
                },
                {
                    "param": "priority",
                    "name": "Order Priority",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "owner",
                    "name": "Admin ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "requested_completion",
                    "name": "Requested Completion",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "planned_completion",
                    "name": "Planned Completion",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "listed_company",
                    "name": "Listed Company",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "total",
                    "name": "Order Total",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "hash",
                    "name": "Order Hash",
                    "required": false,
                    "default": "automatic",
                    "description": ""
                },
                {
                    "param": "signature",
                    "name": "Signature Data",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "info",
                    "name": "Order Information",
                    "required": false,
                    "default": null,
                    "description": "See notes below"
                }
            ]
        },
        "get": {
            "method": "order.get",
            "title": "Get Order Details",
            "description": "This method is used to get the details of a specified order.",
            "params": [
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "Required if hash is not specified"
                },
                {
                    "param": "hash",
                    "name": "Order Hash",
                    "required": false,
                    "default": null,
                    "description": "Required if order_id is not specified"
                }
            ]
        },
        "list": {
            "method": "order.list",
            "title": "List Orders",
            "description": "This method is used to get a list of orders.",
            "params": [
                {
                    "param": "order_step_id",
                    "name": "Order Step ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "order_queue_id",
                    "name": "Order Queue ID",
                    "required": false,
                    "default": null,
                    "description": "Ignored if order_step_id is specified."
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": "system default",
                    "description": "Ignored if order_step_id or order_queue_id is specified."
                },
                {
                    "param": "step_name",
                    "name": "Order Step Name",
                    "required": false,
                    "default": null,
                    "description": "Ignored if order_step_id is specified. Also ignored if step_status is provided."
                },
                {
                    "param": "step_status",
                    "name": "Order Step Status",
                    "required": false,
                    "default": null,
                    "description": "Ignored if order_step_id is specified. Overrides step_name.\n0 = Normal,\n1 = Leads,\n2 = Complete,\n3 = Canceled"
                },
                {
                    "param": "min_ts",
                    "name": "Minimum Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified only orders received after this timestamp are returned."
                },
                {
                    "param": "max_ts",
                    "name": "Maximum Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified only orders received before this timestamp are returned."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "opportunity_id",
                    "name": "Opportunity ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "ts",
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "module_get": {
            "method": "order.module_get",
            "title": "Order Module Details",
            "description": "This method is used to retrieve details for a single order module.",
            "params": [
                {
                    "param": "order_module_name",
                    "name": "Order Module Name",
                    "required": true,
                    "default": null,
                    "description": "The name of the order module to retrieve"
                }
            ]
        },
        "module_list": {
            "method": "order.module_list",
            "title": "Order Modules",
            "description": "This method is used to retrieve a list of available order modules.",
            "params": []
        },
        "post_list": {
            "method": "order.post_list",
            "title": "Get all posts for an Order",
            "description": "This method is used to return all the posts for the specified order.",
            "params": [
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "private",
                    "name": "Show only client-viewable posts",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to hide posts which are not client viewable."
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "Set to desc to return posts in descending order (newest first)"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": null,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return, only used if offset is specified"
                }
            ]
        },
        "process": {
            "method": "order.process",
            "title": "Process an Order",
            "description": "This method is used to process an order.",
            "params": [
                {
                    "param": "order_action_id",
                    "name": "Order Action ID",
                    "required": true,
                    "default": null,
                    "description": "The action to process"
                },
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "Required if hash is not specified"
                },
                {
                    "param": "hash",
                    "name": "Order Hash",
                    "required": false,
                    "default": null,
                    "description": "Required if order_id is not specified"
                },
                {
                    "param": "skip",
                    "name": "Skip Action",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to skip the specified action rather than processing it."
                },
                {
                    "param": "undo_skip",
                    "name": "Undo Skip",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to revert skipped status of an action, allowing further processing."
                }
            ]
        },
        "queue_action_add": {
            "method": "order.queue_action_add",
            "title": "Add Order Action",
            "description": "This method is used to add a new order action.",
            "params": [
                {
                    "param": "order_step_id",
                    "name": "Order Step ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the order step the new action will belong to"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the order action"
                },
                {
                    "param": "module",
                    "name": "Module Name",
                    "required": true,
                    "default": null,
                    "description": "The name of the order module associated with the order action"
                },
                {
                    "param": "priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The priority of the order action"
                },
                {
                    "param": "automatic",
                    "name": "Automatic",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 for automatic"
                },
                {
                    "param": "optional",
                    "name": "Optional",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 if optional"
                },
                {
                    "param": "client_viewable",
                    "name": "Client Viewable",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 if client viewable"
                },
                {
                    "param": "prereqs",
                    "name": "Prerequisite Order Actions",
                    "required": false,
                    "default": null,
                    "description": "The other order action IDs in this step that are prerequisites for this action. Set to value to 1. Format: \n\nprereqs[order_action_id]=1"
                },
                {
                    "param": "config",
                    "name": "Config",
                    "required": false,
                    "default": null,
                    "description": "The config values for the order module associated with this action. Format: \n\nconfig[field]=value"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization Options",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this order step. Substitute lang_id with the numeric language id or language locale, e.g. en_US. Options are: \n\ni18n[lang_id][name]"
                }
            ]
        },
        "queue_action_delete": {
            "method": "order.queue_action_delete",
            "title": "Delete an order action",
            "description": "This method is used to delete the given order action ID.",
            "params": [
                {
                    "param": "order_action_id",
                    "name": "Order Action ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the order action to delete"
                }
            ]
        },
        "queue_action_get": {
            "method": "order.queue_action_get",
            "title": "Order Queue Action Details",
            "description": "This method is used to retrieve details for a single order queue action.",
            "params": [
                {
                    "param": "order_action_id",
                    "name": "Order Action ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the order queue action to retrieve"
                }
            ]
        },
        "queue_action_list": {
            "method": "order.queue_action_list",
            "title": "Order Queue Actions",
            "description": "This method is used to retrieve the order actions for an order step ID.",
            "params": [
                {
                    "param": "order_step_id",
                    "name": "Order Step ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the order step to retrieve the actions for"
                }
            ]
        },
        "queue_action_update": {
            "method": "order.queue_action_update",
            "title": "Update Order Action Details",
            "description": "This method is used to update the details for an order action ID.",
            "params": [
                {
                    "param": "order_action_id",
                    "name": "Order Action ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the order action to update"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the order action"
                },
                {
                    "param": "module",
                    "name": "Module Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the order module associated with the order action"
                },
                {
                    "param": "priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The priority of the order action"
                },
                {
                    "param": "automatic",
                    "name": "Automatic",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 for automatic"
                },
                {
                    "param": "optional",
                    "name": "Optional",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 if optional"
                },
                {
                    "param": "client_viewable",
                    "name": "Client Viewable",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 if client viewable"
                },
                {
                    "param": "prereqs",
                    "name": "Prerequisite Order Actions",
                    "required": false,
                    "default": null,
                    "description": "The other order action IDs in this step that are prerequisites for this action. Set to 1 to add or 0 to remove. Format: \n\nprereqs[order_action_id]=1"
                },
                {
                    "param": "config",
                    "name": "Config",
                    "required": false,
                    "default": null,
                    "description": "The config values for the order module associated with this action. Format: \n\nconfig[field]=value"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization Options",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this order step. Substitute lang_id with the numeric language id or language locale, e.g. en_US. Options are: \n\ni18n[lang_id][name]"
                }
            ]
        },
        "queue_add": {
            "method": "order.queue_add",
            "title": "Add Order Queue",
            "description": "This method is used to add an order queue.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "The brand id for the order queue"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the order queue"
                },
                {
                    "param": "allow_quotes",
                    "name": "Allow Quotes",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to allow quotes"
                },
                {
                    "param": "sendlink_from",
                    "name": "Send Link From",
                    "required": false,
                    "default": null,
                    "description": "The email address of the order email sender"
                },
                {
                    "param": "sendlink_sub",
                    "name": "Send Link Subject",
                    "required": false,
                    "default": null,
                    "description": "The subject of the order email"
                },
                {
                    "param": "sendlink_body",
                    "name": "Send Link Body",
                    "required": false,
                    "default": null,
                    "description": "The body of the order email"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization Options",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this order queue. Substitute lang_id with the numeric language id or language locale, e.g. en_US. Options are: \n\ni18n[lang_id][name]\ni18n[lang_id][sendlink_sub]\ni18n[lang_id][sendlink_body]"
                }
            ]
        },
        "queue_get": {
            "method": "order.queue_get",
            "title": "Order Queue Details",
            "description": "This method is used to retrieve details for a single order queue.",
            "params": [
                {
                    "param": "order_queue_id",
                    "name": "Order Queue ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the order queue to retrieve"
                }
            ]
        },
        "queue_list": {
            "method": "order.queue_list",
            "title": "List Order Queues",
            "description": "This method is used to get a list of order queues.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "queue_step_add": {
            "method": "order.queue_step_add",
            "title": "Add Order Step",
            "description": "This method is used to add an order step to the given order queue ID.",
            "params": [
                {
                    "param": "order_queue_id",
                    "name": "Order Queue ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the order queue this step should be added to"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the order step"
                },
                {
                    "param": "priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The priority of the order step"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization Options",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this order step. Substitute lang_id with the numeric language id or language locale, e.g. en_US. Options are: \n\ni18n[lang_id][name]"
                }
            ]
        },
        "queue_step_delete": {
            "method": "order.queue_step_delete",
            "title": "Delete an order step",
            "description": "This method is used to delete the given order step ID.",
            "params": [
                {
                    "param": "order_step_id",
                    "name": "Order Step ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the order step to delete"
                }
            ]
        },
        "queue_step_get": {
            "method": "order.queue_step_get",
            "title": "Order Queue Step Details",
            "description": "This method is used to retrieve details for a single order queue step.",
            "params": [
                {
                    "param": "order_step_id",
                    "name": "Order Step ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the order queue step to retrieve"
                }
            ]
        },
        "queue_step_list": {
            "method": "order.queue_step_list",
            "title": "Order Queue Steps",
            "description": "This method is used to retrieve the order steps for an order queue ID.",
            "params": [
                {
                    "param": "order_queue_id",
                    "name": "Order Queue ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the order queue to retrieve the steps for"
                }
            ]
        },
        "queue_step_update": {
            "method": "order.queue_step_update",
            "title": "Update Order Step Details",
            "description": "This method is used to update the details for an order step ID.",
            "params": [
                {
                    "param": "order_step_id",
                    "name": "Order Step ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the order step to delete"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the order step"
                },
                {
                    "param": "priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The priority of the order step"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization Options",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this order step. Substitute lang_id with the numeric language id or language locale, e.g. en_US. Options are: \n\ni18n[lang_id][name]"
                }
            ]
        },
        "queue_update": {
            "method": "order.queue_update",
            "title": "Update Order Queue",
            "description": "This method is used to update an order queue.",
            "params": [
                {
                    "param": "order_queue_id",
                    "name": "Order Queue ID",
                    "required": true,
                    "default": null,
                    "description": "The ID of the order queue to update"
                },
                {
                    "param": "active",
                    "name": "Active",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to set the order queue as active"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the order queue"
                },
                {
                    "param": "allow_quotes",
                    "name": "Allow Quotes",
                    "required": false,
                    "default": null,
                    "description": "Set to 1 to allow quotes"
                },
                {
                    "param": "sendlink_from",
                    "name": "Send Link From",
                    "required": false,
                    "default": null,
                    "description": "The email address of the order email sender"
                },
                {
                    "param": "sendlink_sub",
                    "name": "Send Link Subject",
                    "required": false,
                    "default": null,
                    "description": "The subject of the order email"
                },
                {
                    "param": "sendlink_body",
                    "name": "Send Link Body",
                    "required": false,
                    "default": null,
                    "description": "The body of the order email"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization Options",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this order queue. Substitute lang_id with the numeric language id or language locale, e.g. en_US. Options are: \n\ni18n[lang_id][name]\ni18n[lang_id][sendlink_sub]\ni18n[lang_id][sendlink_body]"
                }
            ]
        },
        "respond": {
            "method": "order.respond",
            "title": "Post an Order Response",
            "description": "This method is used to post a response on the specified order.",
            "params": [
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "Required if hash is not specified"
                },
                {
                    "param": "hash",
                    "name": "Order Hash",
                    "required": false,
                    "default": null,
                    "description": "Required if order_id is not specified"
                },
                {
                    "param": "recipient",
                    "name": "Recipient",
                    "required": false,
                    "default": null,
                    "description": "Order Email Address"
                },
                {
                    "param": "subject",
                    "name": "Subject",
                    "required": false,
                    "default": "Your order with <company>",
                    "description": ""
                },
                {
                    "param": "followup",
                    "name": "Response",
                    "required": false,
                    "default": "(no message)",
                    "description": ""
                },
                {
                    "param": "from",
                    "name": "From",
                    "required": false,
                    "default": "API",
                    "description": ""
                },
                {
                    "param": "comment",
                    "name": "Comment",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to post a comment"
                },
                {
                    "param": "cc",
                    "name": "Cc",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "bcc",
                    "name": "Bcc",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "user_id",
                    "name": "User ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "attach[]",
                    "name": "Attachments",
                    "required": false,
                    "default": null,
                    "description": "Attachment files as multipart/form-data. Array keys are disregarded but may be supplied."
                }
            ]
        },
        "submit": {
            "method": "order.submit",
            "title": "Submit An Order",
            "description": "This method is used to submit the specified order.",
            "params": [
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "Required if hash is not specified"
                },
                {
                    "param": "hash",
                    "name": "Order Hash",
                    "required": false,
                    "default": null,
                    "description": "Required if order_id is not specified"
                }
            ]
        },
        "threedsecure2_payment": {
            "method": "order.threedsecure2_payment",
            "title": "Retry an order payment",
            "description": "This method is used to retry an order payment",
            "params": [
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "Required if hash is not specified"
                },
                {
                    "param": "hash",
                    "name": "Order Hash",
                    "required": false,
                    "default": null,
                    "description": "Required if order_id is not specified"
                },
                {
                    "param": "threedsecure",
                    "name": "Provider specific 3D Secure 2 parameters (array)",
                    "required": true,
                    "default": null,
                    "description": "Associative array of 3D Secure 2 parameters specific to each credit card gateway provider.\n\n<b>Paysafe Token:</b>\n[\n\"authentication_id\" => String &lt;Required&gt;\n]\n\n<b>Braintree Token:</b>\n[\n\"payment_method_nonce\" => String &lt;Required&gt;\n]\n\n<b>Stripe:</b>\n[\n\"payment_intent_id\" => String &lt;Required&gt;\n]\n\n<b>Sage Pay Token (3dSecure v2): </b>\n[\n\"ThreeDSNotificationURL\" => String <Required>\n\"BrowserColorDepth\" => Number <Optional> default 24\n\"BrowserScreenHeight\" => Number <Optional> default 1080\n\"BrowserScreenWidth\" => Number <Optional> default 1920\n\"BrowserTZ\" => Number <Optional> default 240\n\"BrowserLanguage\" => String <Optional> default \"en-US\"\n\"ChallengeWindowSize\" => String <Optional> default \"03\"\n\"InitiatedType\" => \"CIT\" or \"MIT\" <Optional> default \"CIT\"\n]\n\nInitiatedType is used to send the transaction as Client Inititated Transaction(CIT)\nor Merchant Initiated Transaction(MIT). CIT should be used when the client is on session\nand MIT during automated charge where the client is off session.\n\nIf a challenge was required, the result must be sent via those key. They should be added to the threedsecure parameter:\n[\n\"vpstxid_or_md\" => String <Required>\n\"cres_or_pares\" => String <Required>\n\"ThreeDSNotificationURL\" => String <Required>\n...\n]\n\nThey should have been posted by the bank to the specified ThreeDSNotificationURL once the challenge is completed by the customer."
                }
            ]
        },
        "threedsecure2_process": {
            "method": "order.threedsecure2_process",
            "title": "Execute a provider specific 3D secure action",
            "description": "This method is used to execute a provider specific 3D Secure action.",
            "params": [
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "Required if hash is not specified"
                },
                {
                    "param": "hash",
                    "name": "Order Hash",
                    "required": false,
                    "default": null,
                    "description": "Required if order_id is not specified"
                },
                {
                    "param": "action",
                    "name": "Action",
                    "required": true,
                    "default": null,
                    "description": "Action to execute on the provider.\n\nAvailable actions:\n\nPaysafe Token\n - authenticate"
                },
                {
                    "param": "threedsecure",
                    "name": "Provider specific 3D Secure 2 parameters (array)",
                    "required": true,
                    "default": null,
                    "description": "Associative array of 3D Secure 2 parameters specific to each provider.\n\n<b>Paysafe Token:</b>\nValues associated with parameter `Action`: \"authenticate\"\n[\n  \"deviceFingerprintingId\" => String &lt;Required&gt;,\n  \"merchantUrl\" => String &lt;Required&gt;,\n  \"deviceChannel\" => Enum {BROWSER, SDK, 3RI} &lt;Default: BROWSER&gt;,\n  \"messageCategory\" => Enum {PAYMENT, NON_PAYMENT} &lt;Default: PAYMENT&gt;,\n  \"authenticationPurpose\" => Enum {INSTALMENT_TRANSACTION, PAYMENT_TRANSACTION, RECURRING_TRANSACTION, ADD_CARD, MAINTAIN_CARD, EMV_TOKEN_VERIFICATION} &lt;Default: PAYMENT_TRANSACTION&gt;\n]\n"
                }
            ]
        },
        "update": {
            "method": "order.update",
            "title": "Update an Order",
            "description": "This method is used to update the details of an existing order.",
            "params": [
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "step_id",
                    "name": "Order Step ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, overrides step_name"
                },
                {
                    "param": "step_name",
                    "name": "Order Step Name",
                    "required": false,
                    "default": null,
                    "description": "Ignored if order_step_id is specified."
                },
                {
                    "param": "priority",
                    "name": "Order Priority",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "owner",
                    "name": "Admin ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "requested_completion",
                    "name": "Requested Completion",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "planned_completion",
                    "name": "Planned Completion",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "listed_company",
                    "name": "Listed Company",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "total",
                    "name": "Order Total",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "hash",
                    "name": "Order Hash",
                    "required": false,
                    "default": "automatic",
                    "description": ""
                },
                {
                    "param": "signature",
                    "name": "Signature Data",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "info",
                    "name": "Order Information",
                    "required": false,
                    "default": null,
                    "description": "See notes below"
                }
            ]
        }
    },
    "report": {
        "customer_revenue": {
            "method": "report.customer_revenue",
            "title": "Customer Revenue",
            "description": "This method is used to retrieve customer(s) revenue.",
            "params": [
                {
                    "param": "client_ids",
                    "name": "Client Ids",
                    "required": false,
                    "default": null,
                    "description": "An array of customers ids. All customers that does not belong to the brand provided (class_id) will be ignored."
                },
                {
                    "param": "invoice_ids",
                    "name": "Invoice IDs",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these invoices"
                },
                {
                    "param": "service_ids",
                    "name": "Service IDs",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these services. All services that have this service as a parent service will be included"
                },
                {
                    "param": "service_plan_ids",
                    "name": "Service plan IDs",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these service plans"
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": "If specified, return only records for this brand"
                },
                {
                    "param": "billing_period_type",
                    "name": "Billing Period Type",
                    "required": false,
                    "default": 0,
                    "description": "0 = all periods will be included (default value), 1 = One time fee, 2 = recurring"
                },
                {
                    "param": "inv_type_select",
                    "name": "Invoice Status",
                    "required": false,
                    "default": "all",
                    "description": "1 = Paid, 0 = Unpaid, 2 = Disregarded, all = All"
                },
                {
                    "param": "begin",
                    "name": "Beginning Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records from this timestamp"
                },
                {
                    "param": "end",
                    "name": "End Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records up to this timestamp"
                },
                {
                    "param": "group_by",
                    "name": "Group By",
                    "required": false,
                    "default": "customers",
                    "description": "Possible values: customers, dates and services"
                }
            ]
        },
        "customers_time_tracking": {
            "method": "report.customers_time_tracking",
            "title": "Customers Time Tracking",
            "description": "This method is used to retrieve customer(s) time tracking.",
            "params": [
                {
                    "param": "client_ids",
                    "name": "Customer Ids",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these customers"
                },
                {
                    "param": "user_ids",
                    "name": "User Ids",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these users"
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "Get data for a specific brand"
                },
                {
                    "param": "classification",
                    "name": "Classification",
                    "required": false,
                    "default": 2,
                    "description": "0- Include only tickets with no classification, 1- Include only tickets with classification, 2- include all tickets regardless of their classification"
                },
                {
                    "param": "classification_ids",
                    "name": "Classification (Exact)",
                    "required": false,
                    "default": null,
                    "description": "Include only tickets with a classification_id specified in this list of classifications ids. If specified, the classification parameter will be ignored"
                },
                {
                    "param": "internal_ticket",
                    "name": "Internal Ticket",
                    "required": false,
                    "default": null,
                    "description": "1: return only records for internal tickets, 0: return only records for external tickets. If not specified, return records for all tickets"
                },
                {
                    "param": "ticket_ids",
                    "name": "Ticket IDs",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these tickets"
                },
                {
                    "param": "ticket_type_ids",
                    "name": "Ticket Type IDs",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these ticket types"
                },
                {
                    "param": "department_ids",
                    "name": "Departments IDs",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these invoices departments"
                },
                {
                    "param": "service_ids",
                    "name": "Service IDs (packid)",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these services"
                },
                {
                    "param": "begin",
                    "name": "Beginning Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records from this timestamp"
                },
                {
                    "param": "end",
                    "name": "End Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records up to this timestamp"
                },
                {
                    "param": "details",
                    "name": "Details",
                    "required": false,
                    "default": 0,
                    "description": "If specified, show years and months time spent and tickets details"
                }
            ]
        },
        "device_event_log": {
            "method": "report.device_event_log",
            "title": "List of Device Event Log",
            "description": "This method is used to retrieve the device event logs.",
            "params": [
                {
                    "param": "device",
                    "name": "Device",
                    "required": false,
                    "default": null,
                    "description": "Filter by device (id)."
                },
                {
                    "param": "event_type",
                    "name": "Event Type",
                    "required": false,
                    "default": null,
                    "description": "Filter by event type (id)."
                },
                {
                    "param": "eventuser",
                    "name": "User",
                    "required": false,
                    "default": null,
                    "description": "Filter by user (id)."
                },
                {
                    "param": "begin",
                    "name": "Begin Time",
                    "required": false,
                    "default": null,
                    "description": "If specified, return records starting from this date. Will be converted to Unix timestamp."
                },
                {
                    "param": "end",
                    "name": "End Time",
                    "required": false,
                    "default": null,
                    "description": "If specified, return records before from this date. Will be converted to Unix timestamp."
                },
                {
                    "param": "searchfor",
                    "name": "Search term",
                    "required": false,
                    "default": null,
                    "description": "Used to return only those events that include the specific keywords."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by. Valid options: \ndevice_event_id, device, action, user, time, event_type, reference_id, ip_address"
                },
                {
                    "param": "direction",
                    "name": "Order",
                    "required": false,
                    "default": "asc",
                    "description": "The direction to sort by. Valid options:\nasc = Ascending\ndesc = Descending"
                },
                {
                    "param": "event_group",
                    "name": "Event Group",
                    "required": false,
                    "default": null,
                    "description": "Filter by event group. Valid options: \nASSOCIATION, CONNECTION, DNS, FACILITY, IP, MONITOR, MONITOR_TYPE, REBOOTER, TAG, IPMI"
                },
                {
                    "param": "next_cursor",
                    "name": "Next Cursor",
                    "required": false,
                    "default": 1,
                    "description": "The system generated string to access the next page of results"
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": 100,
                    "description": "Maximum number of rows to return."
                },
                {
                    "param": "uri_prepend",
                    "name": "Prepend to URI",
                    "required": false,
                    "default": false,
                    "description": "String to prepend to the generated URI's, for example a base URL"
                }
            ]
        },
        "global_event_log": {
            "method": "report.global_event_log",
            "title": "List of Global Event Log",
            "description": "This method is used to retrieve the global event logs.",
            "params": [
                {
                    "param": "clientid",
                    "name": "Client",
                    "required": false,
                    "default": null,
                    "description": "Filter by client (id)."
                },
                {
                    "param": "reference_id",
                    "name": "Reference Id",
                    "required": false,
                    "default": null,
                    "description": "Filter by reference id."
                },
                {
                    "param": "reference_type",
                    "name": "Reference Type",
                    "required": false,
                    "default": null,
                    "description": "Filter by reference type."
                },
                {
                    "param": "eventuser",
                    "name": "User",
                    "required": false,
                    "default": null,
                    "description": "Filter by user (id)."
                },
                {
                    "param": "begin",
                    "name": "Begin Time",
                    "required": false,
                    "default": null,
                    "description": "If specified, return records starting from this date. Will be converted to Unix timestamp."
                },
                {
                    "param": "end",
                    "name": "End Time",
                    "required": false,
                    "default": null,
                    "description": "If specified, return records before from this date. Will be converted to Unix timestamp."
                },
                {
                    "param": "searchfor",
                    "name": "Search term",
                    "required": false,
                    "default": null,
                    "description": "Used to return only those events that include the specific keywords."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by. Valid options: \neventid, action, client_id, user, time, amount, balance"
                },
                {
                    "param": "direction",
                    "name": "Order",
                    "required": false,
                    "default": "asc",
                    "description": "The direction to sort by. Valid options:\nasc = Ascending\ndesc = Descending"
                },
                {
                    "param": "event_group",
                    "name": "Event Group",
                    "required": false,
                    "default": null,
                    "description": "Filter by event group. Valid options (child options in parenthesis): \nADMIN_USER, ACCT_MGMT, (CLIENT_EMAILED, PASSWORD_REMINDER), BACKGROUND_TASK, CLIENT, (CLIENT_ADDED, CLIENT_DELETED, CLIENT_EDITED), CLIENT_LOCATION, PAYMENT, (INVOICE_GENERATED, INVOICE_PAID, QUEUE_CHARGE_REMOVED, CONTROL_PANEL, PAYMENT_EDITED, LATE_FEE_GENERATED), SERVICE, (SERVICE_CREATED, SERVICE_CREDITED, SERVICE_DEACTIVATED, SERVICE_EDITED, SERVICE_DISCOUNT, SERVICE_DEVICE, SERVICE_PAID, SERVICE_PLAN), AVATAR, BILLING_AGREEMENT, CLIENT_ROLE, COMMENT, CONFIG, CONNECTION, COUPON, CREDIT_CARD, DEVICE, DOMAIN, EVENT_SCRIPT, INVOICE_PRINT_QUEUE, MAILING_LIST, NOTIFICATION, NOTIFICATION_RECIPIENT, NOTIFICATION_TYPE, OPPORTUNITY, ORDER, PLUGIN, QUOTE, ROLE, TAG, TAX_RATE, TAX_ENGINE, TAX_EXEMPTION, TICKET_ESCALATION, TICKET, VLAN, PEOPLE_CLIENT, IPMI, UBERSMITH"
                },
                {
                    "param": "next_cursor",
                    "name": "Next Cursor",
                    "required": false,
                    "default": 1,
                    "description": "The system generated string to access the next page of results"
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": 100,
                    "description": "Maximum number of rows to return."
                },
                {
                    "param": "uri_prepend",
                    "name": "Prepend to URI",
                    "required": false,
                    "default": false,
                    "description": "String to prepend to the generated URI's, for example a base URL"
                }
            ]
        },
        "staff_time_tracking": {
            "method": "report.staff_time_tracking",
            "title": "Staff Time Tracking",
            "description": "This method is used to retrieve the admin users time tracking.",
            "params": [
                {
                    "param": "user_ids",
                    "name": "User Ids",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these users and the user_status parameter will be ignored."
                },
                {
                    "param": "client_ids",
                    "name": "Client Ids",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these customer"
                },
                {
                    "param": "user_status",
                    "name": "User Status",
                    "required": false,
                    "default": "active",
                    "description": "Filter data by the user's status: active, inactive or all"
                },
                {
                    "param": "classification",
                    "name": "Classification",
                    "required": false,
                    "default": null,
                    "description": "Include only tickets with this classification or a sub-classifications"
                },
                {
                    "param": "classification_ids",
                    "name": "Classification (Exact)",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these classifications and the classification parameter will be ignored"
                },
                {
                    "param": "internal_ticket",
                    "name": "Internal Ticket",
                    "required": false,
                    "default": null,
                    "description": "1: return only records for internal tickets, 0: return only records for external tickets. If not specified, return records for all tickets"
                },
                {
                    "param": "ticket_ids",
                    "name": "Ticket IDs",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these tickets"
                },
                {
                    "param": "ticket_type_ids",
                    "name": "Ticket Type IDs",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these ticket types"
                },
                {
                    "param": "department_ids",
                    "name": "Departments IDs",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these departments"
                },
                {
                    "param": "service_ids",
                    "name": "Service IDs",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records for these services"
                },
                {
                    "param": "begin",
                    "name": "Beginning Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records from this timestamp"
                },
                {
                    "param": "end",
                    "name": "End Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records up to this timestamp"
                },
                {
                    "param": "details",
                    "name": "Details",
                    "required": false,
                    "default": 0,
                    "description": "If specified, show years and months time spent and tickets details"
                }
            ]
        },
        "ticket_event_log": {
            "method": "report.ticket_event_log",
            "title": "List of Ticket Event Log",
            "description": "This method is used to retrieve the ticket event logs.",
            "params": [
                {
                    "param": "ticket",
                    "name": "Ticket",
                    "required": false,
                    "default": null,
                    "description": "Filter by ticket (id)."
                },
                {
                    "param": "user",
                    "name": "User",
                    "required": false,
                    "default": null,
                    "description": "Filter by user (id or username)"
                },
                {
                    "param": "begin",
                    "name": "Begin Time",
                    "required": false,
                    "default": null,
                    "description": "If specified, return records starting from this date. Will be converted to Unix timestamp."
                },
                {
                    "param": "end",
                    "name": "End Time",
                    "required": false,
                    "default": null,
                    "description": "If specified, return records before from this date. Will be converted to Unix timestamp."
                },
                {
                    "param": "searchfor",
                    "name": "Search term",
                    "required": false,
                    "default": null,
                    "description": "Used to return only those events that include the specific keywords."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by. Valid options: \nticket_event_id, action, time, ticket, event_type, client_viewable, ip_address"
                },
                {
                    "param": "direction",
                    "name": "Order",
                    "required": false,
                    "default": "asc",
                    "description": "The direction to sort by. Valid options:\nasc = Ascending\ndesc = Descending"
                },
                {
                    "param": "event_group",
                    "name": "Event Group",
                    "required": false,
                    "default": null,
                    "description": "Filter by event group. Valid options: \nASSIGNMENT, CLASSIFICATION, DUE_DATE, FOLLOWUP, LINK, RESOLUTION, SUBSCRIPTION, TICKET_TIME, TICKET_TIMER"
                },
                {
                    "param": "next_cursor",
                    "name": "Next Cursor",
                    "required": false,
                    "default": 1,
                    "description": "The system generated string to access the next page of results"
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": 100,
                    "description": "Maximum number of rows to return."
                },
                {
                    "param": "uri_prepend",
                    "name": "Prepend to URI",
                    "required": false,
                    "default": false,
                    "description": "String to prepend to the generated URI's, for example a base URL"
                }
            ]
        }
    },
    "sales": {
        "opportunity_add": {
            "method": "sales.opportunity_add",
            "title": "Add an Opportunity",
            "description": "This method is used to add a new opportunity to Sales.",
            "params": [
                {
                    "param": "user_login",
                    "name": "Client/Lead Login Name or ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client/Lead ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Opportunity Status",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "opportunity_type_id",
                    "name": "Opportunity Type",
                    "required": true,
                    "default": null,
                    "description": "Use sales.opportunity_type_list to look up the IDs for defined types."
                },
                {
                    "param": "opportunity_stage_id",
                    "name": "Opportunity Stage",
                    "required": true,
                    "default": null,
                    "description": "Use sales.opportunity_stage_list to look up the IDs for defined stages."
                },
                {
                    "param": "owner",
                    "name": "Owner ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "closure_ts",
                    "name": "Closure Timestamp",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "closure_pct",
                    "name": "Closure Percentage",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "price_min",
                    "name": "Minimum Price",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "price_max",
                    "name": "Maximum Price",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Opportunity Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "last_action",
                    "name": "Last Action",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "next_step",
                    "name": "Next Step",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "opportunity_list": {
            "method": "sales.opportunity_list",
            "title": "List Opportunities",
            "description": "This method is used to retrieve a list of opportunities from Sales.",
            "params": [
                {
                    "param": "opportunity_id",
                    "name": "Opportunity ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "user_login",
                    "name": "Client/Lead Login Name or ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client/Lead ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Opportunity Status",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "opportunity_type_id",
                    "name": "Opportunity Type",
                    "required": true,
                    "default": null,
                    "description": "Use sales.opportunity_type_list to look up the IDs for defined types."
                },
                {
                    "param": "opportunity_stage_id",
                    "name": "Opportunity Stage",
                    "required": true,
                    "default": null,
                    "description": "Use sales.opportunity_stage_list to look up the IDs for defined stages."
                },
                {
                    "param": "owner",
                    "name": "Owner ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "min_value",
                    "name": "Minimum Value",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "max_value",
                    "name": "Maximum Value",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "min_activity",
                    "name": "Minimum Activity Timestamp",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "price_min",
                    "name": "Minimum Price",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "price_max",
                    "name": "Maximum Price",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "begin",
                    "name": "Begin Timestamp",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "end",
                    "name": "End Timestamp",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "ts",
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return."
                }
            ]
        },
        "opportunity_stage_list": {
            "method": "sales.opportunity_stage_list",
            "title": "List Opportunity Stages",
            "description": "This method is used to retrieve a list of opportunity stages from Sales.",
            "params": []
        },
        "opportunity_status_list": {
            "method": "sales.opportunity_status_list",
            "title": "List Opportunity Statuses",
            "description": "This method is used to retrieve a list of opportunity statuses from Sales.",
            "params": []
        },
        "opportunity_type_list": {
            "method": "sales.opportunity_type_list",
            "title": "List Opportunity Types",
            "description": "This method is used to retrieve a list of opportunity types from Sales.",
            "params": []
        },
        "opportunity_update": {
            "method": "sales.opportunity_update",
            "title": "Update an Opportunity",
            "description": "This method is used to update an opportunity in Sales.",
            "params": [
                {
                    "param": "opportunity_id",
                    "name": "Opportunity ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Opportunity Status",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "opportunity_type_id",
                    "name": "Opportunity Type",
                    "required": true,
                    "default": null,
                    "description": "Use sales.opportunity_type_list to look up the IDs for defined types."
                },
                {
                    "param": "opportunity_stage_id",
                    "name": "Opportunity Stage",
                    "required": true,
                    "default": null,
                    "description": "Use sales.opportunity_stage_list to look up the IDs for defined stages."
                },
                {
                    "param": "owner",
                    "name": "Owner ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "closure_ts",
                    "name": "Closure Timestamp",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "closure_pct",
                    "name": "Closure Percentage",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "price_min",
                    "name": "Minimum Price",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "price_max",
                    "name": "Maximum Price",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Opportunity Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "last_action",
                    "name": "Last Action",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "next_step",
                    "name": "Next Step",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        }
    },
    "support": {
        "classification_list": {
            "method": "support.classification_list",
            "title": "List Classifications",
            "description": "This method is used to return a list of the classifications in the system.",
            "params": [
                {
                    "param": "q_id",
                    "name": "Department ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, include department applicability data"
                },
                {
                    "param": "applicable",
                    "name": "Applicable",
                    "required": false,
                    "default": null,
                    "description": "When used with q_id, include only applicable classifications"
                },
                {
                    "param": "client_selectable",
                    "name": "Client Selectable",
                    "required": false,
                    "default": null,
                    "description": "When used with q_id, include only client selectable classifications"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "lft",
                    "description": "Field to order results by."
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": ""
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                }
            ]
        },
        "department_get": {
            "method": "support.department_get",
            "title": "Get Ticket Departments",
            "description": "This method is used to return the details for a specific department.",
            "params": [
                {
                    "param": "queue",
                    "name": "Department ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "department_list": {
            "method": "support.department_list",
            "title": "List Ticket Departments",
            "description": "This method is used to return a list of the ticket departments in the system.",
            "params": []
        },
        "resolution_list": {
            "method": "support.resolution_list",
            "title": "List Resolutions",
            "description": "This method is used to return a list of the resolutions in the system.",
            "params": [
                {
                    "param": "q_id",
                    "name": "Department ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, include department applicability data"
                },
                {
                    "param": "applicable",
                    "name": "Applicable",
                    "required": false,
                    "default": null,
                    "description": "When used with q_id, include only applicable resolutions"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "lft",
                    "description": "Field to order results by."
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": ""
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                }
            ]
        },
        "ticket_add_link": {
            "method": "support.ticket_add_link",
            "title": "Link Support Tickets",
            "description": "This method is used to link two support tickets.",
            "params": [
                {
                    "param": "ticket_id",
                    "name": "Ticket ID (Main)",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ticket2_id",
                    "name": "Ticket ID (Sub)",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "link_type_id",
                    "name": "Link Type ID",
                    "required": true,
                    "default": null,
                    "description": "available values: \n  1 = Depends on\n  2 = Depended on by\n  3 = Blocks\n  4 = Blocked by\n  5 = Duplicate of\n  6 = Duplicated by\n  7 = Related to"
                },
                {
                    "param": "comment",
                    "name": "Comment",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "public_comment",
                    "name": "Public Comment",
                    "required": false,
                    "default": null,
                    "description": "Boolean: Make Comment Client Viewable"
                }
            ]
        },
        "ticket_count": {
            "method": "support.ticket_count",
            "title": "Count Support Tickets",
            "description": "This method is used to count the number of support tickets in the system.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client Login",
                    "required": false,
                    "default": null,
                    "description": "Client's login name or ID."
                },
                {
                    "param": "queue",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "type",
                    "name": "Ticket Type",
                    "required": false,
                    "default": null,
                    "description": "Possible types:\nOpen\nOn Hold\nClosed\nDeleted\nClientAll (Open, On Hold & Closed)"
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "Possible priorities:\n0 = Low\n1 = Normal\n2 = High\n3 = 911"
                },
                {
                    "param": "impact",
                    "name": "Ticket Impact",
                    "required": false,
                    "default": null,
                    "description": "Possible impacts:\n0 = No Impact\n1 = Minor/Localized\n2 = Moderate/Limited\n3 = Significant/Large\n4 = Extensive/Widespread"
                },
                {
                    "param": "assignment",
                    "name": "Assigned admin ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "opportunity_id",
                    "name": "Opportunity ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "classification",
                    "name": "Classification",
                    "required": false,
                    "default": null,
                    "description": "Include only tickets with this classification or a sub-classifications"
                },
                {
                    "param": "classification_id",
                    "name": "Classification (Exact)",
                    "required": false,
                    "default": null,
                    "description": "Include only tickets with this classification"
                },
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "begin",
                    "name": "Beginning Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall after this timestamp."
                },
                {
                    "param": "end",
                    "name": "End Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall before this timestamp."
                },
                {
                    "param": "activity_begin",
                    "name": "Activity Begin Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall after this timestamp."
                },
                {
                    "param": "activity_end",
                    "name": "Activity End Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall before this timestamp."
                },
                {
                    "param": "client_activity_begin",
                    "name": "Client Activity Begin Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall after this timestamp."
                },
                {
                    "param": "client_activity_end",
                    "name": "Client Activity End Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall before this timestamp."
                },
                {
                    "param": "ticket_post_begin",
                    "name": "Ticket Post Begin Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall after this timestamp."
                },
                {
                    "param": "ticket_post_end",
                    "name": "Ticket Post End Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall before this timestamp."
                },
                {
                    "param": "internal_ticket",
                    "name": "Internal Ticket",
                    "required": false,
                    "default": 0,
                    "description": "Return only records matching the internal_ticket setting. Options:\n0: Limit results to non-internal tickets (default)\n1: Limit results to internal tickets\n2: Show all tickets"
                },
                {
                    "param": "metadata",
                    "name": "Apply custom field filters",
                    "required": false,
                    "default": 0,
                    "description": "If specified, system will apply custom field filters found. Possible Values 0: Do not apply custom filters\n\t\t\t1: Apply custom filters"
                },
                {
                    "param": "<custom data variable>",
                    "name": "Custom Field Filters",
                    "required": false,
                    "default": null,
                    "description": "Filter list by custom field values, ie. \"myfield1=somevalue myfield2=somevalue etc...\""
                }
            ]
        },
        "ticket_delete_link": {
            "method": "support.ticket_delete_link",
            "title": "Delete Link Between Support Tickets",
            "description": "This method is used to delete the link between two support tickets.",
            "params": [
                {
                    "param": "ticket_id",
                    "name": "Ticket ID (Main)",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ticket2_id",
                    "name": "Ticket ID (Sub)",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "ticket_get": {
            "method": "support.ticket_get",
            "title": "Get Support Ticket Details",
            "description": "This method is used to get the details of a specified support ticket.",
            "params": [
                {
                    "param": "ticket_id",
                    "name": "Ticket ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "ticket_list": {
            "method": "support.ticket_list",
            "title": "Get a List of Tickets",
            "description": "This method is used to return a list of tickets.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client Login",
                    "required": false,
                    "default": null,
                    "description": "Client's login name or ID."
                },
                {
                    "param": "queue",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "type",
                    "name": "Ticket Type",
                    "required": false,
                    "default": null,
                    "description": "Possible types:\nOpen,\nOn Hold,\nClosed,\nDeleted,\nClientAll (meta-type meaning any of: Open, On Hold, or Closed),\nAny numeric type as listed by the 'support.ticket_type_list' method is also supported."
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "Possible priorities:\n0 = Low\n1 = Normal\n2 = High\n3 = 911"
                },
                {
                    "param": "impact",
                    "name": "Ticket Impact",
                    "required": false,
                    "default": null,
                    "description": "Possible impacts:\n0 = No Impact\n1 = Minor/Localized\n2 = Moderate/Limited\n3 = Significant/Large\n4 = Extensive/Widespread"
                },
                {
                    "param": "assignment",
                    "name": "Assigned admin ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Service ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "opportunity_id",
                    "name": "Opportunity ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "classification",
                    "name": "Classification",
                    "required": false,
                    "default": null,
                    "description": "Include only tickets with this classification or a sub-classifications"
                },
                {
                    "param": "classification_id",
                    "name": "Classification (Exact)",
                    "required": false,
                    "default": null,
                    "description": "Include only tickets with this classification"
                },
                {
                    "param": "device_id",
                    "name": "Device ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "begin",
                    "name": "Beginning Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall after this timestamp."
                },
                {
                    "param": "end",
                    "name": "End Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall before this timestamp."
                },
                {
                    "param": "activity_begin",
                    "name": "Activity Begin Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall after this timestamp."
                },
                {
                    "param": "activity_end",
                    "name": "Activity End Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall before this timestamp."
                },
                {
                    "param": "client_activity_begin",
                    "name": "Client Activity Begin Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall after this timestamp."
                },
                {
                    "param": "client_activity_end",
                    "name": "Client Activity End Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall before this timestamp."
                },
                {
                    "param": "ticket_post_begin",
                    "name": "Ticket Post Begin Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall after this timestamp."
                },
                {
                    "param": "ticket_post_end",
                    "name": "Ticket Post End Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall before this timestamp."
                },
                {
                    "param": "internal_ticket",
                    "name": "Internal Ticket",
                    "required": false,
                    "default": 0,
                    "description": "Return only records matching the internal_ticket setting. Options:\n0: Limit results to non-internal tickets (default)\n1: Limit results to internal tickets\n2: Show all tickets"
                },
                {
                    "param": "metadata",
                    "name": "Include Custom Fields",
                    "required": false,
                    "default": 0,
                    "description": "If set to 1, all custom fields will be included.\n\t\t\tmetadata can also be an array of individual fields to include, ie. \"metadata[field_name1]=1 metadata[field_name2]=1 etc...\"\n\t\t\tNote that fields with show_in_list flag set will always be included even if metadata is not specificied or it is set to 0."
                },
                {
                    "param": "[any included custom field variable]",
                    "name": "Custom Field Filters",
                    "required": false,
                    "default": null,
                    "description": "Filter list by custom field values, ie. \"myfield1=somevalue myfield2=somevalue etc...\""
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by. Possible values: ticket_id ,contact_id, author, recipient, subject, timestamp, type, source, assignment, activity, cc, priority, q_id, q_name, weight, activity_type"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "ticket_merge": {
            "method": "support.ticket_merge",
            "title": "Merge Tickets",
            "description": "This method is used to merge two tickets.",
            "params": [
                {
                    "param": "ticket_id",
                    "name": "Ticket ID (Main)",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "merge_ticket_id",
                    "name": "Ticket ID (Sub)",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "ticket_post_client_response": {
            "method": "support.ticket_post_client_response",
            "title": "Post a Client Response to a Ticket",
            "description": "This method is used to post a client response to a ticket, in the same way as if the client had responded via the client interface.",
            "params": [
                {
                    "param": "ticket_id",
                    "name": "Ticket ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "subject",
                    "name": "Response Subject",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "body",
                    "name": "Response Body",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "author",
                    "name": "Client Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "cc",
                    "name": "CC Address(es)",
                    "required": false,
                    "default": null,
                    "description": "One or more (comma-separated) email addresses to receive a carbon copy of the response."
                },
                {
                    "param": "timestamp",
                    "name": "Timestamp",
                    "required": false,
                    "default": null,
                    "description": "current time"
                },
                {
                    "param": "attach[x]",
                    "name": "Attachment",
                    "required": false,
                    "default": null,
                    "description": "Up to 5 attachments may be specified as attach[0], attach[1], etc. When using cURL the value for each attach[x] parameter should be @<filename> where <filename> is the file you wish to attach."
                },
                {
                    "param": "no_notification",
                    "name": "Do Not Send Notification",
                    "required": false,
                    "default": 0,
                    "description": "Flag to prevent sending email notifications"
                }
            ]
        },
        "ticket_post_list": {
            "method": "support.ticket_post_list",
            "title": "Get all Posts for a Ticket",
            "description": "This method is used to return all the posts for the specified ticket.",
            "params": [
                {
                    "param": "ticket_id",
                    "name": "Ticket ID",
                    "required": false,
                    "default": null,
                    "description": "Either this or ticket_post_id must be provided."
                },
                {
                    "param": "ticket_post_id",
                    "name": "Ticket Post ID",
                    "required": false,
                    "default": null,
                    "description": "Either this or ticket_id must be provided."
                },
                {
                    "param": "private",
                    "name": "Show only client-viewable posts",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to hide posts which are not client viewable."
                },
                {
                    "param": "begin",
                    "name": "Ticket Post Begin Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall after this timestamp."
                },
                {
                    "param": "end",
                    "name": "Ticket Post End Timestamp",
                    "required": false,
                    "default": null,
                    "description": "If specified, return only records that fall before this timestamp."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "Set to desc to return posts in descending order (newest first)"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": null,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Only used if offset is specified"
                }
            ]
        },
        "ticket_post_staff_response": {
            "method": "support.ticket_post_staff_response",
            "title": "Post a Staff Response to a Ticket",
            "description": "This method is used to post a staff response to a ticket.",
            "params": [
                {
                    "param": "ticket_id",
                    "name": "Ticket ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "subject",
                    "name": "Response Subject",
                    "required": false,
                    "default": null,
                    "description": "Ticket Subject"
                },
                {
                    "param": "body",
                    "name": "Response Body",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "comment",
                    "name": "Comment Only",
                    "required": false,
                    "default": 0,
                    "description": "Set to 1 to post a comment"
                },
                {
                    "param": "recipient",
                    "name": "Recipient Email",
                    "required": false,
                    "default": null,
                    "description": "Not required for comments"
                },
                {
                    "param": "user_id",
                    "name": "Admin ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "from",
                    "name": "Author's Name and/or Email",
                    "required": false,
                    "default": null,
                    "description": "Admin's email address"
                },
                {
                    "param": "cc",
                    "name": "CC Address(es)",
                    "required": false,
                    "default": null,
                    "description": "One or more (comma-separated) email addresses to receive a carbon copy of the response."
                },
                {
                    "param": "bcc",
                    "name": "BCC Address(es)",
                    "required": false,
                    "default": null,
                    "description": "One or more (comma-separated) email addresses to receive a blind carbon copy of the response."
                },
                {
                    "param": "time_spent",
                    "name": "Time Spent",
                    "required": false,
                    "default": 0,
                    "description": "Time spent in minutes"
                },
                {
                    "param": "timestamp",
                    "name": "Timestamp",
                    "required": false,
                    "default": null,
                    "description": "current time"
                },
                {
                    "param": "attach[x]",
                    "name": "Attachment",
                    "required": false,
                    "default": null,
                    "description": "Up to 5 attachments may be specified as attach[0], attach[1], etc. When using cURL the value for each attach[x] parameter should be @<filename> where <filename> is the file you wish to attach."
                },
                {
                    "param": "no_notification",
                    "name": "Do Not Send Notification",
                    "required": false,
                    "default": 0,
                    "description": "Flag to prevent sending email notifications"
                }
            ]
        },
        "ticket_submit": {
            "method": "support.ticket_submit",
            "title": "Submit a New Ticket",
            "description": "This method is used to create a new support ticket.",
            "params": [
                {
                    "param": "internal_ticket",
                    "name": "Internal Ticket",
                    "required": false,
                    "default": 0,
                    "description": "0 = No, 1 = Yes"
                },
                {
                    "param": "body",
                    "name": "Ticket Body",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "subject",
                    "name": "Ticket Subject",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "author",
                    "name": "Author Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Author Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "cc",
                    "name": "Cc Address(es)",
                    "required": false,
                    "default": null,
                    "description": "One or more (comma-separated) email addresses to receive a carbon copy of the response."
                },
                {
                    "param": "bcc",
                    "name": "Bcc Address(es)",
                    "required": false,
                    "default": null,
                    "description": "One or more (comma-separated) email addresses to receive a blind carbon copy of the response."
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": 1,
                    "description": "0 = Low, 1= Normal, 2 = High, 3 = 911"
                },
                {
                    "param": "impact",
                    "name": "Ticket Impact",
                    "required": false,
                    "default": 1,
                    "description": "Possible impacts:\n0 = No Impact\n1 = Minor/Localized\n2 = Moderate/Limited\n3 = Significant/Large\n4 = Extensive/Widespread"
                },
                {
                    "param": "queue",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": "system default"
                },
                {
                    "param": "classification_id",
                    "name": "Classification ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ticket_resolution_id",
                    "name": "Resolution ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Associate Service",
                    "required": false,
                    "default": null,
                    "description": "The input should be a service ID"
                },
                {
                    "param": "device_id",
                    "name": "Associate Device",
                    "required": false,
                    "default": null,
                    "description": "The input should be a device ID"
                },
                {
                    "param": "opportunity_id",
                    "name": "Opportunity ID",
                    "required": false,
                    "default": null,
                    "description": "The input should be an opportunity ID"
                },
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "The input should be an order ID"
                },
                {
                    "param": "quote_id",
                    "name": "Quote ID",
                    "required": false,
                    "default": null,
                    "description": "The input should be a quote ID"
                },
                {
                    "param": "timestamp",
                    "name": "Timestamp",
                    "required": false,
                    "default": null,
                    "description": "current time"
                },
                {
                    "param": "meta_*",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "attach[x]",
                    "name": "Attachment",
                    "required": false,
                    "default": null,
                    "description": "Up to 5 attachments may be specified as attach[0], attach[1], etc. When using cURL the value for each attach[x] parameter should be @<filename> where <filename> is the file you wish to attach."
                },
                {
                    "param": "no_notification",
                    "name": "Do Not Send Notification",
                    "required": false,
                    "default": 0,
                    "description": "Flag to prevent sending email notifications"
                }
            ]
        },
        "ticket_submit_outgoing": {
            "method": "support.ticket_submit_outgoing",
            "title": "Create a New Outgoing Ticket",
            "description": "This method is used to create a new outgoing support ticket.",
            "params": [
                {
                    "param": "internal_ticket",
                    "name": "Internal Ticket",
                    "required": false,
                    "default": 0,
                    "description": "0 = No, 1 = Yes"
                },
                {
                    "param": "meta_*",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "body",
                    "name": "Ticket Body",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "subject",
                    "name": "Ticket Subject",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "recipient",
                    "name": "Recipient Email",
                    "required": false,
                    "default": null,
                    "description": "Required if \"internal_ticket\" is 0."
                },
                {
                    "param": "user_id",
                    "name": "Admin ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "author",
                    "name": "Author Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "cc",
                    "name": "Cc Address(es)",
                    "required": false,
                    "default": null,
                    "description": "One or more (comma-separated) email addresses to receive a carbon copy of the response."
                },
                {
                    "param": "bcc",
                    "name": "Bcc Address(es)",
                    "required": false,
                    "default": null,
                    "description": "One or more (comma-separated) email addresses to receive a blind carbon copy of the response."
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": 1,
                    "description": "0 = Low, 1= Normal, 2 = High, 3 = 911"
                },
                {
                    "param": "impact",
                    "name": "Ticket Impact",
                    "required": false,
                    "default": 1,
                    "description": "Possible impacts:\n0 = No Impact\n1 = Minor/Localized\n2 = Moderate/Limited\n3 = Significant/Large\n4 = Extensive/Widespread"
                },
                {
                    "param": "queue",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": "system default"
                },
                {
                    "param": "classification_id",
                    "name": "Classification ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": 0,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "service_id",
                    "name": "Associate Service",
                    "required": false,
                    "default": null,
                    "description": "The input should be a service ID"
                },
                {
                    "param": "device_id",
                    "name": "Associate Device",
                    "required": false,
                    "default": null,
                    "description": "The input should be a device ID"
                },
                {
                    "param": "opportunity_id",
                    "name": "Opportunity ID",
                    "required": false,
                    "default": null,
                    "description": "The input should be an opportunity ID"
                },
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "The input should be an order ID"
                },
                {
                    "param": "quote_id",
                    "name": "Quote ID",
                    "required": false,
                    "default": null,
                    "description": "The input should be a quote ID"
                },
                {
                    "param": "timestamp",
                    "name": "Timestamp",
                    "required": false,
                    "default": null,
                    "description": "current time"
                },
                {
                    "param": "attach[x]",
                    "name": "Attachment",
                    "required": false,
                    "default": null,
                    "description": "Up to 5 attachments may be specified as attach[0], attach[1], etc. When using cURL the value for each attach[x] parameter should be @<filename> where <filename> is the file you wish to attach."
                },
                {
                    "param": "no_notification",
                    "name": "Do Not Send Notification",
                    "required": false,
                    "default": 0,
                    "description": "Flag to prevent sending email notifications"
                }
            ]
        },
        "ticket_time_update": {
            "method": "support.ticket_time_update",
            "title": "Update Time Spent on a Ticket",
            "description": "This method is used to update time spent on a ticket.",
            "params": [
                {
                    "param": "ticket_post_id",
                    "name": "Ticket Post ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "time_spent",
                    "name": "Time Spent",
                    "required": true,
                    "default": null,
                    "description": "Time spent in minutes"
                },
                {
                    "param": "user_id",
                    "name": "User ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "billable",
                    "name": "Billable",
                    "required": false,
                    "default": null,
                    "description": "If billing based on ticket posts, set to the value of the billing tier"
                }
            ]
        },
        "ticket_timer_add": {
            "method": "support.ticket_timer_add",
            "title": "Add a New Ticket Timer",
            "description": "This method is used to add a new ticket timer to a ticket.",
            "params": [
                {
                    "param": "ticket_id",
                    "name": "Ticket ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ts",
                    "name": "Timestamp",
                    "required": true,
                    "default": null,
                    "description": "Time when the ticket will be changed."
                },
                {
                    "param": "type",
                    "name": "Ticket Type",
                    "required": false,
                    "default": null,
                    "description": "Possible types:\n1 = Open,\n2 = On Hold,\n3 = Closed,\n4 = Deleted\nEither the name or the numeric value of the type is supported. The numeric value of types listed under the 'support.ticket_type_list' method is also supported."
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "Possible priorities:\n0 = Low\n1 = Normal\n2 = High\n3 = 911\nEither the name or the numeric value of the priority is supported."
                },
                {
                    "param": "q_id",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "assignment",
                    "name": "Assign to Admin",
                    "required": false,
                    "default": null,
                    "description": "Either the admin ID or username can be provided."
                },
                {
                    "param": "auto_remove",
                    "name": "Auto Remove on Reply",
                    "required": false,
                    "default": null,
                    "description": "Determines whether the ticket timer is removed when a staff member responds to the ticket. Possible values:\n1 = Yes\n0 = No"
                },
                {
                    "param": "respond",
                    "name": "Update Type",
                    "required": false,
                    "default": null,
                    "description": "Type of response to add to the ticket once the ticket timer expires.\nPossible types:\n21 = Staff Followup\n22 = Staff Comment (Client Viewable)\n23 = Staff Comment (Private)\nOnly the numeric value of the type is supported."
                },
                {
                    "param": "respond_from",
                    "name": "Update From",
                    "required": false,
                    "default": null,
                    "description": "From email address to set on the response added to the ticket once the ticket timer expires."
                },
                {
                    "param": "respond_subject",
                    "name": "Update Subject",
                    "required": false,
                    "default": null,
                    "description": "Subject of the response to add to the ticket once the ticket timer expires."
                },
                {
                    "param": "respond_body",
                    "name": "Update Body",
                    "required": false,
                    "default": null,
                    "description": "Body of the response to add to the ticket once the ticket timer expires."
                },
                {
                    "param": "notify_email",
                    "name": "Notification To",
                    "required": false,
                    "default": null,
                    "description": "Email address the 'ticket timer has expired' notification email will be sent to."
                },
                {
                    "param": "notify_subject",
                    "name": "Notification Subject",
                    "required": false,
                    "default": null,
                    "description": "Subject of the 'ticket timer has expired' notification email."
                },
                {
                    "param": "notify_body",
                    "name": "Notification Body",
                    "required": false,
                    "default": null,
                    "description": "Body of the 'ticket timer has expired' notification email."
                }
            ]
        },
        "ticket_timer_delete": {
            "method": "support.ticket_timer_delete",
            "title": "Delete a Ticket Timer",
            "description": "This method is used to delete a ticket timer.",
            "params": [
                {
                    "param": "ticket_timer_id",
                    "name": "Ticket Timer ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "ticket_timer_list": {
            "method": "support.ticket_timer_list",
            "title": "Get a List of Ticket Timers",
            "description": "This method is used to return a list of ticket timers.",
            "params": [
                {
                    "param": "ticket_id",
                    "name": "Ticket ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "type",
                    "name": "Ticket Type",
                    "required": false,
                    "default": null,
                    "description": "Possible types:\n1 = Open,\n2 = On Hold,\n3 = Closed,\n4 = Deleted\nClientAll (meta-type meaning any of: Open, On Hold, or Closed)\nEither the name or the numeric value of the type is supported. The numeric value of types listed under the 'support.ticket_type_list' method is also supported."
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "Possible priorities:\n0 = Low\n1 = Normal\n2 = High\n3 = 911\nEither the name or the numeric value of the priority is supported."
                },
                {
                    "param": "q_id",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "assignment",
                    "name": "Assign to Admin",
                    "required": false,
                    "default": null,
                    "description": "Either the admin ID or username can be provided."
                },
                {
                    "param": "auto_remove",
                    "name": "Auto Remove on Reply",
                    "required": false,
                    "default": null,
                    "description": "Determines whether the ticket timer is removed when a staff member responds to the ticket. Possible values:\n1 = Yes\n0 = No"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "ticket_timer_update": {
            "method": "support.ticket_timer_update",
            "title": "Update a Ticket Timer",
            "description": "This method is used to update a ticket timer.",
            "params": [
                {
                    "param": "ticket_timer_id",
                    "name": "Ticket Timer ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ts",
                    "name": "Timestamp",
                    "required": false,
                    "default": null,
                    "description": "Time when the ticket will be changed."
                },
                {
                    "param": "type",
                    "name": "Ticket Type",
                    "required": false,
                    "default": null,
                    "description": "Possible types:\n1 = Open,\n2 = On Hold,\n3 = Closed,\n4 = Deleted\nEither the name or the numeric value of the type is supported. The numeric value of types listed under the 'support.ticket_type_list' method is also supported."
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "Possible priorities:\n0 = Low\n1 = Normal\n2 = High\n3 = 911\nEither the name or the numeric value of the priority is supported."
                },
                {
                    "param": "q_id",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "assignment",
                    "name": "Assign to Admin",
                    "required": false,
                    "default": null,
                    "description": "Either the admin ID or username can be provided."
                },
                {
                    "param": "auto_remove",
                    "name": "Auto Remove on Reply",
                    "required": false,
                    "default": null,
                    "description": "Determines whether the ticket timer is removed when a staff member responds to the ticket. Possible values:\n1 = Yes\n0 = No"
                },
                {
                    "param": "respond",
                    "name": "Update Type",
                    "required": false,
                    "default": null,
                    "description": "Type of response to add to the ticket once the ticket timer expires.\nPossible types:\n21 = Staff Followup\n22 = Staff Comment (Client Viewable)\n23 = Staff Comment (Private)\nOnly the numeric value of the type is supported."
                },
                {
                    "param": "respond_from",
                    "name": "Update From",
                    "required": false,
                    "default": null,
                    "description": "From email address to set on the response added to the ticket once the ticket timer expires."
                },
                {
                    "param": "respond_subject",
                    "name": "Update Subject",
                    "required": false,
                    "default": null,
                    "description": "Subject of the response to add to the ticket once the ticket timer expires."
                },
                {
                    "param": "respond_body",
                    "name": "Update Body",
                    "required": false,
                    "default": null,
                    "description": "Body of the response to add to the ticket once the ticket timer expires."
                },
                {
                    "param": "notify_email",
                    "name": "Notification To",
                    "required": false,
                    "default": null,
                    "description": "Email address the 'ticket timer has expired' notification email will be sent to."
                },
                {
                    "param": "notify_subject",
                    "name": "Notification Subject",
                    "required": false,
                    "default": null,
                    "description": "Subject of the 'ticket timer has expired' notification email."
                },
                {
                    "param": "notify_body",
                    "name": "Notification Body",
                    "required": false,
                    "default": null,
                    "description": "Body of the 'ticket timer has expired' notification email."
                }
            ]
        },
        "ticket_type_list": {
            "method": "support.ticket_type_list",
            "title": "Get a List of Ticket Types",
            "description": "This method is used to return a list of ticket types.  If the q_id parameter is specified the output will include a client_selectable element indicating whether clients are allowed to select each type in the specific department.",
            "params": [
                {
                    "param": "queue",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "ticket_update": {
            "method": "support.ticket_update",
            "title": "Update a Ticket",
            "description": "This method is used to update the details of a ticket.",
            "params": [
                {
                    "param": "ticket_id",
                    "name": "Ticket ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "assignment",
                    "name": "Assigned User ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "queue",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "type",
                    "name": "Ticket Type",
                    "required": false,
                    "default": null,
                    "description": "1 or open = Open, 2 or onhold = On Hold, 3 or closed = Closed, 4 or deleted = Deleted. Any numeric type as listed by the 'support.ticket_type_list' method is also supported.)"
                },
                {
                    "param": "subject",
                    "name": "Ticket Subject",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "author",
                    "name": "Ticket Author Email Address",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "cc",
                    "name": "Cc Address(es)",
                    "required": false,
                    "default": null,
                    "description": "One or more (comma-separated) email addresses to receive a carbon copy of the response."
                },
                {
                    "param": "bcc",
                    "name": "Bcc Address(es)",
                    "required": false,
                    "default": null,
                    "description": "One or more (comma-separated) email addresses to receive a blind carbon copy of the response."
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "0 = Low, 1= Normal, 2 = High, 3 = 911"
                },
                {
                    "param": "impact",
                    "name": "Ticket Impact",
                    "required": false,
                    "default": null,
                    "description": "Possible impacts:\n0 = No Impact\n1 = Minor/Localized\n2 = Moderate/Limited\n3 = Significant/Large\n4 = Extensive/Widespread"
                },
                {
                    "param": "classification_id",
                    "name": "Classification ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "ticket_resolution_id",
                    "name": "Resolution ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "weight",
                    "name": "Ticket Rating",
                    "required": false,
                    "default": null,
                    "description": "Number of stars 0-5"
                },
                {
                    "param": "client_id",
                    "name": "Associate Client",
                    "required": false,
                    "default": null,
                    "description": "The input should be a client ID"
                },
                {
                    "param": "contact_id",
                    "name": "Associate Contact",
                    "required": false,
                    "default": null,
                    "description": "The input should be a contact ID"
                },
                {
                    "param": "service_id",
                    "name": "Associate Service",
                    "required": false,
                    "default": null,
                    "description": "The input should be a service ID"
                },
                {
                    "param": "device_id",
                    "name": "Associate Device",
                    "required": false,
                    "default": null,
                    "description": "The input should be a device ID"
                },
                {
                    "param": "opportunity_id",
                    "name": "Opportunity ID",
                    "required": false,
                    "default": null,
                    "description": "The input should be an opportunity ID"
                },
                {
                    "param": "order_id",
                    "name": "Order ID",
                    "required": false,
                    "default": null,
                    "description": "The input should be an order ID"
                },
                {
                    "param": "quote_id",
                    "name": "Quote ID",
                    "required": false,
                    "default": null,
                    "description": "The input should be a quote ID"
                },
                {
                    "param": "meta_*",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "Custom fields may be set by passing the values as additional parameters matching the custom fields API field names prefixed with 'meta_'."
                },
                {
                    "param": "internal_ticket",
                    "name": "Internal Ticket",
                    "required": false,
                    "default": null,
                    "description": "0 = No, 1 = Yes"
                }
            ]
        }
    },
    "uber": {
        "acl_admin_role_get": {
            "method": "uber.acl_admin_role_get",
            "title": "Get admin role details",
            "description": "Obtains information about a given Admin Role",
            "params": [
                {
                    "param": "role_id",
                    "name": "Admin Role ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "acl_admin_role_list": {
            "method": "uber.acl_admin_role_list",
            "title": "List available admin roles",
            "description": "This method is used to list admin roles that may be set for an admin user",
            "params": [
                {
                    "param": "acls",
                    "name": "Role ACLs",
                    "required": false,
                    "default": null,
                    "description": "1 = Include the ACLs that each role provides"
                }
            ]
        },
        "acl_client_role_get": {
            "method": "uber.acl_client_role_get",
            "title": "Get role details",
            "description": "Obtains information about a given Client Role",
            "params": [
                {
                    "param": "client_role_id",
                    "name": "Client Role ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "acl_client_role_list": {
            "method": "uber.acl_client_role_list",
            "title": "List available client roles",
            "description": "This method is used to list client roles that may be set for a client or contact",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "(Optional) Filter roles to those assignable by this client"
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": "(Optional) Filter roles to those assignable to this contact"
                },
                {
                    "param": "acls",
                    "name": "Client ACLs",
                    "required": false,
                    "default": null,
                    "description": "1 = Include the ACLs that each role provides"
                }
            ]
        },
        "acl_resource_add": {
            "method": "uber.acl_resource_add",
            "title": "Add ACL resource",
            "description": "This method is used to add an ACL resource",
            "params": [
                {
                    "param": "parent_resource_name",
                    "name": "Parent Resource Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "resource_name",
                    "name": "Resource Name",
                    "required": true,
                    "default": null,
                    "description": "Can not start with \"admin.\" or \"client.\""
                },
                {
                    "param": "label",
                    "name": "Resource Label",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "actions",
                    "name": "Available Actions",
                    "required": false,
                    "default": null,
                    "description": "Comma-separated list of actions for this resource.  This overrides default CRUD actions"
                }
            ]
        },
        "acl_resource_delete": {
            "method": "uber.acl_resource_delete",
            "title": "Delete ACL resource",
            "description": "This method is used to delete ACL resources",
            "params": [
                {
                    "param": "resource_name",
                    "name": "Resource Name",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "acl_resource_list": {
            "method": "uber.acl_resource_list",
            "title": "List ACL resources",
            "description": "This method is used to list ACL resources",
            "params": [
                {
                    "param": "resource_name",
                    "name": "Resource Name",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "acl_resource_update": {
            "method": "uber.acl_resource_update",
            "title": "Update ACL resource",
            "description": "This method is used to update ACL resources",
            "params": [
                {
                    "param": "resource_name",
                    "name": "Resource Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "label",
                    "name": "Resource Label",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "actions",
                    "name": "Available Actions",
                    "required": false,
                    "default": null,
                    "description": "Comma-separated list of actions for this resource.  This overrides default CRUD actions"
                }
            ]
        },
        "admin_avatar_get": {
            "method": "uber.admin_avatar_get",
            "title": "Retrieve an Admin Avatar",
            "description": "This method is used to retrieve an admin user avatar.",
            "params": [
                {
                    "param": "user_id",
                    "name": "User ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "brand",
                    "name": "Brand",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "size",
                    "name": "Size",
                    "required": false,
                    "default": null,
                    "description": "Specify 'small' to load a 25 pixel avatar; otherwise a 50 pixel avatar will be returned."
                }
            ]
        },
        "admin_avatar_set": {
            "method": "uber.admin_avatar_set",
            "title": "Set an Admin Avatar",
            "description": "This method is used to set an admin user avatar.",
            "params": [
                {
                    "param": "user_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "brand",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "avatar",
                    "name": "Attachment",
                    "required": false,
                    "default": null,
                    "description": "An image file for the avatar should be specified. When using cURL the value for the avatar parameter should be @<filename> where <filename> is the avatar you wish to attach."
                }
            ]
        },
        "admin_client_relationship_add": {
            "method": "uber.admin_client_relationship_add",
            "title": "Add Admin-Client Relationship",
            "description": "This method adds an admin-client relationship such as a dedicated Account Manager or Salesperson.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "person_id",
                    "name": "Admin ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "people_client_type_id",
                    "name": "Relationship Type ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "admin_client_relationship_delete": {
            "method": "uber.admin_client_relationship_delete",
            "title": "Remove Admin-Client Relationship",
            "description": "This method removes an existing admin-client relationship.",
            "params": [
                {
                    "param": "people_client_id",
                    "name": "Relationship ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "admin_client_relationship_list": {
            "method": "uber.admin_client_relationship_list",
            "title": "List Admin-Client Relationships",
            "description": "This method lists admin-client relationship filtered by the parameters specified.",
            "params": [
                {
                    "param": "people_client_id",
                    "name": "Relationship ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "person_id",
                    "name": "Admin ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "people_client_type_id",
                    "name": "Relationship Type ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "pct_status",
                    "name": "Relationship Type Status",
                    "required": false,
                    "default": 1,
                    "description": "Options: 1 = Active, 0 = Inactive"
                }
            ]
        },
        "admin_client_relationship_type_add": {
            "method": "uber.admin_client_relationship_type_add",
            "title": "Add Admin-Client Relationship Type",
            "description": "This method adds a admin-client relationship type to the system.",
            "params": [
                {
                    "param": "name",
                    "name": "Relationship Type Name",
                    "required": false,
                    "default": "",
                    "description": "Label for relationship type"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": "Options: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "send_notifications",
                    "name": "Send Notifications",
                    "required": false,
                    "default": 0,
                    "description": "Send a copy of notifications to admin. Options: 1 = Yes, 0 = No"
                }
            ]
        },
        "admin_client_relationship_type_list": {
            "method": "uber.admin_client_relationship_type_list",
            "title": "List Admin-Client Relationship Types",
            "description": "This method lists existing admin-client relationship types.",
            "params": [
                {
                    "param": "people_client_type_id",
                    "name": "Relationship Type ID",
                    "required": false,
                    "default": null,
                    "description": "Unique admin-client relationship type identifier"
                },
                {
                    "param": "name",
                    "name": "Relationship Type Name",
                    "required": false,
                    "default": null,
                    "description": "Label for relationship type"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": "Options: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "send_notifications",
                    "name": "Send Notifications",
                    "required": false,
                    "default": null,
                    "description": "Send a copy of notifications to admin. Options: 1 = Yes, 0 = No"
                }
            ]
        },
        "admin_client_relationship_type_update": {
            "method": "uber.admin_client_relationship_type_update",
            "title": "Edit Admin-Client Relationship Type",
            "description": "This method edits an existing admin-client relationship type.",
            "params": [
                {
                    "param": "people_client_type_id",
                    "name": "Relationship Type ID",
                    "required": true,
                    "default": null,
                    "description": "Unique admin-client relationship type identifier"
                },
                {
                    "param": "name",
                    "name": "Relationship Type Name",
                    "required": false,
                    "default": null,
                    "description": "Label for relationship type"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Options: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "send_notifications",
                    "name": "Send Notifications",
                    "required": false,
                    "default": null,
                    "description": "Send a copy of notifications to admin. Options: 1 = Yes, 0 = No"
                }
            ]
        },
        "admin_client_relationship_update": {
            "method": "uber.admin_client_relationship_update",
            "title": "Edit Admin-Client Relationship",
            "description": "This method edits an existing admin-client relationship.",
            "params": [
                {
                    "param": "people_client_id",
                    "name": "Relationship ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "person_id",
                    "name": "Admin ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "people_client_type_id",
                    "name": "Relationship Type ID",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "admin_deactivate": {
            "method": "uber.admin_deactivate",
            "title": "Deactivate an Admin",
            "description": "This method is used to deactivate an admin.",
            "params": [
                {
                    "param": "userid",
                    "name": "Admin ID",
                    "required": true,
                    "default": "The admin id to deactivate",
                    "description": ""
                },
                {
                    "param": "reassign_person_id",
                    "name": "Reassign Person ID",
                    "required": false,
                    "default": "Reassign client relationships to another admin id",
                    "description": ""
                }
            ]
        },
        "admin_get": {
            "method": "uber.admin_get",
            "title": "User Information",
            "description": "This method is used to return a admin user information based on the user ID or username.",
            "params": [
                {
                    "param": "userid",
                    "name": "User ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "username",
                    "name": "User Name",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "admin_list": {
            "method": "uber.admin_list",
            "title": "List User Logins",
            "description": "This method is used to returns a list of login names defined.",
            "params": [
                {
                    "param": "active",
                    "name": "User Active",
                    "required": false,
                    "default": 1,
                    "description": "Display active or deactivated users"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "admin_permission_get": {
            "method": "uber.admin_permission_get",
            "title": "Get User Permission",
            "description": "This method is used to get admin user permission.",
            "params": [
                {
                    "param": "userid",
                    "name": "User ID",
                    "required": false,
                    "default": null,
                    "description": "Required only if username is not specified"
                },
                {
                    "param": "username",
                    "name": "User Name",
                    "required": false,
                    "default": null,
                    "description": "Required only if userid is not specified"
                },
                {
                    "param": "resource_name",
                    "name": "Resource Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "action",
                    "name": "Action",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "admin_permission_list": {
            "method": "uber.admin_permission_list",
            "title": "List User Permissions",
            "description": "This method is used to return a tree/list of user permissions.",
            "params": [
                {
                    "param": "userid",
                    "name": "User ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "username",
                    "name": "User Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "resource",
                    "name": "Resource Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "format",
                    "name": "Listing format",
                    "required": false,
                    "default": null,
                    "description": "Option: tree (default), list"
                },
                {
                    "param": "effective",
                    "name": "Include Effective Actions",
                    "required": false,
                    "default": 0,
                    "description": "Include the effective (inherited) actions along with excplicit actions"
                }
            ]
        },
        "admin_permission_set": {
            "method": "uber.admin_permission_set",
            "title": "Set User Permissions",
            "description": "This method is used to set admin user permissions.",
            "params": [
                {
                    "param": "userid",
                    "name": "User ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "username",
                    "name": "User Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "resource_name",
                    "name": "Resource Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "action",
                    "name": "Action",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "type",
                    "name": "Permission Type",
                    "required": true,
                    "default": null,
                    "description": "Available values: allow, deny, inherit"
                }
            ]
        },
        "admin_resource_list": {
            "method": "uber.admin_resource_list",
            "title": "List available admin ACL resources",
            "description": "This method is used to list ACL resources that may be set for an admin",
            "params": []
        },
        "api_export": {
            "method": "uber.api_export",
            "title": "Export Data",
            "description": "This method is used to export data from Ubersmith in CSV format.",
            "params": [
                {
                    "param": "table",
                    "name": "Table to export",
                    "required": true,
                    "default": null,
                    "description": "Available tables: client, packages, services, invoices, events, tickets, plans, stored_mail, contacts, credits, mail, payment_records"
                },
                {
                    "param": "gzip",
                    "name": "Gzip Flag",
                    "required": false,
                    "default": null,
                    "description": "If set to 1, output will be gzipped"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order output by"
                }
            ]
        },
        "appliance_list": {
            "method": "uber.appliance_list",
            "title": "List Ubersmith Appliances",
            "description": "This method lists Ubersmith Appliances.",
            "params": []
        },
        "attachment_get": {
            "method": "uber.attachment_get",
            "title": "Get an attachment",
            "description": "This method is used to get a specified attachment.",
            "params": [
                {
                    "param": "attach_type",
                    "name": "Attachment Type",
                    "required": true,
                    "default": null,
                    "description": "Possible types: ticket, comment, doc, email, order_ticket"
                },
                {
                    "param": "attach_id",
                    "name": "Attachment ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "attachment_list": {
            "method": "uber.attachment_list",
            "title": "List Attachments",
            "description": "This method is used to output a list of attachments",
            "params": [
                {
                    "param": "attach_type",
                    "name": "Attachment type",
                    "required": true,
                    "default": null,
                    "description": "Possible types: ticket, comment, doc, email, order_ticket, quote"
                },
                {
                    "param": "attach_id",
                    "name": "Attachment ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "id",
                    "name": "ID of ticket post, comment, etc.",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "comment_type",
                    "name": "Comment type",
                    "required": false,
                    "default": null,
                    "description": "Required when Attachment Type is set to comment. Possible types: client, credit, device, pack, quote, opportunity."
                }
            ]
        },
        "billing_period_list": {
            "method": "uber.billing_period_list",
            "title": "List Billing Periods",
            "description": "This method is used to get a list of billing periods.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "brand_list": {
            "method": "uber.brand_list",
            "title": "List Brands",
            "description": "This method is used to returns a list of brands.",
            "params": []
        },
        "check_login": {
            "method": "uber.check_login",
            "title": "Verify a login and password",
            "description": "This method is used to check the specified login and password.",
            "params": [
                {
                    "param": "login",
                    "name": "Login Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "pass",
                    "name": "Password",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "check_user_twofactor": {
            "method": "uber.check_user_twofactor",
            "title": "Verify if the user has Two-Factor Enabled",
            "description": "This method is used to verify if a user (Admin, Client or Contact) has a Two-Factor Module enabled",
            "params": [
                {
                    "param": "user_id",
                    "name": "User ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "user_type",
                    "name": "User Type",
                    "required": true,
                    "default": null,
                    "description": "0= Admin, 1= Client, 2= Contact"
                }
            ]
        },
        "client_permission_list": {
            "method": "uber.client_permission_list",
            "title": "List available permissions",
            "description": "This method is used to list permissions that may be set for a client or contact",
            "params": []
        },
        "client_resource_list": {
            "method": "uber.client_resource_list",
            "title": "List available ACL resources",
            "description": "This method is used to list ACL resources that may be set for a client or contact",
            "params": []
        },
        "client_role_get": {
            "method": "uber.client_role_get",
            "title": "Get role details",
            "description": "[Deprecated: Use uber.acl_client_role_get] Obtains information about a given Client Role",
            "params": [
                {
                    "param": "client_role_id",
                    "name": "Client Role ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "client_role_list": {
            "method": "uber.client_role_list",
            "title": "List available client roles",
            "description": "[Deprecated: Use uber.acl_client_role_list] This method is used to list client roles that may be set for a client or contact",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "(Optional) Filter roles to those assignable by this client"
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": "(Optional) Filter roles to those assignable to this contact"
                },
                {
                    "param": "acls",
                    "name": "Client ACLs",
                    "required": false,
                    "default": null,
                    "description": "1 = Include the ACLs that each role provides"
                }
            ]
        },
        "client_tag_add": {
            "method": "uber.client_tag_add",
            "title": "Add a client tag",
            "description": "This method is used to create a client tag",
            "params": [
                {
                    "param": "tag",
                    "name": "Tag Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "color",
                    "name": "Color",
                    "required": false,
                    "default": null,
                    "description": "Color in RGB hex"
                },
                {
                    "param": "important",
                    "name": "Important?",
                    "required": false,
                    "default": 0,
                    "description": "If tag should be made prominent in UI"
                }
            ]
        },
        "client_tag_delete": {
            "method": "uber.client_tag_delete",
            "title": "Delete a client tag",
            "description": "This method is used to delete a client tag -- warning: this removes the tag permanently from all clients",
            "params": [
                {
                    "param": "tag_id",
                    "name": "Tag ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "client_tag_list": {
            "method": "uber.client_tag_list",
            "title": "List client tags",
            "description": "This method is used to list client tags",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "has_clients",
                    "name": "Has Clients",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "important",
                    "name": "Important?",
                    "required": false,
                    "default": null,
                    "description": "If a tag is listed as important"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "client_tag_update": {
            "method": "uber.client_tag_update",
            "title": "Update a client tag",
            "description": "This method is used to update an existing client tag",
            "params": [
                {
                    "param": "tag_id",
                    "name": "Tag ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "tag",
                    "name": "Tag Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "color",
                    "name": "Color",
                    "required": false,
                    "default": null,
                    "description": "Color in RGB hex"
                },
                {
                    "param": "important",
                    "name": "Important?",
                    "required": false,
                    "default": 0,
                    "description": "If tag should be made prominent in UI"
                }
            ]
        },
        "client_welcome_stats": {
            "method": "uber.client_welcome_stats",
            "title": "Display Client Statistics",
            "description": "This method is used to output the same statistics that are shown at the top of the client interface.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": true,
                    "default": null,
                    "description": "The client's ID"
                }
            ]
        },
        "comment_add": {
            "method": "uber.comment_add",
            "title": "Add Comment",
            "description": "This method is used to add client, service, device, credit or opportunity comments.",
            "params": [
                {
                    "param": "type",
                    "name": "Comment Type",
                    "required": true,
                    "default": null,
                    "description": "client, service, device, credit, opportunity or quote"
                },
                {
                    "param": "ref_id",
                    "name": "Related ID",
                    "required": true,
                    "default": null,
                    "description": "ID number of client, service, device, credit, opportunity or quote"
                },
                {
                    "param": "comment",
                    "name": "Comment",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "user_id",
                    "name": "User ID",
                    "required": false,
                    "default": "api user",
                    "description": ""
                },
                {
                    "param": "attach[x]",
                    "name": "Attachment",
                    "required": false,
                    "default": null,
                    "description": "Up to 5 attachments may be specified as attach[0], attach[1], etc. When using cURL the value for each attach[x] parameter should be @<filename> where <filename> is the file you wish to attach."
                }
            ]
        },
        "comment_delete": {
            "method": "uber.comment_delete",
            "title": "Delete Comment",
            "description": "This method is used to delete client, service, device, credit or opportunity comments.",
            "params": [
                {
                    "param": "type",
                    "name": "Comment Type",
                    "required": true,
                    "default": null,
                    "description": "client, service, device, credit, opportunity or quote"
                },
                {
                    "param": "comment_id",
                    "name": "Comment ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "comment_get": {
            "method": "uber.comment_get",
            "title": "Get Comments",
            "description": "This method is used to get client, service, device, credit or opportunity comments.",
            "params": [
                {
                    "param": "type",
                    "name": "Comment Type",
                    "required": true,
                    "default": null,
                    "description": "client, service, device, credit, opportunity or quote"
                },
                {
                    "param": "comment_id",
                    "name": "Comment ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "comment_list": {
            "method": "uber.comment_list",
            "title": "List Comments",
            "description": "This method is used to list client, service, device, credit or opportunity comments.",
            "params": [
                {
                    "param": "type",
                    "name": "Comment Type",
                    "required": true,
                    "default": null,
                    "description": "client, service, device, credit, opportunity or quote"
                },
                {
                    "param": "ref_id",
                    "name": "Related ID",
                    "required": true,
                    "default": null,
                    "description": "ID number of client, service, device, credit, opportunity or quote"
                },
                {
                    "param": "filter_text",
                    "name": "Filter Text",
                    "required": false,
                    "default": null,
                    "description": "An array of strings to match against comments and attachment filenames. Comments which match all terms are returned."
                },
                {
                    "param": "client_viewable",
                    "name": "Client Viewable",
                    "required": false,
                    "default": null,
                    "description": "If client_viewable needs to be filtered (1 to only show client_viewable)"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "comment_update": {
            "method": "uber.comment_update",
            "title": "Update Comment",
            "description": "This method is used to update client, service, device, credit or opportunity comments.",
            "params": [
                {
                    "param": "type",
                    "name": "Comment Type",
                    "required": true,
                    "default": null,
                    "description": "client, service, device, credit, opportunity or quote"
                },
                {
                    "param": "comment_id",
                    "name": "Comment ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "comment",
                    "name": "Comment",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "user_id",
                    "name": "User ID",
                    "required": false,
                    "default": "api user",
                    "description": ""
                }
            ]
        },
        "config_list": {
            "method": "uber.config_list",
            "title": "List Configuration Values",
            "description": "This method is used to list configuration values.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "items",
                    "name": "Items",
                    "required": false,
                    "default": null,
                    "description": "If specified as either a string or an array, only the configuration items specified will be returned.\nIf a string is specified, % can be used as a wildcard.\n\nExamples:\n'look_feel.serverurl' would return the item 'look_feel.serverurl'.\n'look_feel%' would return all items starting with 'look_feel'.\narray('look_feel.serverurl', 'look_feel.replymail') would return the items 'look_feel.serverurl' and 'look_feel.replymail'."
                }
            ]
        },
        "config_update": {
            "method": "uber.config_update",
            "title": "Update Configuration Value",
            "description": "This method is used to update a configuration value.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "items",
                    "name": "Items",
                    "required": true,
                    "default": null,
                    "description": "An associative array of the configuration items to be updated with their new values. For locale specific items, append the locale (clientmgr.inv_title_en_US etc.) to the end of the item name."
                }
            ]
        },
        "contract_term_add": {
            "method": "uber.contract_term_add",
            "title": "Add a Contract Term",
            "description": "This method is used to add a contract term",
            "params": [
                {
                    "param": "name",
                    "name": "Contract Term Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "term",
                    "name": "Term Length",
                    "required": true,
                    "default": null,
                    "description": "Length of the contract in months"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": ""
                }
            ]
        },
        "contract_term_get": {
            "method": "uber.contract_term_get",
            "title": "Get Contract Term Details",
            "description": "This method is used to get the details of a specified contract term",
            "params": [
                {
                    "param": "contract_term_id",
                    "name": "Contract Term ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "contract_term_list": {
            "method": "uber.contract_term_list",
            "title": "List Contract Terms",
            "description": "This method is used to list contract terms",
            "params": [
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "1 = Active Contract Terms, 0 =  Inactive Contract Terms"
                }
            ]
        },
        "contract_term_update": {
            "method": "uber.contract_term_update",
            "title": "Update a Contract Term",
            "description": "This method is used to update a contract term",
            "params": [
                {
                    "param": "contract_term_id",
                    "name": "Contract Term ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Contract Term Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "term",
                    "name": "Term Length",
                    "required": false,
                    "default": null,
                    "description": "Length of the contract in months"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "1 = Active, 0 =  Inactive"
                }
            ]
        },
        "custom_payment_type_add": {
            "method": "uber.custom_payment_type_add",
            "title": "Add Custom Payment Type",
            "description": "This method is used to create a new custom payment type",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": "The brand ID for the Custom Payment Type"
                },
                {
                    "param": "id",
                    "name": "ID",
                    "required": true,
                    "default": null,
                    "description": "A unique string starting with the prefix custom_"
                },
                {
                    "param": "label",
                    "name": "Label",
                    "required": true,
                    "default": null,
                    "description": "The Custom Payment Type label"
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The Custom Payment Type description"
                },
                {
                    "param": "active",
                    "name": "Status",
                    "required": false,
                    "default": "1",
                    "description": "1 = Active, 0 =  Inactive"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this Custom Payment Type. Substitute lang_id with the numeric language id.\nFormat: i18n[lang_id][label]=Colo\nAvailable Field: label"
                }
            ]
        },
        "custom_payment_type_list": {
            "method": "uber.custom_payment_type_list",
            "title": "Get Custom Payment Types list",
            "description": "This method is used to get a list of custom payment types",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": "The brand ID for the Custom Payment Types"
                },
                {
                    "param": "is_active",
                    "name": "Is Active",
                    "required": false,
                    "default": false,
                    "description": "If specified return only the active Custom Payment Types"
                }
            ]
        },
        "custom_payment_type_update": {
            "method": "uber.custom_payment_type_update",
            "title": "Update Custom Payment Type",
            "description": "This method is used to update a custom payment type",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": "The brand ID for the Custom Payment Type to update"
                },
                {
                    "param": "id",
                    "name": "ID",
                    "required": true,
                    "default": null,
                    "description": "The Custom Payment Type ID to update"
                },
                {
                    "param": "label",
                    "name": "Label",
                    "required": false,
                    "default": null,
                    "description": "The Custom Payment Type label"
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The Custom Payment Type description"
                },
                {
                    "param": "active",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "1 = Active, 0 =  Inactive"
                }
            ]
        },
        "documentation": {
            "method": "uber.documentation",
            "title": "Download API Documentation",
            "description": "This method is used to get a document with details of all available API methods.",
            "params": []
        },
        "event_alert_list": {
            "method": "uber.event_alert_list",
            "title": "List Event Alerts",
            "description": "This method is used to list the current user's event alerts.",
            "params": [
                {
                    "param": "begin",
                    "name": "Begin Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. If empty, output will begin from the earliest event alert."
                },
                {
                    "param": "end",
                    "name": "End Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. If empty, output will end at the most recent event alert."
                },
                {
                    "param": "read",
                    "name": "Read",
                    "required": false,
                    "default": 0,
                    "description": "-1 = All\n0 = Unread\n1 = Read"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "time",
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "event_alert_mark_read": {
            "method": "uber.event_alert_mark_read",
            "title": "Mark Event Alerts Read",
            "description": "This method is used to mark event alerts as read.",
            "params": []
        },
        "event_list": {
            "method": "uber.event_list",
            "title": "Access the Event Log",
            "description": "This method is used to retrieve data from the event log.",
            "params": [
                {
                    "param": "user_login",
                    "name": "Client Login",
                    "required": false,
                    "default": null,
                    "description": "Client's login name or ID"
                },
                {
                    "param": "begin",
                    "name": "Begin Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. If empty, output will begin from the earliest event."
                },
                {
                    "param": "end",
                    "name": "End Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. If empty, output will end at the most recent event."
                },
                {
                    "param": "searchfor",
                    "name": "Search term",
                    "required": false,
                    "default": null,
                    "description": "Used to return only those events that include a specific keyword."
                },
                {
                    "param": "ledger",
                    "name": "Ledger events only",
                    "required": false,
                    "default": 0,
                    "description": "Return all events or just those that appear in the ledger event log."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "time",
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": 100,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "event_trigger_action_get": {
            "method": "uber.event_trigger_action_get",
            "title": "Get Event Trigger Action Details",
            "description": "This method is used to get an event trigger action's details.",
            "params": [
                {
                    "param": "ea_id",
                    "name": "Event Trigger Action ID",
                    "required": false,
                    "default": null,
                    "description": "Either this or ea_name must be provided."
                },
                {
                    "param": "ea_name",
                    "name": "Event Trigger Action Name",
                    "required": false,
                    "default": null,
                    "description": "Either this or ea_id must be provided."
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "event_trigger_action_list": {
            "method": "uber.event_trigger_action_list",
            "title": "List Event Trigger Actions",
            "description": "This method is used to list event trigger actions.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "event_trigger_script_add": {
            "method": "uber.event_trigger_script_add",
            "title": "Add a New Event Trigger Script",
            "description": "This method is used to add a new event trigger script.",
            "params": [
                {
                    "param": "ea_id",
                    "name": "Event Trigger Action ID",
                    "required": false,
                    "default": null,
                    "description": "Either this or ea_name must be provided."
                },
                {
                    "param": "ea_name",
                    "name": "Event Trigger Action Name",
                    "required": false,
                    "default": null,
                    "description": "Either this or ea_id must be provided."
                },
                {
                    "param": "es_label",
                    "name": "Label",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "es_url",
                    "name": "URL",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "args",
                    "name": "Variables",
                    "required": false,
                    "default": null,
                    "description": "An associative array of script variables.\n\nExample: args[client]=clientid&args[service]=packid"
                },
                {
                    "param": "es_rs_check",
                    "name": "Response Action",
                    "required": false,
                    "default": 0,
                    "description": "How to handle script responses:\n0 = Do nothing\n1 = Expect and interpret output from the called script"
                },
                {
                    "param": "es_no_response",
                    "name": "Script Timeout Action",
                    "required": false,
                    "default": null,
                    "description": "How to handle a script timeout:\n0 = Continue to next script\n1 = Stop Event Actions"
                },
                {
                    "param": "matches",
                    "name": "Response Matches",
                    "required": false,
                    "default": null,
                    "description": "A multidimensional array specifying the action(s) to take when a response matches or doesn't match a certain value:\n\nExample: matches[0][er_match]=Y&matches[0][er_value]=success&matches[0][er_action]=1&matches[1][er_match]=N&matches[1][er_value]=success&matches[1][er_action]=0\nwould continue to the next script for a response matching 'success' and stop event actions for a response not matching 'success'."
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "event_trigger_script_delete": {
            "method": "uber.event_trigger_script_delete",
            "title": "Delete an Event Trigger Script",
            "description": "This method is used to delete an event trigger script.",
            "params": [
                {
                    "param": "es_id",
                    "name": "Event Trigger Script ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "event_trigger_script_get": {
            "method": "uber.event_trigger_script_get",
            "title": "Get Event Trigger Script Details",
            "description": "This method is used to get an event trigger script's details.",
            "params": [
                {
                    "param": "es_id",
                    "name": "Event Trigger Script ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "event_trigger_script_list": {
            "method": "uber.event_trigger_script_list",
            "title": "List Event Trigger Scripts",
            "description": "This method is used to list event trigger scripts.",
            "params": [
                {
                    "param": "ea_id",
                    "name": "Event Trigger Action ID",
                    "required": false,
                    "default": null,
                    "description": "Either this or ea_name must be provided."
                },
                {
                    "param": "ea_name",
                    "name": "Event Trigger Action Name",
                    "required": false,
                    "default": null,
                    "description": "Either this or ea_id must be provided."
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "event_trigger_script_update": {
            "method": "uber.event_trigger_script_update",
            "title": "Update an Event Trigger Script",
            "description": "This method is used to update an event trigger script.",
            "params": [
                {
                    "param": "es_id",
                    "name": "Event Trigger Script ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "es_label",
                    "name": "Label",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "es_url",
                    "name": "URL",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "args",
                    "name": "Variables",
                    "required": false,
                    "default": null,
                    "description": "An associative array of script variables.\n\nExample: args[client]=clientid&args[service]=packid"
                },
                {
                    "param": "es_rs_check",
                    "name": "Response Action",
                    "required": false,
                    "default": 0,
                    "description": "How to handle script responses:\n0 = Do nothing\n1 = Expect and interpret output from the called script"
                },
                {
                    "param": "es_no_response",
                    "name": "Script Timeout Action",
                    "required": false,
                    "default": null,
                    "description": "How to handle a script timeout:\n0 = Continue to next script\n1 = Stop Event Actions"
                },
                {
                    "param": "matches",
                    "name": "Response Matches",
                    "required": false,
                    "default": null,
                    "description": "A multidimensional array specifying the action(s) to take when a response matches or doesn't match a certain value:\n\nExample: matches[0][er_match]=Y&matches[0][er_value]=success&matches[0][er_action]=1&matches[1][er_match]=N&matches[1][er_value]=success&matches[1][er_action]=0\nwould continue to the next script for a response matching 'success' and stop event actions for a response not matching 'success'."
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "file_add": {
            "method": "uber.file_add",
            "title": "Add a file",
            "description": "This method is used to add a file.",
            "params": [
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "type",
                    "name": "",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contents",
                    "name": "base64 encoded data",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "public",
                    "name": "",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "file_delete": {
            "method": "uber.file_delete",
            "title": "Delete a file",
            "description": "This method is used to delete a file.",
            "params": [
                {
                    "param": "id",
                    "name": "File ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "hash",
                    "name": "File Hash",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "file_get": {
            "method": "uber.file_get",
            "title": "Get a File",
            "description": "This method is used to return a single file.",
            "params": [
                {
                    "param": "id",
                    "name": "File ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "hash",
                    "name": "File Hash",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "file_list": {
            "method": "uber.file_list",
            "title": "Get a List of Files",
            "description": "This method is used to return a list of files.",
            "params": [
                {
                    "param": "id",
                    "name": "File ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "hash",
                    "name": "",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "type",
                    "name": "",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "public",
                    "name": "",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": null,
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": null,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "file_update": {
            "method": "uber.file_update",
            "title": "Update a file",
            "description": "This method is used to update a file.",
            "params": [
                {
                    "param": "id",
                    "name": "File ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "hash",
                    "name": "",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "type",
                    "name": "",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contents",
                    "name": "base64 encoded data",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "public",
                    "name": "",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "forgot_pass": {
            "method": "uber.forgot_pass",
            "title": "Send a Password Reset",
            "description": "Sends a reset password link to the email address on file.",
            "params": [
                {
                    "param": "user_login",
                    "name": "Client Login",
                    "required": false,
                    "default": null,
                    "description": "Client's login name or ID"
                },
                {
                    "param": "email",
                    "name": "Email Address",
                    "required": false,
                    "default": null,
                    "description": "The client, contact or admin's email address."
                }
            ]
        },
        "language_add": {
            "method": "uber.language_add",
            "title": "Add a New Language",
            "description": "This method is used to add a new language to Ubersmith.",
            "params": [
                {
                    "param": "locale",
                    "name": "Locale",
                    "required": true,
                    "default": null,
                    "description": "The language locale. Must be a valid locale from uber.language_list"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The language name. Defaults to the name in the language file."
                },
                {
                    "param": "name_convention",
                    "name": "Name Convention",
                    "required": false,
                    "default": null,
                    "description": "The language name convention. Defaults to the name convention in the language file.\nOptions: 0 = Firstname Lastname, 1 = Lastname Firstname, 2 = LastnameFirstname"
                },
                {
                    "param": "date_format",
                    "name": "Date Format",
                    "required": false,
                    "default": null,
                    "description": "The language date format. Defaults to the date format in the language file.\nOptions: M/d/Y, d/M/Y, M/d/y, d/M/y, m/d/Y, d/m/Y, m/d/y, d/m/y, M-d-Y, d-M-Y, M-d-y, d-M-y, m-d-Y, d-m-Y, m-d-y, d-m-y, Y-m-d"
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "An optional language description"
                },
                {
                    "param": "default",
                    "name": "Default",
                    "required": false,
                    "default": 0,
                    "description": "Whether to make the new language the default language of Ubersmith.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": "Whether the language should be active or inactive.\nOptions: 1 = Active, 0 = Inactive"
                }
            ]
        },
        "language_list": {
            "method": "uber.language_list",
            "title": "Language List",
            "description": "This method is used to list the languages that Ubersmith is aware of.",
            "params": [
                {
                    "param": "lang_id",
                    "name": "Language Id",
                    "required": false,
                    "default": null,
                    "description": "Find the language by numeric ID"
                },
                {
                    "param": "locale",
                    "name": "Locale",
                    "required": false,
                    "default": null,
                    "description": "Find the language by locale"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "Find the language by name"
                },
                {
                    "param": "default",
                    "name": "Default",
                    "required": false,
                    "default": null,
                    "description": "Only fetch the default language"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Filter languages by status.\nOptions: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "installed",
                    "name": "Installed",
                    "required": false,
                    "default": null,
                    "description": "Filter languages by installed status.\nOptions: 1 = Installed, 0 = Uninstalled"
                },
                {
                    "param": "available",
                    "name": "Available",
                    "required": false,
                    "default": null,
                    "description": "Get all uninstalled and inactive languages in the list"
                }
            ]
        },
        "language_update": {
            "method": "uber.language_update",
            "title": "Update Language",
            "description": "This method is used to update an existing language in Ubersmith.",
            "params": [
                {
                    "param": "lang_id",
                    "name": "Language ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric language ID. Must specify either lang_id or locale when calling this method"
                },
                {
                    "param": "locale",
                    "name": "Locale",
                    "required": false,
                    "default": null,
                    "description": "The language locale. Must specify either lang_id or locale when calling this method"
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The language name."
                },
                {
                    "param": "name_convention",
                    "name": "Name Convention",
                    "required": false,
                    "default": null,
                    "description": "The language name convention.\nOptions: 0 = Firstname Lastname, 1 = Lastname Firstname, 2 = LastnameFirstname"
                },
                {
                    "param": "date_format",
                    "name": "Date Format",
                    "required": false,
                    "default": null,
                    "description": "The language date format.\nOptions: M/d/Y, d/M/Y, M/d/y, d/M/y, m/d/Y, d/m/Y, m/d/y, d/m/y, M-d-Y, d-M-Y, M-d-y, d-M-y, m-d-Y, d-m-Y, m-d-y, d-m-y, Y-m-d"
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The language description"
                },
                {
                    "param": "default",
                    "name": "Default",
                    "required": false,
                    "default": null,
                    "description": "Whether to make the language the default language of Ubersmith.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Whether to make the language active or inactive.\nOptions: 1 = Active, 0 = Inactive"
                }
            ]
        },
        "late_fee_schedule_list": {
            "method": "uber.late_fee_schedule_list",
            "title": "List Late Fee Schedules",
            "description": "This method is used to list late fee schedules.",
            "params": [
                {
                    "param": "amount",
                    "name": "Amount",
                    "required": false,
                    "default": null,
                    "description": "Amount"
                },
                {
                    "param": "delay",
                    "name": "Days Overdue",
                    "required": false,
                    "default": null,
                    "description": "Days Overdue"
                },
                {
                    "param": "recur_method",
                    "name": "Recur Method",
                    "required": false,
                    "default": null,
                    "description": "Recur Method"
                },
                {
                    "param": "recur_amount",
                    "name": "Recur Amount",
                    "required": false,
                    "default": null,
                    "description": "Recur Amount"
                },
                {
                    "param": "recur_interval",
                    "name": "Recur Interval Days",
                    "required": false,
                    "default": null,
                    "description": "Recur Interval Days"
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "Brand ID"
                },
                {
                    "param": "active",
                    "name": "Active",
                    "required": false,
                    "default": "1",
                    "description": "1 = Active Late Fee Schedules, 0 = Deactivated Late Fee Schedules, 2 = All Late Fee Schedules"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "login_list": {
            "method": "uber.login_list",
            "title": "List User Logins",
            "description": "This method is used to returns a list of login names defined.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "mail_get": {
            "method": "uber.mail_get",
            "title": "Get an Email From the Log",
            "description": "This method is used to retrieve data for a specific stored email from the mail log.",
            "params": [
                {
                    "param": "mail_id",
                    "name": "Mail ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "mail_list": {
            "method": "uber.mail_list",
            "title": "Access the Mail Log",
            "description": "This method is used to retrieve data from the mail log.",
            "params": [
                {
                    "param": "user_login",
                    "name": "Client's login name or id number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "begin",
                    "name": "Begin Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. If empty, output will begin from the earliest event."
                },
                {
                    "param": "end",
                    "name": "End Time",
                    "required": false,
                    "default": null,
                    "description": "A Unix timestamp. If empty, output will end at the most recent event."
                },
                {
                    "param": "searchfor",
                    "name": "Search Term",
                    "required": false,
                    "default": null,
                    "description": "Used to return only those events that include a specific keyword."
                },
                {
                    "param": "searchin",
                    "name": "Field that should be used by the 'searchfor' variable.",
                    "required": false,
                    "default": null,
                    "description": "Possible values: subject, body, or recipient."
                },
                {
                    "param": "all",
                    "name": "Include Message Header and Body",
                    "required": false,
                    "default": 0,
                    "description": "Include full email header and body."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": "time",
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": 100,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "message_list": {
            "method": "uber.message_list",
            "title": "List Message Board Messages",
            "description": "This method is used to retrieve the messages from Ubersmith's internal message board.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": "Return only messages for the specified brand."
                },
                {
                    "param": "public",
                    "name": "Public-only Flag",
                    "required": false,
                    "default": 0,
                    "description": "If set to 1, only return messages which are public (client viewable)."
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order messages by. Possible fields are: docid, date, title, content, who, author, public, brand_id"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                }
            ]
        },
        "metadata_bulk_get": {
            "method": "uber.metadata_bulk_get",
            "title": "Bulk Get Custom Field Values",
            "description": "This method is used to bulk retrieve the value of a single custom field for every client, service, contact, ticket or device.",
            "params": [
                {
                    "param": "variable",
                    "name": "Custom Field Variable Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "meta_type",
                    "name": "Custom Field Object Type",
                    "required": true,
                    "default": null,
                    "description": "Possible values:\nclient\nservice\ncontact\nticket\ndevice"
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "metadata_field_add": {
            "method": "uber.metadata_field_add",
            "title": "Add Custom Field",
            "description": "This method is used to add a new custom field.",
            "params": [
                {
                    "param": "meta_type",
                    "name": "Custom Field Config Type",
                    "required": true,
                    "default": null,
                    "description": "Possible values: client, contact, pack, facility, zone, cage, row, rack, device, ticket, connection. Only required if metagroup_id is not specified or is 0."
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": "system default",
                    "description": "Brand to use for custom field config item, only required if metagroup_id is not specified or is 0."
                },
                {
                    "param": "metagroup_id",
                    "name": "Custom Field Group ID",
                    "required": false,
                    "default": null,
                    "description": "The custom field group to add this config to. Should be the numeric custom field group id."
                },
                {
                    "param": "label",
                    "name": "Label",
                    "required": true,
                    "default": null,
                    "description": "The display label for the custom field config item"
                },
                {
                    "param": "variable",
                    "name": "Variable Name",
                    "required": true,
                    "default": null,
                    "description": "The machine name of the custom field config. Has to be unique per meta_type."
                },
                {
                    "param": "default_value",
                    "name": "Default value",
                    "required": false,
                    "default": null,
                    "description": "The default value for new custom field values of this field"
                },
                {
                    "param": "client_access",
                    "name": "Client Access Level",
                    "required": false,
                    "default": 0,
                    "description": "Set the client access. 0 = No access, 1 = View, 2 = Edit."
                },
                {
                    "param": "type",
                    "name": "Type",
                    "required": true,
                    "default": null,
                    "description": "Possible values: select, select_multiple, text, textarea, checkbox, date, password"
                },
                {
                    "param": "required",
                    "name": "Required",
                    "required": false,
                    "default": "false",
                    "description": "Whether to require this value when saving custom field"
                },
                {
                    "param": "unique",
                    "name": "Unique",
                    "required": false,
                    "default": "false",
                    "description": "Whether to enforce uniqueness when saving values of this custom field"
                },
                {
                    "param": "show_in_list",
                    "name": "Show in Lists",
                    "required": false,
                    "default": "false",
                    "description": "Whether to show this custom field in lists of this meta_type."
                },
                {
                    "param": "editable",
                    "name": "Editable Type",
                    "required": false,
                    "default": 0,
                    "description": "What type of editing to allow for this custom field. -1 = Not Editable, 0 = Editable, 1 = Inline Editing"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization Options",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this custom field. Substitute lang_id with the numeric language id or language locale, e.g. en_US. Options for all fields are: \n\ni18n[lang_id][label]\ni18n[lang_id][default_value]\n\nFor type = select:\n\ni18n[lang_id][options]\n\nFor type = text:\n\ni18n[lang_id][size]\n\nFor type = textarea:\n\ni18n[lang_id][rows]\ni18n[lang_id][cols]"
                },
                {
                    "param": "regular_expression_match",
                    "name": "Regular Expression Match",
                    "required": false,
                    "default": null,
                    "description": "If type = text, the regular expression to match when saving values"
                },
                {
                    "param": "regular_expression_help",
                    "name": "Regular Expression Help Text",
                    "required": false,
                    "default": null,
                    "description": "If type = text and regular_expression_match specified, the help text to display to the user"
                }
            ]
        },
        "metadata_field_delete": {
            "method": "uber.metadata_field_delete",
            "title": "Delete Custom Field",
            "description": "This method is used to delete an existing custom field.",
            "params": [
                {
                    "param": "metaconf_id",
                    "name": "Custom Field Config ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric custom field id to delete"
                }
            ]
        },
        "metadata_field_list": {
            "method": "uber.metadata_field_list",
            "title": "Get Custom Field Definitions",
            "description": "This method is used to retrieve a list of matching custom fields.",
            "params": [
                {
                    "param": "metaconf_id",
                    "name": "Custom Field Config ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, a single record matching the ID is returned and all other params are ignored."
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": "system default",
                    "description": "The class_id to filter custom fields on"
                },
                {
                    "param": "meta_type",
                    "name": "Custom Field Type",
                    "required": false,
                    "default": null,
                    "description": "Required if metaconf_id is not specified. Possible values: client, contact, pack, facility, zone, cage, row, rack, device, ticket, connection"
                },
                {
                    "param": "variable",
                    "name": "Custom Field Variable Name",
                    "required": false,
                    "default": null,
                    "description": "Variable name to search for."
                }
            ]
        },
        "metadata_field_update": {
            "method": "uber.metadata_field_update",
            "title": "Update Custom Field",
            "description": "This method is used to update an existing custom field.",
            "params": [
                {
                    "param": "metaconf_id",
                    "name": "Custom Field Config ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric custom field id"
                },
                {
                    "param": "metagroup_id",
                    "name": "Custom Field Group ID",
                    "required": false,
                    "default": null,
                    "description": "The custom field group to add this config to. Should be the numeric custom field group id."
                },
                {
                    "param": "label",
                    "name": "Label",
                    "required": false,
                    "default": null,
                    "description": "The display label for the custom field config item"
                },
                {
                    "param": "variable",
                    "name": "Variable Name",
                    "required": false,
                    "default": null,
                    "description": "The machine name of the custom field config. Has to be unique per meta_type."
                },
                {
                    "param": "default_value",
                    "name": "Default value",
                    "required": false,
                    "default": null,
                    "description": "The default value for new custom field values of this field"
                },
                {
                    "param": "client_access",
                    "name": "Client Access Level",
                    "required": false,
                    "default": 0,
                    "description": "Set the client access. 0 = No access, 1 = View, 2 = Edit."
                },
                {
                    "param": "type",
                    "name": "Type",
                    "required": false,
                    "default": null,
                    "description": "Possible values: select, select_multiple, text, textarea, checkbox, date, password"
                },
                {
                    "param": "required",
                    "name": "Required",
                    "required": false,
                    "default": "false",
                    "description": "Whether to require this value when saving custom field"
                },
                {
                    "param": "unique",
                    "name": "Unique",
                    "required": false,
                    "default": "false",
                    "description": "Whether to enforce uniqueness when saving values of this custom field"
                },
                {
                    "param": "show_in_list",
                    "name": "Show in Lists",
                    "required": false,
                    "default": "false",
                    "description": "Whether to show this custom field in lists of this meta_type."
                },
                {
                    "param": "editable",
                    "name": "Editable Type",
                    "required": false,
                    "default": 0,
                    "description": "What type of editing to allow for this custom field. -1 = Not Editable, 0 = Editable, 1 = Inline Editing"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization Options",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this custom field. Substitute lang_id with the numeric language id or language locale, e.g. en_US. Options for all fields are: \n\ni18n[lang_id][label]\ni18n[lang_id][default_value]\n\nFor type = select:\n\ni18n[lang_id][options]\n\nFor type = text:\n\ni18n[lang_id][size]\n\nFor type = textarea:\n\ni18n[lang_id][rows]\ni18n[lang_id][cols]"
                },
                {
                    "param": "regular_expression_match",
                    "name": "Regular Expression Match",
                    "required": false,
                    "default": null,
                    "description": "If type = text, the regular expression to match when saving values"
                },
                {
                    "param": "regular_expression_help",
                    "name": "Regular Expression Help Text",
                    "required": false,
                    "default": null,
                    "description": "If type = text and regular_expression_match specified, the help text to display to the user"
                }
            ]
        },
        "metadata_field_update_applicable": {
            "method": "uber.metadata_field_update_applicable",
            "title": "Update Custom Field Applicable",
            "description": "This method is used to update custom field applicable values.",
            "params": [
                {
                    "param": "metaconf_id",
                    "name": "Custom Field Config ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric custom field id"
                },
                {
                    "param": "metadata_applicable",
                    "name": "Applicable Custom Fields",
                    "required": true,
                    "default": null,
                    "description": "An array of custom field applicable settings to update.\n\t\t\tFormat: metadata_applicable[{item_id}]=1 or metadata_applicable[{item_id}]=0. item_id is the id of an item. For example: metadata_applicable[28]=2: if the meta_type of the found metadata is equal to \"pack\", applicable will be set to required for the Service Plan ID = 28.\n\n\t\t\tConcerning the Custom Device Fields, devtype_group and|or devtype array are required. metadata_applicable[\"devtype_group\"][{item_id}]=1 and metadata_applicable[\"devtype\"][{item_id}]=-1\n\n\t\t\tPossible values: 0: No, 1: Yes, 2: Required and -1: Inherit (only used with device types to inherit from device type group)\n\t\t\t"
                }
            ]
        },
        "metadata_get": {
            "method": "uber.metadata_get",
            "title": "Get Custom Field Values",
            "description": "This method is used to retrieve custom field values.",
            "params": [
                {
                    "param": "id",
                    "name": "Object ID",
                    "required": true,
                    "default": null,
                    "description": "ID of Object (Client, Service or Device)"
                },
                {
                    "param": "metagroup_id",
                    "name": "Custom Field Group ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, only items from this group are returned. Use 0 to return ungrouped items."
                },
                {
                    "param": "meta_type",
                    "name": "Custom Field Object Type",
                    "required": false,
                    "default": null,
                    "description": "Possible values; client, pack or device. Only required if metagroup_id is not specified or is 0."
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": "system default",
                    "description": "Brand to search for items, only required if metagroup_id is not specified or is 0."
                },
                {
                    "param": "client_access",
                    "name": "Client Access Level",
                    "required": false,
                    "default": null,
                    "description": "Only return items with a client access level greater or equal to the specified value: 0 = No access, 1 = View, 2 = Edit"
                }
            ]
        },
        "metadata_group_add": {
            "method": "uber.metadata_group_add",
            "title": "Add Custom Field Group",
            "description": "This method is used to add a custom field group.",
            "params": [
                {
                    "param": "meta_type",
                    "name": "Custom Field Group Type",
                    "required": true,
                    "default": null,
                    "description": "Possible values: client, contact, pack, facility, zone, cage, row, rack, device, ticket, connection"
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": "system default",
                    "description": "Brand to use for custom field group"
                },
                {
                    "param": "name",
                    "name": "Display Name",
                    "required": true,
                    "default": null,
                    "description": "The display name to use for the custom field group"
                },
                {
                    "param": "variable",
                    "name": "Variable Name",
                    "required": true,
                    "default": null,
                    "description": "The machine name of the custom field group. Has to be unique per meta_type."
                },
                {
                    "param": "priority",
                    "name": "Priority",
                    "required": false,
                    "default": "lowest priority",
                    "description": "Controls how high or low the custom field group will appear on the config page in Settings. If none is provided, will appear at the bottom of the list."
                },
                {
                    "param": "i18n",
                    "name": "Internationalization Options",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this custom field group. Substitute lang_id with the numeric language id or language locale, e.g. en_US. Options are: \n\ni18n[lang_id][name]"
                }
            ]
        },
        "metadata_group_delete": {
            "method": "uber.metadata_group_delete",
            "title": "Delete Custom Field Group",
            "description": "This method is used to delete an existing custom field group.",
            "params": [
                {
                    "param": "metagroup_id",
                    "name": "Custom Field Group ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric custom field group id to delete"
                }
            ]
        },
        "metadata_group_list": {
            "method": "uber.metadata_group_list",
            "title": "List Custom Field Groups",
            "description": "This method is used to list the existing custom field groups.",
            "params": [
                {
                    "param": "meta_type",
                    "name": "Custom Fields Config Type",
                    "required": false,
                    "default": null,
                    "description": "The type of custom field group to filter on. Possible values: client, contact, pack, facility, zone, cage, row, rack, device, ticket, connection"
                },
                {
                    "param": "metagroup_id",
                    "name": "Custom Field Group ID",
                    "required": false,
                    "default": null,
                    "description": "The custom field group to find. Should be the numeric custom field group id."
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": "system default",
                    "description": "Brand to filter custom field groups. Only required if metagroup_id is not specified or is 0."
                },
                {
                    "param": "variable",
                    "name": "The machine name of the custom field group",
                    "required": false,
                    "default": null,
                    "description": "Filter with the variable name. This field is unique within a brand and meta_type."
                }
            ]
        },
        "metadata_group_update": {
            "method": "uber.metadata_group_update",
            "title": "Update Custom Field Group",
            "description": "This method is used to update an existing custom field group.",
            "params": [
                {
                    "param": "metagroup_id",
                    "name": "Custom Field Group ID",
                    "required": true,
                    "default": null,
                    "description": "Possible values: client, contact, pack, facility, zone, cage, row, rack, device, ticket, connection"
                },
                {
                    "param": "name",
                    "name": "Display Name",
                    "required": false,
                    "default": null,
                    "description": "The display name to use for the custom field group"
                },
                {
                    "param": "variable",
                    "name": "Variable Name",
                    "required": false,
                    "default": null,
                    "description": "The machine name of the custom field group. Has to be unique per meta_type and class_id."
                },
                {
                    "param": "priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "Controls how high or low the custom field group will appear on the config page in Settings. If none is provided, will appear at the bottom of the list."
                },
                {
                    "param": "i18n",
                    "name": "Internationalization Options",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this custom field group. Substitute lang_id with the numeric language id or language locale, e.g. en_US. Options are: \n\ni18n[lang_id][name]"
                }
            ]
        },
        "method_get": {
            "method": "uber.method_get",
            "title": "Get API Method Details",
            "description": "This method is used to get the details of an API method.",
            "params": [
                {
                    "param": "method_name",
                    "name": "Method Name",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "method_list": {
            "method": "uber.method_list",
            "title": "List Available API Methods",
            "description": "This method is used to get a list of all available API methods.",
            "params": []
        },
        "msa_get": {
            "method": "uber.msa_get",
            "title": "Get MSA Details",
            "description": "This method is used to get the details of a specified msa.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "msa_id",
                    "name": "MSA ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "format",
                    "name": "Format",
                    "required": false,
                    "default": "json",
                    "description": "Return format:\njson = JSON (default)\npdf  = PDF"
                }
            ]
        },
        "notification_add": {
            "method": "uber.notification_add",
            "title": "Add Notification",
            "description": "This method adds a notification.",
            "params": [
                {
                    "param": "name",
                    "name": "Notification Name",
                    "required": true,
                    "default": "",
                    "description": "System name for notification"
                },
                {
                    "param": "association",
                    "name": "Association",
                    "required": false,
                    "default": null,
                    "description": "An array that contains the notification's associations.\nA notification can contain multiple associations and each association will contain a list of items.\nFor each item, one or multiple clients (client_id), devices (device_id), services (service_id) and locations (facility_id) can be specified.\nExamples:\nAn association with a single item specifying a single client:\nassociation[0][items][0][clientid]=1001\nAn association with multiple items each specifying a different client:\nassociation[0][items][0][clientid]=1001&association[0][items][1][clientid]=1002\n2 associations each with a single item specifying a different client:\nassociation[0][items][0][clientid]=1001&association[1][items][0][clientid]=1002\nAn association with a single item specifying a client with a linked service:\nassociation[0][items][0][clientid]=1001&association[0][items][0][service_id]=1"
                },
                {
                    "param": "notification_type_id",
                    "name": "Notification Type ID",
                    "required": true,
                    "default": null,
                    "description": "Notification type identifier"
                },
                {
                    "param": "status_id",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": "Options: \n  1 = Draft\n  2 = Active\n  4 = Resolved\n  8 = Deactivated"
                },
                {
                    "param": "make_replies_links",
                    "name": "Replies will open Linked Tickets",
                    "required": false,
                    "default": null,
                    "description": "Options: 1 = Yes, put replies into linked tickets; 0 = No, put replies into the main ticket."
                },
                {
                    "param": "notify_account_team",
                    "name": "Notify Account Team",
                    "required": false,
                    "default": null,
                    "description": "Notify account team. 1 = Yes, 0 = No"
                },
                {
                    "param": "email_from_default",
                    "name": "Default From Address",
                    "required": false,
                    "default": "",
                    "description": "Email address used as the default for new messages"
                },
                {
                    "param": "q_id",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": "Department ID used for created tickets. Overrides notification type."
                },
                {
                    "param": "assignment",
                    "name": "Ticket Assignment User ID",
                    "required": false,
                    "default": null,
                    "description": "Admin ID of assignee for created tickets. Overrides notification type."
                },
                {
                    "param": "classification_id",
                    "name": "Ticket Classification ID",
                    "required": false,
                    "default": null,
                    "description": "Classification ID for created tickets. Overrides notification type."
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "Priority for created tickets. Overrides notification type."
                },
                {
                    "param": "impact",
                    "name": "Ticket Impact",
                    "required": false,
                    "default": null,
                    "description": "Impact for created tickets. Overrides notification type."
                }
            ]
        },
        "notification_list": {
            "method": "uber.notification_list",
            "title": "List Notifications",
            "description": "This method lists existing notifications filtered by the parameters specified.",
            "params": [
                {
                    "param": "notification_id",
                    "name": "Notification ID",
                    "required": false,
                    "default": null,
                    "description": "Notification identifier"
                },
                {
                    "param": "name",
                    "name": "Notification Name",
                    "required": false,
                    "default": null,
                    "description": "System name for notification"
                },
                {
                    "param": "association",
                    "name": "Association",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "notification_type_id",
                    "name": "Notification Type ID",
                    "required": false,
                    "default": null,
                    "description": "Notification type identifier"
                },
                {
                    "param": "status_id",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Options: \n  1 = Draft\n  2 = Active\n  4 = Resolved\n  8 = Deactivated\n  255 = All"
                },
                {
                    "param": "make_replies_links",
                    "name": "Replies will open Linked Tickets",
                    "required": false,
                    "default": null,
                    "description": "Options: 1 = Yes, put replies into linked tickets; 0 = No, put replies into the main ticket."
                },
                {
                    "param": "notify_account_team",
                    "name": "Notify Account Team",
                    "required": false,
                    "default": null,
                    "description": "Notify account team. 1 = Yes, 0 = No"
                },
                {
                    "param": "email_from_default",
                    "name": "Default From Address",
                    "required": false,
                    "default": "",
                    "description": "Email address used as the default for new messages"
                },
                {
                    "param": "q_id",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": "Department ID used for created tickets. Overrides notification type."
                },
                {
                    "param": "assignment",
                    "name": "Ticket Assignment User ID",
                    "required": false,
                    "default": null,
                    "description": "Staff user ID of assignee for created tickets. Overrides notification type."
                },
                {
                    "param": "classification_id",
                    "name": "Ticket Classification ID",
                    "required": false,
                    "default": null,
                    "description": "Classification ID for created tickets"
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "Priority for created tickets"
                },
                {
                    "param": "impact",
                    "name": "Ticket Impact",
                    "required": false,
                    "default": null,
                    "description": "Impact for created tickets"
                },
                {
                    "param": "created_ts",
                    "name": "Created Timestamp",
                    "required": false,
                    "default": null,
                    "description": "Notification initial creation time"
                },
                {
                    "param": "created_by",
                    "name": "Created By",
                    "required": false,
                    "default": null,
                    "description": "Party that created the notification"
                },
                {
                    "param": "updated_ts",
                    "name": "Updated Timestamp",
                    "required": false,
                    "default": null,
                    "description": "Notification last update time"
                },
                {
                    "param": "updated_by",
                    "name": "Updated By",
                    "required": false,
                    "default": null,
                    "description": "Party that last updated the notification"
                }
            ]
        },
        "notification_message_add": {
            "method": "uber.notification_message_add",
            "title": "Add Notification Message",
            "description": "This method adds a notification message and can allow a notification to be scheduled for delivery.",
            "params": [
                {
                    "param": "notification_id",
                    "name": "Notification ID",
                    "required": true,
                    "default": null,
                    "description": "Notification identifier"
                },
                {
                    "param": "notification_message_type_id",
                    "name": "Notification Message Type ID",
                    "required": true,
                    "default": null,
                    "description": "Options: \n  1 = Initial\n  2 = Update\n  3 = Resolution"
                },
                {
                    "param": "email_subject",
                    "name": "Email Subject",
                    "required": false,
                    "default": "",
                    "description": "Notification email subject value"
                },
                {
                    "param": "email_from",
                    "name": "Email From",
                    "required": false,
                    "default": "",
                    "description": "Notification email from header value"
                },
                {
                    "param": "email_body",
                    "name": "Email Body",
                    "required": false,
                    "default": "",
                    "description": "Notification email body"
                },
                {
                    "param": "send_date",
                    "name": "Send Date",
                    "required": false,
                    "default": "",
                    "description": "Notification message scheduled send date. POSIX epoch based integer. Defaults to now."
                }
            ]
        },
        "notification_message_list": {
            "method": "uber.notification_message_list",
            "title": "List Notification Messages",
            "description": "This method lists notification messages filtered by the parameters specified.",
            "params": [
                {
                    "param": "notification_message_id",
                    "name": "Notification Message ID",
                    "required": false,
                    "default": null,
                    "description": "Notification message identifier"
                },
                {
                    "param": "notification_id",
                    "name": "Notification ID",
                    "required": false,
                    "default": null,
                    "description": "Notification identifier"
                },
                {
                    "param": "notification_message_type_id",
                    "name": "Notification Message Type ID",
                    "required": false,
                    "default": null,
                    "description": "Options: \n  1 = Initial\n  2 = Update\n  3 = Resolution"
                },
                {
                    "param": "email_subject",
                    "name": "Email Subject",
                    "required": false,
                    "default": null,
                    "description": "Notification email subject value"
                },
                {
                    "param": "email_from",
                    "name": "Email From",
                    "required": false,
                    "default": null,
                    "description": "Notification email from header value"
                },
                {
                    "param": "email_body",
                    "name": "Email Body",
                    "required": false,
                    "default": null,
                    "description": "Notification email body"
                },
                {
                    "param": "created_ts",
                    "name": "Created Timestamp",
                    "required": false,
                    "default": null,
                    "description": "Message initial creation time"
                },
                {
                    "param": "created_by",
                    "name": "Created By",
                    "required": false,
                    "default": null,
                    "description": "Party that created the message"
                },
                {
                    "param": "updated_ts",
                    "name": "Updated Timestamp",
                    "required": false,
                    "default": null,
                    "description": "Message last update time"
                },
                {
                    "param": "updated_by",
                    "name": "Updated By",
                    "required": false,
                    "default": null,
                    "description": "Party that last updated the message"
                },
                {
                    "param": "send_date",
                    "name": "Send Date",
                    "required": false,
                    "default": null,
                    "description": "Scheduled send date. POSIX epoch based integer."
                },
                {
                    "param": "send_date_max",
                    "name": "Send Date Before",
                    "required": false,
                    "default": null,
                    "description": "Scheduled send date is before specified time."
                },
                {
                    "param": "send_date_min",
                    "name": "Send Date After",
                    "required": false,
                    "default": null,
                    "description": "Scheduled send date is after specified time."
                },
                {
                    "param": "status_id",
                    "name": "Status ID",
                    "required": false,
                    "default": null,
                    "description": "Options (bitwise): \n  255 = All\n  1 = Pending\n  2 = Queued\n  4 = Sent"
                }
            ]
        },
        "notification_message_update": {
            "method": "uber.notification_message_update",
            "title": "Edit Notification Message",
            "description": "This method edits an existing notification message.",
            "params": [
                {
                    "param": "notification_message_id",
                    "name": "Notification Message ID",
                    "required": true,
                    "default": null,
                    "description": "Notification message identifier"
                },
                {
                    "param": "notification_message_type_id",
                    "name": "Notification Message Type ID",
                    "required": false,
                    "default": null,
                    "description": "Options: \n  1 = Initial\n  2 = Update\n  3 = Resolution"
                },
                {
                    "param": "email_subject",
                    "name": "Email Subject",
                    "required": false,
                    "default": null,
                    "description": "Notification email subject value"
                },
                {
                    "param": "email_from",
                    "name": "Email From",
                    "required": false,
                    "default": null,
                    "description": "Notification email from header value"
                },
                {
                    "param": "email_body",
                    "name": "Email Body",
                    "required": false,
                    "default": null,
                    "description": "Notification email body"
                },
                {
                    "param": "send_date",
                    "name": "Send Date",
                    "required": false,
                    "default": "",
                    "description": "Notification message scheduled send date. POSIX epoch based integer. If set but empty, defaults to now."
                }
            ]
        },
        "notification_recipient_add": {
            "method": "uber.notification_recipient_add",
            "title": "Manually Add Notification Recipient",
            "description": "This method manually adds a unique recipient to a notification.",
            "params": [
                {
                    "param": "notification_id",
                    "name": "Notification ID",
                    "required": true,
                    "default": null,
                    "description": "Notification identifier"
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": "Recipient contact ID"
                },
                {
                    "param": "person_id",
                    "name": "Admin ID",
                    "required": false,
                    "default": null,
                    "description": "Recipient admin ID"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": "Only recipients with an active status will recieve the notification.\nOptions: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "email",
                    "name": "Email",
                    "required": false,
                    "default": "",
                    "description": "Recipient email address"
                }
            ]
        },
        "notification_recipient_list": {
            "method": "uber.notification_recipient_list",
            "title": "List Notification Recipients",
            "description": "This method lists notification recipients filtered by the specified parameters.",
            "params": [
                {
                    "param": "notification_recipient_id",
                    "name": "Notification Recipient ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "notification_id",
                    "name": "Notification ID",
                    "required": false,
                    "default": null,
                    "description": "Notification identifier"
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": "Recipient contact ID"
                },
                {
                    "param": "person_id",
                    "name": "Admin ID",
                    "required": false,
                    "default": null,
                    "description": "Recipient admin ID"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Only recipients with an active status will recieve the notification.\nOptions: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "email",
                    "name": "Email",
                    "required": false,
                    "default": null,
                    "description": "Recipient email address"
                },
                {
                    "param": "manually_added",
                    "name": "Manually Added",
                    "required": false,
                    "default": null,
                    "description": "Internal flag indicating the recipient was not added through automatic subscription"
                },
                {
                    "param": "created_by",
                    "name": "Created By",
                    "required": false,
                    "default": null,
                    "description": "Party that created the record"
                },
                {
                    "param": "created_ts",
                    "name": "Created Timestamp",
                    "required": false,
                    "default": null,
                    "description": "Record creation time"
                },
                {
                    "param": "created_ts_max",
                    "name": "Created Timestamp Before",
                    "required": false,
                    "default": null,
                    "description": "Record created before specified timestamp"
                },
                {
                    "param": "created_ts_min",
                    "name": "Created Timestamp After",
                    "required": false,
                    "default": null,
                    "description": "Record created after specified timestamp"
                },
                {
                    "param": "updated_by",
                    "name": "Updated By",
                    "required": false,
                    "default": null,
                    "description": "Party that last updated the record"
                },
                {
                    "param": "updated_ts",
                    "name": "Updated Timestamp",
                    "required": false,
                    "default": null,
                    "description": "Record last update time"
                },
                {
                    "param": "updated_ts_max",
                    "name": "Updated Timestamp Before",
                    "required": false,
                    "default": null,
                    "description": "Record updated before specified timestamp"
                },
                {
                    "param": "updated_ts_min",
                    "name": "Updated Timestamp After",
                    "required": false,
                    "default": null,
                    "description": "Record updated after specified timestamp"
                }
            ]
        },
        "notification_recipient_log_list": {
            "method": "uber.notification_recipient_log_list",
            "title": "List Notification Recipient Logs",
            "description": "This method lists notification recipient logs filtered by the specified parameters.",
            "params": [
                {
                    "param": "notification_recipient_log_id",
                    "name": "Notification Recipient Log ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "notification_message_id",
                    "name": "Notification Message ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "notification_recipient_id",
                    "name": "Notification Recipient ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "sent_to",
                    "name": "Sent To",
                    "required": false,
                    "default": null,
                    "description": "Notification transmission specific destination"
                },
                {
                    "param": "status_id",
                    "name": "Status ID",
                    "required": false,
                    "default": null,
                    "description": "Notification transmission status. Options: \n  255 = All\n  1 = Pending\n  2 = Processing\n  4 = Success\n  8 = Failure"
                },
                {
                    "param": "result",
                    "name": "Result",
                    "required": false,
                    "default": null,
                    "description": "Notification result detail"
                },
                {
                    "param": "result_ts",
                    "name": "Result Timestamp",
                    "required": false,
                    "default": null,
                    "description": "Notification transmission timestamp"
                },
                {
                    "param": "result_ts_max",
                    "name": "Result Timestamp Before",
                    "required": false,
                    "default": null,
                    "description": "Notification transmission timestamp earlier than specified timestamp"
                },
                {
                    "param": "result_ts_min",
                    "name": "Result Timestamp After",
                    "required": false,
                    "default": null,
                    "description": "Notification transmission timestamp later than specified timestamp"
                }
            ]
        },
        "notification_recipient_populate": {
            "method": "uber.notification_recipient_populate",
            "title": "Notification Recipient Populate",
            "description": "This method creates all recipient records for a notification based on existing subscriptions.",
            "params": [
                {
                    "param": "notification_id",
                    "name": "Notification ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "notification_recipient_update": {
            "method": "uber.notification_recipient_update",
            "title": "Edit a Notification Recipient",
            "description": "This method edits a notification recipient.",
            "params": [
                {
                    "param": "notification_recipient_id",
                    "name": "Notification Recipient ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Only recipients with an active status will recieve the notification.\nOptions: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "email",
                    "name": "Email",
                    "required": false,
                    "default": null,
                    "description": "Recipient email address"
                }
            ]
        },
        "notification_type_add": {
            "method": "uber.notification_type_add",
            "title": "Add a Notification Type",
            "description": "This method adds a notification type.",
            "params": [
                {
                    "param": "name",
                    "name": "Notification Type Name",
                    "required": true,
                    "default": "",
                    "description": "System name for notification type"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": "Options: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "make_replies_links",
                    "name": "Replies will open Linked Tickets",
                    "required": false,
                    "default": null,
                    "description": "Options: 1 = Yes, put replies into linked tickets; 0 = No, put replies into the main ticket."
                },
                {
                    "param": "notify_account_team",
                    "name": "Notify Account Team",
                    "required": false,
                    "default": null,
                    "description": "Notify account team. Options: 1 = Yes, 0 = No"
                },
                {
                    "param": "email_from_default",
                    "name": "Default From Address",
                    "required": false,
                    "default": "",
                    "description": "Email address used as the default for new messages"
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": 0,
                    "description": "Brand ID"
                },
                {
                    "param": "q_id",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": "Department ID used for created tickets"
                },
                {
                    "param": "assignment",
                    "name": "Ticket Assignment User ID",
                    "required": false,
                    "default": null,
                    "description": "Staff user ID of assignee for created tickets"
                },
                {
                    "param": "classification_id",
                    "name": "Ticket Classification ID",
                    "required": false,
                    "default": null,
                    "description": "Classification ID for created tickets"
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "Priority for created tickets"
                },
                {
                    "param": "impact",
                    "name": "Ticket Impact",
                    "required": false,
                    "default": null,
                    "description": "Impact for created ticketss"
                }
            ]
        },
        "notification_type_get": {
            "method": "uber.notification_type_get",
            "title": "Get Notification Type Details",
            "description": "This method retrieves the details of a notification type.",
            "params": [
                {
                    "param": "notification_type_id",
                    "name": "Notification Type ID",
                    "required": true,
                    "default": null,
                    "description": "Notification type identifier"
                }
            ]
        },
        "notification_type_list": {
            "method": "uber.notification_type_list",
            "title": "List Notification Types",
            "description": "This method lists the notification types registered.",
            "params": [
                {
                    "param": "name",
                    "name": "Notification Type Name",
                    "required": false,
                    "default": "",
                    "description": "System name for notification type"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Options: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "make_replies_links",
                    "name": "Replies will open Linked Tickets",
                    "required": false,
                    "default": null,
                    "description": "Options: 1 = Yes, put replies into linked tickets; 0 = No, put replies into the main ticket."
                },
                {
                    "param": "notify_account_team",
                    "name": "Notify Account Team",
                    "required": false,
                    "default": null,
                    "description": "Notify account team. Options: 1 = Yes, 0 = No"
                },
                {
                    "param": "email_from_default",
                    "name": "Default From Address",
                    "required": false,
                    "default": "",
                    "description": "Email address used as the default for new messages"
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": 0,
                    "description": "Brand ID"
                },
                {
                    "param": "q_id",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": "Department ID used for created tickets"
                },
                {
                    "param": "assignment",
                    "name": "Ticket Assignment User ID",
                    "required": false,
                    "default": null,
                    "description": "Staff user ID of assignee for created tickets"
                },
                {
                    "param": "classification_id",
                    "name": "Ticket Classification ID",
                    "required": false,
                    "default": null,
                    "description": "Classification ID for created tickets"
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "Priority for created tickets"
                },
                {
                    "param": "impact",
                    "name": "Ticket Impact",
                    "required": false,
                    "default": null,
                    "description": "Impact for created ticketss"
                }
            ]
        },
        "notification_type_subscriber_add": {
            "method": "uber.notification_type_subscriber_add",
            "title": "Add Subscriber to a Notification Type",
            "description": "This method adds a subscriber to notifications of a certain type.",
            "params": [
                {
                    "param": "notification_type_id",
                    "name": "Notification Type ID",
                    "required": true,
                    "default": null,
                    "description": "Notification Type"
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": "Subscriber contact ID"
                },
                {
                    "param": "person_id",
                    "name": "Admin ID",
                    "required": false,
                    "default": null,
                    "description": "Subscriber admin ID"
                },
                {
                    "param": "override_email",
                    "name": "Override email",
                    "required": false,
                    "default": "",
                    "description": "Email address to use. Overrides contact default email address."
                }
            ]
        },
        "notification_type_subscriber_delete": {
            "method": "uber.notification_type_subscriber_delete",
            "title": "Unsubscribe From a Notification Type",
            "description": "This method unsubscribes a contact or admin from notifications of a certain type.",
            "params": [
                {
                    "param": "notification_type_subscriber_id",
                    "name": "Notification Type Subscriber ID",
                    "required": false,
                    "default": null,
                    "description": "Subscription ID"
                }
            ]
        },
        "notification_type_subscriber_list": {
            "method": "uber.notification_type_subscriber_list",
            "title": "List Notification Type Subscriptions",
            "description": "This method lists notification subscriptions filtered by the parameters supplied.",
            "params": [
                {
                    "param": "notification_type_id",
                    "name": "Notification Type ID",
                    "required": false,
                    "default": null,
                    "description": "Notification Type ID"
                },
                {
                    "param": "contact_id",
                    "name": "Contact ID",
                    "required": false,
                    "default": null,
                    "description": "Subscriber Contact ID"
                },
                {
                    "param": "person_id",
                    "name": "Admin ID",
                    "required": false,
                    "default": null,
                    "description": "Subscriber Admin ID"
                },
                {
                    "param": "override_email",
                    "name": "Override email",
                    "required": false,
                    "default": null,
                    "description": "Override email address."
                },
                {
                    "param": "created_by",
                    "name": "Created By",
                    "required": false,
                    "default": null,
                    "description": "Party that created the record"
                },
                {
                    "param": "created_ts",
                    "name": "Created Timestamp",
                    "required": false,
                    "default": null,
                    "description": "Record creation time"
                },
                {
                    "param": "created_ts_max",
                    "name": "Created Timestamp Before",
                    "required": false,
                    "default": null,
                    "description": "Record created before specified timestamp"
                },
                {
                    "param": "created_ts_min",
                    "name": "Created Timestamp After",
                    "required": false,
                    "default": null,
                    "description": "Record created after specified timestamp"
                },
                {
                    "param": "updated_by",
                    "name": "Updated By",
                    "required": false,
                    "default": null,
                    "description": "Party that last updated the record"
                },
                {
                    "param": "updated_ts",
                    "name": "Updated Timestamp",
                    "required": false,
                    "default": null,
                    "description": "Record last update time"
                },
                {
                    "param": "updated_ts_max",
                    "name": "Updated Timestamp Before",
                    "required": false,
                    "default": null,
                    "description": "Record updated before specified timestamp"
                },
                {
                    "param": "updated_ts_min",
                    "name": "Updated Timestamp After",
                    "required": false,
                    "default": null,
                    "description": "Record updated after specified timestamp"
                }
            ]
        },
        "notification_type_subscriber_update": {
            "method": "uber.notification_type_subscriber_update",
            "title": "Edit a Notification Type Subscription",
            "description": "This method edits a subscription for a notification type.",
            "params": [
                {
                    "param": "notification_type_subscriber_id",
                    "name": "Notification Type Subscriber ID",
                    "required": true,
                    "default": null,
                    "description": "Notification Type Subscriber ID (subscription identifier)"
                },
                {
                    "param": "override_email",
                    "name": "Override email",
                    "required": false,
                    "default": null,
                    "description": "Email address to use. Overrides contact default email address."
                }
            ]
        },
        "notification_type_update": {
            "method": "uber.notification_type_update",
            "title": "Edit Notification Type",
            "description": "This method edits an existing notification type.",
            "params": [
                {
                    "param": "notification_type_id",
                    "name": "Notification Type ID",
                    "required": true,
                    "default": null,
                    "description": "Notification type identifier"
                },
                {
                    "param": "name",
                    "name": "Notification Type Name",
                    "required": false,
                    "default": null,
                    "description": "System name for notification type"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Options: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "make_replies_links",
                    "name": "Replies will open Linked Tickets",
                    "required": false,
                    "default": null,
                    "description": "Options: 1 = Yes, put replies into linked tickets; 0 = No, put replies into the main ticket."
                },
                {
                    "param": "notify_account_team",
                    "name": "Notify Account Team",
                    "required": false,
                    "default": null,
                    "description": "Notify account team. Options: 1 = Yes, 0 = No"
                },
                {
                    "param": "email_from_default",
                    "name": "Default From Address",
                    "required": false,
                    "default": "",
                    "description": "Email address used as the default for new messages"
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": 0,
                    "description": "Brand ID"
                },
                {
                    "param": "q_id",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": "Department ID used for created tickets"
                },
                {
                    "param": "assignment",
                    "name": "Ticket Assignment User ID",
                    "required": false,
                    "default": null,
                    "description": "Staff user ID of assignee for created tickets"
                },
                {
                    "param": "classification_id",
                    "name": "Ticket Classification ID",
                    "required": false,
                    "default": null,
                    "description": "Classification ID for created tickets"
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "Priority for created tickets"
                },
                {
                    "param": "impact",
                    "name": "Ticket Impact",
                    "required": false,
                    "default": null,
                    "description": "Impact for created ticketss"
                }
            ]
        },
        "notification_update": {
            "method": "uber.notification_update",
            "title": "Edit Notification",
            "description": "This method edits a notification.",
            "params": [
                {
                    "param": "notification_id",
                    "name": "Notification ID",
                    "required": true,
                    "default": null,
                    "description": "Notification identifier"
                },
                {
                    "param": "name",
                    "name": "Notification Name",
                    "required": false,
                    "default": null,
                    "description": "System name for notification type"
                },
                {
                    "param": "association",
                    "name": "Association",
                    "required": false,
                    "default": null,
                    "description": "An array that contains the notification's associations.\nA notification can contain multiple associations and each association will contain a list of items.\nFor each item, one or multiple clients (client_id), devices (device_id), services (service_id) and locations (facility_id) can be specified.\nExamples:\nAn association with a single item specifying a single client:\nassociation[0][items][0][clientid]=1001\nAn association with multiple items each specifying a different client:\nassociation[0][items][0][clientid]=1001&association[0][items][1][clientid]=1002\n2 associations each with a single item specifying a different client:\nassociation[0][items][0][clientid]=1001&association[1][items][0][clientid]=1002\nAn association with a single item specifying a client with a linked service:\nassociation[0][items][0][clientid]=1001&association[0][items][0][service_id]=1"
                },
                {
                    "param": "notification_type_id",
                    "name": "Notification Type ID",
                    "required": false,
                    "default": null,
                    "description": "Notification type identifier"
                },
                {
                    "param": "status_id",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Options: \n  1 = Draft\n  2 = Active\n  4 = Resolved\n  8 = Deactivated"
                },
                {
                    "param": "make_replies_links",
                    "name": "Replies will open Linked Tickets",
                    "required": false,
                    "default": null,
                    "description": "Options: 1 = Yes, put replies into linked tickets; 0 = No, put replies into the main ticket."
                },
                {
                    "param": "notify_account_team",
                    "name": "Notify Account Team",
                    "required": false,
                    "default": null,
                    "description": "Notify account team. 1 = Yes, 0 = No"
                },
                {
                    "param": "email_from_default",
                    "name": "Default From Address",
                    "required": false,
                    "default": "",
                    "description": "Email address used as the default for new messages"
                },
                {
                    "param": "q_id",
                    "name": "Ticket Department ID",
                    "required": false,
                    "default": null,
                    "description": "Department ID used for created tickets. Defaults to notification type value."
                },
                {
                    "param": "assignment",
                    "name": "Ticket Assignment User ID",
                    "required": false,
                    "default": null,
                    "description": "Staff user ID of assignee for created tickets. Defaults to notification type value."
                },
                {
                    "param": "classification_id",
                    "name": "Ticket Classification ID",
                    "required": false,
                    "default": null,
                    "description": "Classification ID for created tickets. Defaults to notification type value."
                },
                {
                    "param": "priority",
                    "name": "Ticket Priority",
                    "required": false,
                    "default": null,
                    "description": "Priority for created tickets. Defaults to notification type value."
                },
                {
                    "param": "impact",
                    "name": "Ticket Impact",
                    "required": false,
                    "default": null,
                    "description": "Impact for created tickets. Defaults to notification type value."
                }
            ]
        },
        "overdue_notice_schedules_activate": {
            "method": "uber.overdue_notice_schedules_activate",
            "title": "Activate an Invoice Overdue Notice Schedules",
            "description": "This method is used to activate an invoice overdue notice schedule.",
            "params": [
                {
                    "param": "id",
                    "name": "Invoice Overdue Notice ID",
                    "required": true,
                    "default": null,
                    "description": "Invoice overdue notice schedules id to delete."
                }
            ]
        },
        "overdue_notice_schedules_add": {
            "method": "uber.overdue_notice_schedules_add",
            "title": "Add Invoice Overdue Notice Schedules",
            "description": "This method is used to create an invoice overdue notice schedules.",
            "params": [
                {
                    "param": "name",
                    "name": "Notice Schedule Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "attach_pdf",
                    "name": "Attach PDF",
                    "required": false,
                    "default": 0,
                    "description": "Attach PDF to Notice Schedule Templates"
                },
                {
                    "param": "schedules",
                    "name": "Schedules",
                    "required": true,
                    "default": null,
                    "description": "The invoice overdue notice schedules list. it must be an array of schedule objects"
                }
            ]
        },
        "overdue_notice_schedules_assign": {
            "method": "uber.overdue_notice_schedules_assign",
            "title": "Assign an Invoice Overdue Notice Schedules",
            "description": "This method is used to set an active invoice overdue notice schedules as default for a client or for a brand.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "client_id can be a numeric clied id value or an array of client ids."
                },
                {
                    "param": "id",
                    "name": "Overdue Notice Schedules ID",
                    "required": true,
                    "default": null,
                    "description": "Invoice overdue notice schedules id to set as default for the specified client or brand. If it is set to 0 with the client_id param, the client will receive the brand default invoice overdue notices. Note that the invoice overdue notice schedules should be active."
                }
            ]
        },
        "overdue_notice_schedules_deactivate": {
            "method": "uber.overdue_notice_schedules_deactivate",
            "title": "Deactivate an Invoice Overdue Notice Schedules",
            "description": "This method is used to deactivate an invoice overdue notice schedules.",
            "params": [
                {
                    "param": "id",
                    "name": "Invoice Overdue Notice Schedules ID",
                    "required": true,
                    "default": null,
                    "description": "Invoice overdue notice schedules id to delete."
                }
            ]
        },
        "overdue_notice_schedules_delete": {
            "method": "uber.overdue_notice_schedules_delete",
            "title": "Delete an Invoice Overdue Notice Schedules",
            "description": "This method is used to delete an invoice overdue notice schedules.",
            "params": [
                {
                    "param": "id",
                    "name": "Invoice Overdue Notice ID",
                    "required": true,
                    "default": null,
                    "description": "Invoice overdue notice schedules id to delete."
                }
            ]
        },
        "overdue_notice_schedules_get": {
            "method": "uber.overdue_notice_schedules_get",
            "title": "Get Invoice Overdue Notice Schedules",
            "description": "This method is used to get an invoice overdue notice schedules.",
            "params": [
                {
                    "param": "id",
                    "name": "Overdue Notice Schedules ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "overdue_notice_schedules_list": {
            "method": "uber.overdue_notice_schedules_list",
            "title": "List Invoice Overdue Notice Schedules",
            "description": "This method is used to list invoice overdue notice schedules.",
            "params": [
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "If not specified, all invoice overdue notices will be returned. Possible values: active, inactive, all"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by. Pssible values: id, status, name, created_ts, updated_ts"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "Order direction. Possible values: ASC, DESC"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return. If not specified, all data will be returned"
                }
            ]
        },
        "overdue_notice_schedules_mute": {
            "method": "uber.overdue_notice_schedules_mute",
            "title": "Mute/Unmute Invoice Overdue Notices Schedules.",
            "description": "This method is used to mute/unmute invoice overdue notice schedules for a specific client or for the whole barnd.",
            "params": [
                {
                    "param": "mute",
                    "name": "Mute",
                    "required": true,
                    "default": null,
                    "description": "1: mute invoice overdue notice schedules. 0: unmute invoice overdue notice schedules."
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, the invoice overdue notices will be muted/unmuted for all clients of the specified brand."
                },
                {
                    "param": "client_id",
                    "name": "Client ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, the client invoice overdue notices will be muted/unmuted."
                }
            ]
        },
        "overdue_notice_schedules_update": {
            "method": "uber.overdue_notice_schedules_update",
            "title": "Update an Invoice Overdue Notice Schedules",
            "description": "This method is used to update an invoice overdue notice schedules.",
            "params": [
                {
                    "param": "id",
                    "name": "Overdue Notice Schedules ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Notice Schedule Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "attach_pdf",
                    "name": "Attach PDF",
                    "required": false,
                    "default": 0,
                    "description": "Attach PDF to Notice Schedule Templates"
                },
                {
                    "param": "schedules",
                    "name": "Schedules",
                    "required": false,
                    "default": null,
                    "description": "The invoice overdue notice schedules list. it must be an array of schedule objects"
                }
            ]
        },
        "password_reset": {
            "method": "uber.password_reset",
            "title": "Reset Password",
            "description": "Reset a user password given a valid reset code and new password.",
            "params": [
                {
                    "param": "reset_code",
                    "name": "Reset Code",
                    "required": true,
                    "default": null,
                    "description": "Password reset code previously generated by the system."
                },
                {
                    "param": "new_pass",
                    "name": "New Password",
                    "required": true,
                    "default": null,
                    "description": "New password."
                }
            ]
        },
        "plan_option_add": {
            "method": "uber.plan_option_add",
            "title": "Add Plan Option",
            "description": "This method is used to add an plan option to an existing upgrade.",
            "params": [
                {
                    "param": "pu_id",
                    "name": "Plan Upgrade ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric plan upgrade ID to add the option to."
                },
                {
                    "param": "pog_id",
                    "name": "Plan Option Group ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric plan option group ID to add the option to. Leave blank or use 0 for Ungrouped."
                },
                {
                    "param": "po_description",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the option."
                },
                {
                    "param": "po_desc",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The description of the option."
                },
                {
                    "param": "po_priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The numeric priority of where the plan option should appear in the list. Lower numbers will end up at the top of the list. Higher numbers will appear lower in the list."
                },
                {
                    "param": "po_data",
                    "name": "Extra Data",
                    "required": false,
                    "default": null,
                    "description": "Any extra data for this plan option. Must be an array of key/value pairs.\nFormat: po_data[field_name]=field_value"
                },
                {
                    "param": "pricing",
                    "name": "Pricing",
                    "required": false,
                    "default": null,
                    "description": "The pricing matrix.\nFormat:\n  pricing[currency_id][period_id][type_method]=modifier_id\n  pricing[currency_id][period_id][type]=value\n\nOptions for \"currency_id\": \n  1 = Dollar\n\nPeriod IDs can be brand specific or global.  The global options for \"period_id\" are: \n  0 = One Time Fee\n  1 = Monthly\n  3 = Quarterly\n  6 = Semi-Annually\n  12 = Annually\n\nOptions for \"type\": price_method, price, setup_method, setup, cost_method, cost, setup_cost_method, setup_cost\n\nOptions for \"modifier_id\": \n  0 = Inherit\n  1 = Override\n  2 = Modify By Amount\n  3 = Modify By Percent\n\nExample:\n  pricing[0][0][price_method]=0\n  pricing[0][0][price]=10.00\n  pricing[0][3][price_method]=1\n  pricing[0][3][price]=22.00"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalization config for this option.\nFormat: i18n[lang_id][po_description]=Serveur\nAvailable Field: po_description, po_desc"
                }
            ]
        },
        "plan_option_assign": {
            "method": "uber.plan_option_assign",
            "title": "Assign Plan Option",
            "description": "This method is used to assign and unassign a plan option to a service plan.",
            "params": [
                {
                    "param": "po_id",
                    "name": "Plan Option ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "po_val",
                    "name": "Value",
                    "required": false,
                    "default": null,
                    "description": "The value of the option."
                },
                {
                    "param": "po_data",
                    "name": "Extra Data",
                    "required": false,
                    "default": null,
                    "description": "Any extra data for this plan option in the service plan. Must be an array of key/value pairs.\nFormat: po_data[field_name]=field_value"
                },
                {
                    "param": "assign",
                    "name": "Assign",
                    "required": true,
                    "default": null,
                    "description": "Flag to either assign or unassign the plan option to the service plan.\nOptions: 1 = Assign, 0 = Unassign"
                },
                {
                    "param": "pricing",
                    "name": "Pricing",
                    "required": false,
                    "default": null,
                    "description": "The pricing matrix.\nFormat:\n  pricing[period_id][type_method]=modifier_id\n  pricing[period_id][type]=value\n\nPeriod IDs can be brand specific or global.  The global options for \"period_id\" are: \n  0 = One Time Fee\n  1 = Monthly\n  3 = Quarterly\n  6 = Semi-Annually\n  12 = Annually\n\nOptions for \"type\": price_method, price, setup_method, setup, cost_method, cost, setup_cost_method, setup_cost\n\nOptions for \"modifier_id\": \n  0 = Inherit\n  1 = Override\n  2 = Modify By Amount\n  3 = Modify By Percent\n\nExample:\n  pricing[0][price_method]=0\n  pricing[0][price]=10.00\n  pricing[3][price_method]=1\n  pricing[3][price]=22.00"
                }
            ]
        },
        "plan_option_assign_bulk": {
            "method": "uber.plan_option_assign_bulk",
            "title": "Assign Plan Options in Bulk",
            "description": "<p>This method is used to assign and/or unassign a list of plan options to a service plan.</p><p>If there is an error in the request format, the execution will stop immediately without performing any modifications to the plan options.</p><p>Otherwise, each option assignment will be executed in sequence. Each individual option assignments can be a failure or a success. See the <b>Example Output</b> bellow for response examples.</p><br />",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "plan_options",
                    "name": "Plan Options List",
                    "required": true,
                    "default": null,
                    "description": "An array of plan_option"
                }
            ]
        },
        "plan_option_group_add": {
            "method": "uber.plan_option_group_add",
            "title": "Add Plan Option Group",
            "description": "This method is used to add an plan option group to an existing plan upgrade.",
            "params": [
                {
                    "param": "pu_id",
                    "name": "Plan Upgrade ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric plan upgrade ID to add the plan option group to."
                },
                {
                    "param": "pog_name",
                    "name": "Name",
                    "required": true,
                    "default": null,
                    "description": "The name of the plan option group"
                },
                {
                    "param": "pog_desc",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The description of the plan option group"
                },
                {
                    "param": "pog_status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "The status of the plan option group.\nOptions: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "pog_priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The numeric priority of where the plan option group should appear in the list. Lower numbers will end up at the top of the list. Higher numbers will appear lower in the list."
                },
                {
                    "param": "pog_data",
                    "name": "Extra Data",
                    "required": false,
                    "default": null,
                    "description": "Any extra data for this plan option group. Must be an array of key/value pairs.\nFormat: pog_data[custom]=text"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalization config for this plan option group.\nFormat: i18n[lang_id][pog_name]=Serveur\nAvailable Field: pog_name, pog_desc"
                }
            ]
        },
        "plan_option_group_assign": {
            "method": "uber.plan_option_group_assign",
            "title": "Assign Plan Option Group",
            "description": "This method is used to assign and unassign a plan option group to a service plan.",
            "params": [
                {
                    "param": "pog_id",
                    "name": "Plan Option Group ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "pu_id",
                    "name": "Plan Upgrade ID",
                    "required": false,
                    "default": null,
                    "description": "Required if assigning the Ungrouped group."
                },
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "assign",
                    "name": "Assign",
                    "required": true,
                    "default": null,
                    "description": "Flag to either assign or unassign the plan option group to the plan.\nOptions: 1 = Assign, 0 = Unassign"
                }
            ]
        },
        "plan_option_group_list": {
            "method": "uber.plan_option_group_list",
            "title": "List Plan Option Groups",
            "description": "This method is used to list plan option groups.",
            "params": [
                {
                    "param": "pu_id",
                    "name": "Plan Upgrade ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric plan upgrade ID to fetch the option groups for"
                },
                {
                    "param": "pog_id",
                    "name": "Plan Option Group ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric plan option group ID"
                },
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric service plan ID to fetch the option groups for"
                },
                {
                    "param": "lang_id",
                    "name": "Language ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric language ID to fetch the option groups in"
                },
                {
                    "param": "include_inactive",
                    "name": "Include Inactive Items",
                    "required": false,
                    "default": 0,
                    "description": "Whether to include inactive option groups (and options, if all_options is specified).\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "exclude_empty",
                    "name": "Exclude Empty Option Groups",
                    "required": false,
                    "default": 0,
                    "description": "Whether to exclude empty option groups that do not have any options associated with them.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "all_options",
                    "name": "Include Options",
                    "required": false,
                    "default": 0,
                    "description": "Whether to include options in the list.\nOptions: 1 = Yes, 0 = No"
                }
            ]
        },
        "plan_option_group_update": {
            "method": "uber.plan_option_group_update",
            "title": "Update Service Plan Option Group",
            "description": "This method is used to update an option group for an existing service plan.",
            "params": [
                {
                    "param": "pog_id",
                    "name": "Plan Option Group ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric plan option group ID to update."
                },
                {
                    "param": "pog_name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the plan option group"
                },
                {
                    "param": "pog_desc",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The description of the plan option group"
                },
                {
                    "param": "pog_status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "The status of the plan option group.\nOptions: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "pog_priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The numeric priority of where the plan option group should appear in the list. Lower numbers will end up at the top of the list. Higher numbers will appear lower in the list."
                },
                {
                    "param": "pog_data",
                    "name": "Extra Data",
                    "required": false,
                    "default": null,
                    "description": "Any extra data for this plan option group. Must be an array of key/value pairs.\nFormat: pog_data[custom]=text"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalization config for this plan option group.\nFormat: i18n[lang_id][pog_name]=Serveur\nAvailable Field: pog_name, pog_desc"
                }
            ]
        },
        "plan_option_list": {
            "method": "uber.plan_option_list",
            "title": "List Plan Options",
            "description": "This method is used to list plan options.",
            "params": [
                {
                    "param": "po_id",
                    "name": "Plan Option ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric plan option ID"
                },
                {
                    "param": "pu_id",
                    "name": "Plan Upgrade ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric plan upgrade ID to fetch the options for"
                },
                {
                    "param": "pog_id",
                    "name": "Plan Option Group ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric plan upgrade ID to fetch the options for"
                },
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric service plan ID to fetch the options for"
                },
                {
                    "param": "lang_id",
                    "name": "Language ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric language ID to fetch the options in"
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "If specified, return the pricing of the option for the particular brand"
                },
                {
                    "param": "include_inactive",
                    "name": "Include Inactive Items",
                    "required": false,
                    "default": 0,
                    "description": "Whether to include inactive options in the list.\nOptions: 1 = Yes, 0 = No"
                }
            ]
        },
        "plan_option_update": {
            "method": "uber.plan_option_update",
            "title": "Update Plan Option",
            "description": "This method is used to update a plan option.",
            "params": [
                {
                    "param": "po_id",
                    "name": "Plan Option ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric plan option ID to update."
                },
                {
                    "param": "pog_id",
                    "name": "Plan Option Group ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric plan option group ID of the plan option. Use 0 for Ungrouped."
                },
                {
                    "param": "po_description",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the option."
                },
                {
                    "param": "po_desc",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The description of the option."
                },
                {
                    "param": "po_priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The numeric priority of where the plan option should appear in the list. Lower numbers will end up at the top of the list. Higher numbers will appear lower in the list."
                },
                {
                    "param": "po_data",
                    "name": "Extra Data",
                    "required": false,
                    "default": null,
                    "description": "Any extra data for this plan option. Must be an array of key/value pairs.\nFormat: po_data[field_name]=field_value"
                },
                {
                    "param": "pricing",
                    "name": "Pricing",
                    "required": false,
                    "default": null,
                    "description": "The pricing matrix.\nFormat:\n  pricing[currency_id][period_id][type_method]=modifier_id\n  pricing[currency_id][period_id][type]=value\n\nOptions for \"currency_id\": \n  1 = Dollar\n\nPeriod IDs can be brand specific or global.  The global options for \"period_id\" are: \n  0 = One Time Fee\n  1 = Monthly\n  3 = Quarterly\n  6 = Semi-Annually\n  12 = Annually\n\nOptions for \"type\": price_method, price, setup_method, setup, cost_method, cost, setup_cost_method, setup_cost\n\nOptions for \"modifier_id\": \n  0 = Inherit\n  1 = Override\n  2 = Modify By Amount\n  3 = Modify By Percent\n\nExample:\n  pricing[0][0][price_method]=0\n  pricing[0][0][price]=10.00\n  pricing[0][3][price_method]=1\n  pricing[0][3][price]=22.00"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalization config for this option.\nFormat: i18n[lang_id][po_description]=Serveur\nAvailable Field: po_description, po_desc"
                }
            ]
        },
        "plan_upgrade_add": {
            "method": "uber.plan_upgrade_add",
            "title": "Add Plan Upgrade",
            "description": "This method is used to add a plan upgrade.",
            "params": [
                {
                    "param": "pu_name",
                    "name": "Name",
                    "required": true,
                    "default": null,
                    "description": "The name of the plan upgrade"
                },
                {
                    "param": "variable",
                    "name": "Variable",
                    "required": true,
                    "default": null,
                    "description": "The API variable (machine name) of the plan upgrade"
                },
                {
                    "param": "pug_id",
                    "name": "Plan Upgrade Group ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric plan upgrade group id to add the upgrade to. Leave blank or use 0 for Ungrouped"
                },
                {
                    "param": "pu_desc",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The description of the plan upgrade"
                },
                {
                    "param": "pu_status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "The status of the plan upgrade.\nOptions: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "pu_priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The numeric priority of where the plan upgrade should appear in the list. Lower numbers will end up at the top of the list. Higher numbers will appear lower in the list."
                },
                {
                    "param": "pu_data",
                    "name": "Extra Data",
                    "required": false,
                    "default": null,
                    "description": "Any extra data for this upgrade. Must be an array of key/value pairs.\nFormat: pu_data[custom]=text"
                },
                {
                    "param": "invoice_hide",
                    "name": "Client Visibility",
                    "required": false,
                    "default": 0,
                    "description": "Whether to hide this upgrade on client invoices.\nOptions: 0 = Visible to client, 2 = Hidden from client, 1 = Hidden when $ 0.00"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalization config for this upgrade.\nFormat: i18n[lang_id][pu_name]=Serveur\nAvailable Field: pu_name, pu_desc"
                }
            ]
        },
        "plan_upgrade_assign": {
            "method": "uber.plan_upgrade_assign",
            "title": "Assign Plan Upgrade",
            "description": "This method is used to assign and unassign a plan upgrade to a service plan.",
            "params": [
                {
                    "param": "pu_id",
                    "name": "Plan Upgrade ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "assign",
                    "name": "Assign",
                    "required": true,
                    "default": null,
                    "description": "Flag to either assign or unassign the plan upgrade to the plan.\nOptions: 1 = Assign, 0 = Unassign"
                }
            ]
        },
        "plan_upgrade_group_add": {
            "method": "uber.plan_upgrade_group_add",
            "title": "Add Plan Upgrade Group",
            "description": "This method is used to add a plan upgrade group.",
            "params": [
                {
                    "param": "pug_name",
                    "name": "Name",
                    "required": true,
                    "default": null,
                    "description": "The name of the new upgrade group"
                },
                {
                    "param": "pug_desc",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The description of the new upgrade group"
                },
                {
                    "param": "pug_status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "The status of the upgrade group, 1 = Active, 0 = Inactive"
                },
                {
                    "param": "pug_priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The numeric priority of where the plan upgrade group should appear in the list. Lower numbers will end up at the top of the list. Higher numbers will appear lower in the list."
                },
                {
                    "param": "pug_data",
                    "name": "Extra Data",
                    "required": false,
                    "default": null,
                    "description": "Any extra data for this upgrade group. Must be an array of key/value pairs.\nFormat: pug_data[custom]=text"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalization config for this upgrade group.\nFormat: i18n[lang_id][pug_name]=Serveur\nAvailable Field: pug_name, pug_desc"
                }
            ]
        },
        "plan_upgrade_group_assign": {
            "method": "uber.plan_upgrade_group_assign",
            "title": "Assign Plan Upgrade Group",
            "description": "This method is used to assign and unassign a plan upgrade group to a service plan.",
            "params": [
                {
                    "param": "pug_id",
                    "name": "Plan Upgrade Group ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "assign",
                    "name": "Assign",
                    "required": true,
                    "default": null,
                    "description": "Flag to either assign or unassign the plan upgrade group to the plan.\nOptions: 1 = Assign, 0 = Unassign"
                }
            ]
        },
        "plan_upgrade_group_list": {
            "method": "uber.plan_upgrade_group_list",
            "title": "List Plan Upgrade Groups",
            "description": "This method is used to list plan upgrade groups.",
            "params": [
                {
                    "param": "pug_id",
                    "name": "Plan Upgrade Group ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric plan upgrade group ID, use 0 for Ungrouped"
                },
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric service plan ID to fetch the upgrade groups for"
                },
                {
                    "param": "lang_id",
                    "name": "Language ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric language ID to fetch the upgrade groups in"
                },
                {
                    "param": "include_inactive",
                    "name": "Include Inactive Items",
                    "required": false,
                    "default": 0,
                    "description": "Whether to include inactive upgrade groups (and inactive upgrades, option groups, and options, if all_options is specified).\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "exclude_empty",
                    "name": "Exclude Empty Upgrade Groups",
                    "required": false,
                    "default": 0,
                    "description": "Whether to exclude empty upgrade groups that do not have any options associated with them.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "all_options",
                    "name": "Include Options",
                    "required": false,
                    "default": 0,
                    "description": "Whether to include upgrades, option groups, and options in the list.\nOptions: 1 = Yes, 0 = No"
                }
            ]
        },
        "plan_upgrade_group_update": {
            "method": "uber.plan_upgrade_group_update",
            "title": "Update Plan Upgrade Group",
            "description": "This method is used to update a plan upgrade group.",
            "params": [
                {
                    "param": "pug_id",
                    "name": "Plan Upgrade Group ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "pug_name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the upgrade group"
                },
                {
                    "param": "pug_desc",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The description of the upgrade group"
                },
                {
                    "param": "pug_status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "Status of the upgrade group.\nOptions: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "pug_priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The numeric priority of where the plan upgrade group should appear in the list. Lower numbers will end up at the top of the list. Higher numbers will appear lower in the list."
                },
                {
                    "param": "pug_data",
                    "name": "Extra Data",
                    "required": false,
                    "default": null,
                    "description": "Any extra data for this upgrade group. Must be an array of key/value pairs.\nFormat: pug_data[custom]=text"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalization config for this upgrade group.\nFormat: i18n[lang_id][pug_name]=Serveur\nAvailable Field: pug_name, pug_desc"
                }
            ]
        },
        "plan_upgrade_list": {
            "method": "uber.plan_upgrade_list",
            "title": "List Plan Upgrades",
            "description": "This method is used to list plan upgrades.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric service plan id to fetch the upgrades for"
                },
                {
                    "param": "lang_id",
                    "name": "Language ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric language id to fetch the upgrades in"
                },
                {
                    "param": "pug_id",
                    "name": "Plan Upgrade Group ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric upgrade group id to fetch the upgrades for"
                },
                {
                    "param": "pu_id",
                    "name": "Plan Upgrade ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric plan upgrade id to fetch"
                },
                {
                    "param": "include_inactive",
                    "name": "Include Inactive Items",
                    "required": false,
                    "default": 0,
                    "description": "Whether to include inactive upgrades (and inactive option groups, and options, if all_options is specified).\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "exclude_empty",
                    "name": "Exclude Empty Upgrades",
                    "required": false,
                    "default": 0,
                    "description": "Whether to exclude empty upgrades that don't have any options associated with them.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "all_options",
                    "name": "Include Option Groups and Options",
                    "required": false,
                    "default": 0,
                    "description": "Whether to include option groups, and options in the list.\nOptions: 1 = Yes, 0 = No"
                }
            ]
        },
        "plan_upgrade_update": {
            "method": "uber.plan_upgrade_update",
            "title": "Update Service Plan Upgrade",
            "description": "This method is used to update an existing upgrade on an existing service plan.",
            "params": [
                {
                    "param": "pu_id",
                    "name": "Plan Upgrade ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric plan upgrade id to update."
                },
                {
                    "param": "pug_id",
                    "name": "Plan Upgrade Group ID",
                    "required": false,
                    "default": null,
                    "description": "The numeric plan upgrade group id to add the upgrade to. Use 0 for Ungrouped"
                },
                {
                    "param": "pu_name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "The name of the plan upgrade"
                },
                {
                    "param": "variable",
                    "name": "Variable",
                    "required": false,
                    "default": null,
                    "description": "The API variable (machine name) of the plan upgrade"
                },
                {
                    "param": "pu_desc",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "The description of the plan upgrade"
                },
                {
                    "param": "pu_status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "The status of the plan upgrade.\nOptions: 1 = Active, 0 = Inactive"
                },
                {
                    "param": "pu_priority",
                    "name": "Priority",
                    "required": false,
                    "default": null,
                    "description": "The numeric priority of where the plan upgrade should appear in the list. Lower numbers will end up at the top of the list. Higher numbers will appear lower in the list."
                },
                {
                    "param": "invoice_hide",
                    "name": "Client Visibility",
                    "required": false,
                    "default": 0,
                    "description": "Whether to hide this upgrade on client invoices.\nOptions: 0 = Visible to client, 2 = Hidden from client, 1 = Hidden when $ 0.00"
                },
                {
                    "param": "pu_data",
                    "name": "Extra Data",
                    "required": false,
                    "default": null,
                    "description": "Any extra data for this upgrade. Must be an array of key/value pairs.\nFormat: pu_data[custom]=text"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalization config for this upgrade.\nFormat: i18n[lang_id][pu_name]=Serveur\nAvailable Field: pu_name, pu_desc"
                }
            ]
        },
        "quick_stats": {
            "method": "uber.quick_stats",
            "title": "Get Quick System Stats",
            "description": "This method is used to get a quick system overview, as seen in the top bar of the admin interface.",
            "params": [
                {
                    "param": "when",
                    "name": "Timestamp",
                    "required": false,
                    "default": "midnight",
                    "description": "Start time for stats"
                }
            ]
        },
        "quick_stats_detail": {
            "method": "uber.quick_stats_detail",
            "title": "Get Detailed System Stats",
            "description": "This method is used to provide more detailed information on various system stats.",
            "params": [
                {
                    "param": "stat_name",
                    "name": "Statistic to Return",
                    "required": true,
                    "default": null,
                    "description": "Possible fields are: messages, support_new, client_new, money, refund, new_orders, active_orders"
                },
                {
                    "param": "when",
                    "name": "Timestamp",
                    "required": false,
                    "default": "midnight",
                    "description": "Start time for stats"
                }
            ]
        },
        "rate_plan_add": {
            "method": "uber.rate_plan_add",
            "title": "Add a Rate Plan",
            "description": "This method is used to add a rate plan",
            "params": [
                {
                    "param": "name",
                    "name": "Rate Plan Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contract_terms",
                    "name": "Contract Terms",
                    "required": false,
                    "default": null,
                    "description": "An array of contract terms to be associated with the rate plan, the index of each element should be the contract term ID and the value should be 1 (e.g. contract_terms[8]=1 contract_terms[2]=1)"
                },
                {
                    "param": "facilities",
                    "name": "Facilities",
                    "required": false,
                    "default": null,
                    "description": "An array of facilities to be associated with the rate plan, the index of each element should be the facility ID and the value should be 1 (e.g. facilities[2]=1 facilities[4]=1)"
                },
                {
                    "param": "data",
                    "name": "Data",
                    "required": false,
                    "default": null,
                    "description": "An array of data values to be associated with the rate plan (e.g. data[fieldname]=fieldvalue)"
                }
            ]
        },
        "rate_plan_get": {
            "method": "uber.rate_plan_get",
            "title": "Get Rate Plan Details",
            "description": "This method is used to get the details of a specified rate plan",
            "params": [
                {
                    "param": "rate_plan_id",
                    "name": "Rate Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "include_inactive",
                    "name": "Include Inactive Items",
                    "required": false,
                    "default": 0,
                    "description": "Flag to include inactive plans, contract terms, facilities and upgrades\nOptions:\n  1 = Yes,\n  0 = No"
                }
            ]
        },
        "rate_plan_list": {
            "method": "uber.rate_plan_list",
            "title": "List Rate Plans",
            "description": "This method is used to list rate plans",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "1 = Active Rate Plans, 0 =  Inactive Rate Plans"
                }
            ]
        },
        "rate_plan_option_add": {
            "method": "uber.rate_plan_option_add",
            "title": "Add a Plan Option to a Rate Plan",
            "description": "This method is used to add an plan option to a rate plan",
            "params": [
                {
                    "param": "rate_plan_id",
                    "name": "Rate Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "po_id",
                    "name": "Plan Option ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": "Options: \n  1 = Active\n  0 = Inactive"
                },
                {
                    "param": "data",
                    "name": "Data",
                    "required": false,
                    "default": null,
                    "description": "An array of data values to be associated with the rate plan option (e.g. data[fieldname]=fieldvalue)"
                },
                {
                    "param": "pricing",
                    "name": "Pricing",
                    "required": false,
                    "default": null,
                    "description": "The pricing matrix.\nFormat:\n  pricing[period_id][type_method]=modifier_id\n  pricing[period_id][type]=value\n\nPeriod IDs can be brand specific or global.  The global options for \"period_id\" are: \n  0 = One Time Fee\n  1 = Monthly\n  3 = Quarterly\n  6 = Semi-Annually\n  12 = Annually\n\nOptions for \"type\": price_method, price, setup_method, setup, cost_method, cost, setup_cost_method, setup_cost\n\nOptions for \"modifier_id\": \n  0 = Inherit\n  1 = Override\n  2 = Modify By Amount\n  3 = Modify By Percent\n\nExample:\n  pricing[0][price_method]=0\n  pricing[0][price]=10.00\n  pricing[3][price_method]=1\n  pricing[3][price]=22.00"
                }
            ]
        },
        "rate_plan_option_get": {
            "method": "uber.rate_plan_option_get",
            "title": "Get Rate Plan Option Details",
            "description": "This method is used to get the details of a specified rate plan option",
            "params": [
                {
                    "param": "rate_plan_option_id",
                    "name": "Rate Plan Option ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "include_option_info",
                    "name": "Include Option Info Flag",
                    "required": false,
                    "default": null,
                    "description": "Boolean flag to include the plan option information in the return"
                }
            ]
        },
        "rate_plan_option_update": {
            "method": "uber.rate_plan_option_update",
            "title": "Update a Plan Option in a Rate Plan",
            "description": "This method is used to update a plan option in a rate plan",
            "params": [
                {
                    "param": "rate_plan_option_id",
                    "name": "Rate Plan Option ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": "Options: \n  1 = Active\n  0 = Inactive"
                },
                {
                    "param": "data",
                    "name": "Data",
                    "required": false,
                    "default": null,
                    "description": "An array of data values to be associated with the rate plan option (e.g. data[fieldname]=fieldvalue)"
                },
                {
                    "param": "delete_data",
                    "name": "Delete Data",
                    "required": false,
                    "default": null,
                    "description": "An array of data values to be deleted from the rate plan option, the index of each element should be the data name and the value should be 1  (e.g. delete_data[fieldname]=1)"
                },
                {
                    "param": "pricing",
                    "name": "Pricing",
                    "required": false,
                    "default": null,
                    "description": "The pricing matrix.\nFormat:\n  pricing[period_id][type_method]=modifier_id\n  pricing[period_id][type]=value\n\nPeriod IDs can be brand specific or global.  The global options for \"period_id\" are: \n  0 = One Time Fee\n  1 = Monthly\n  3 = Quarterly\n  6 = Semi-Annually\n  12 = Annually\n\nOptions for \"type\": price_method, price, setup_method, setup, cost_method, cost, setup_cost_method, setup_cost\n\nOptions for \"modifier_id\": \n  0 = Inherit\n  1 = Override\n  2 = Modify By Amount\n  3 = Modify By Percent\n\nExample:\n  pricing[0][price_method]=0\n  pricing[0][price]=10.00\n  pricing[3][price_method]=1\n  pricing[3][price]=22.00"
                }
            ]
        },
        "rate_plan_service_plan_add": {
            "method": "uber.rate_plan_service_plan_add",
            "title": "Add a Service Plan to a Rate Plan",
            "description": "This method is used to add a service plan to a rate plan",
            "params": [
                {
                    "param": "rate_plan_id",
                    "name": "Rate Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "plan_id",
                    "name": "Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "pricing",
                    "name": "Pricing",
                    "required": false,
                    "default": null,
                    "description": "The pricing matrix.\nFormat:\n  pricing[period_id][type_method]=modifier_id\n  pricing[period_id][type]=value\n\nPeriod IDs can be brand specific or global.  The global options for \"period_id\" are: \n  0 = One Time Fee\n  1 = Monthly\n  3 = Quarterly\n  6 = Semi-Annually\n  12 = Annually\n\nOptions for \"type\": price_method, price, setup_method, setup, cost_method, cost, setup_cost_method, setup_cost\n\nOptions for \"modifier_id\": \n  0 = Inherit\n  1 = Override\n  2 = Modify By Amount\n  3 = Modify By Percent\n\nExample:\n  pricing[0][price_method]=0\n  pricing[0][price]=10.00\n  pricing[3][price_method]=1\n  pricing[3][price]=22.00"
                }
            ]
        },
        "rate_plan_service_plan_get": {
            "method": "uber.rate_plan_service_plan_get",
            "title": "Get a Service Plan Detail in a Rate Plan",
            "description": "This method is used to get a service plan detail in a rate plan",
            "params": [
                {
                    "param": "rate_plan_id",
                    "name": "Rate Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "plan_id",
                    "name": "Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "rate_plan_service_plan_update": {
            "method": "uber.rate_plan_service_plan_update",
            "title": "Update a Service Plan in a Rate Plan",
            "description": "This method is used to update a service plan in a rate plan",
            "params": [
                {
                    "param": "rate_plan_id",
                    "name": "Rate Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "plan_id",
                    "name": "Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": ""
                },
                {
                    "param": "pricing",
                    "name": "Pricing",
                    "required": false,
                    "default": null,
                    "description": "The pricing matrix.\nFormat:\n  pricing[period_id][type_method]=modifier_id\n  pricing[period_id][type]=value\n\nPeriod IDs can be brand specific or global.  The global options for \"period_id\" are: \n  0 = One Time Fee\n  1 = Monthly\n  3 = Quarterly\n  6 = Semi-Annually\n  12 = Annually\n\nOptions for \"type\": price_method, price, setup_method, setup, cost_method, cost, setup_cost_method, setup_cost\n\nOptions for \"modifier_id\": \n  0 = Inherit\n  1 = Override\n  2 = Modify By Amount\n  3 = Modify By Percent\n\nExample:\n  pricing[0][price_method]=0\n  pricing[0][price]=10.00\n  pricing[3][price_method]=1\n  pricing[3][price]=22.00"
                }
            ]
        },
        "rate_plan_update": {
            "method": "uber.rate_plan_update",
            "title": "Update a Rate Plan",
            "description": "This method is used to update a rate plan",
            "params": [
                {
                    "param": "rate_plan_id",
                    "name": "Rate Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Rate Plan Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "contract_terms",
                    "name": "Contract Terms",
                    "required": false,
                    "default": null,
                    "description": "An array of contract terms to be associated with the rate plan, the index of each element should be the contract term ID and the value should be 1 (e.g. contract_terms[8]=1 contract_terms[2]=1)"
                },
                {
                    "param": "facilities",
                    "name": "Facilities",
                    "required": false,
                    "default": null,
                    "description": "An array of facilities to be associated with the rate plan, the index of each element should be the facility ID and the value should be 1 (e.g. facilities[2]=1 facilities[4]=1)"
                },
                {
                    "param": "data",
                    "name": "Data",
                    "required": false,
                    "default": null,
                    "description": "An array of data values to be associated with the rate plan (e.g. data[fieldname]=fieldvalue)"
                },
                {
                    "param": "delete_contract_terms",
                    "name": "Delete Contract Terms",
                    "required": false,
                    "default": null,
                    "description": "An array of contract terms to be deleted from the rate plan, the index of each element should be the contract term ID and the value should be 1 (e.g. delete_contract_terms[8]=1 delete_contract_terms[2]=1)"
                },
                {
                    "param": "delete_facilities",
                    "name": "Delete Facilities",
                    "required": false,
                    "default": null,
                    "description": "An array of facilities to be deleted from the rate plan, the index of each element should be the facility ID and the value should be 1 (e.g. delete_facilities[2]=1 delete_facilities[4]=1)"
                },
                {
                    "param": "delete_data",
                    "name": "Delete Data",
                    "required": false,
                    "default": null,
                    "description": "An array of data values to be deleted from the rate plan, the index of each element should be the data name and the value should be 1  (e.g. delete_data[fieldname]=1)"
                }
            ]
        },
        "service_module_list": {
            "method": "uber.service_module_list",
            "title": "List Service Modules",
            "description": "This method is used to list all available service modules.",
            "params": [
                {
                    "param": "module",
                    "name": "Service Module",
                    "required": false,
                    "default": null,
                    "description": "The name of a service module to filter the list on"
                }
            ]
        },
        "service_plan_activate": {
            "method": "uber.service_plan_activate",
            "title": "Activate Service Plan",
            "description": "This method is used to activate a service plan.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric service plan ID to activate"
                }
            ]
        },
        "service_plan_add": {
            "method": "uber.service_plan_add",
            "title": "Add Service Plan",
            "description": "This method is used to add a new service plan.",
            "params": [
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "The brand to associate the service plan with"
                },
                {
                    "param": "title",
                    "name": "Service Plan Title",
                    "required": true,
                    "default": null,
                    "description": "The title of the service plan"
                },
                {
                    "param": "code",
                    "name": "Service Plan Code",
                    "required": true,
                    "default": null,
                    "description": "The code of the service plan. Must be unique per brand"
                },
                {
                    "param": "category",
                    "name": "Category",
                    "required": false,
                    "default": null,
                    "description": "The service plan category"
                },
                {
                    "param": "api_include",
                    "name": "Include in API",
                    "required": false,
                    "default": 1,
                    "description": "Whether to include in the API output.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "allow_quotes",
                    "name": "Allow Quoting",
                    "required": false,
                    "default": 0,
                    "description": "Whether to allow admins to create quotes of this service plan for clients.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "qbaccount",
                    "name": "Quickbooks Account",
                    "required": false,
                    "default": null,
                    "description": "The QuickBooks account to link this service plan with"
                },
                {
                    "param": "period",
                    "name": "Default Billing Period",
                    "required": false,
                    "default": null,
                    "description": "An integer representing the default billing period. Options: \n  one_time = 0\n  monthly = 1\n  quarterly = 3\n  semi = 6\n  annual = 12"
                },
                {
                    "param": "setup_qs",
                    "name": "Setup Quantity Sensitive",
                    "required": false,
                    "default": 1,
                    "description": "Whether the setup fee is a multiplied by the quantity.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "bill_type",
                    "name": "Default Billing Type",
                    "required": false,
                    "default": 1,
                    "description": "Whether to bill by month or by period.\nOptions: 1 = By Month, 0 = By Period"
                },
                {
                    "param": "auto_charge",
                    "name": "Automatically Charge",
                    "required": false,
                    "default": 0,
                    "description": "Whether to automatically charge clients for this service.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "auto_prorate",
                    "name": "Automatically Prorate",
                    "required": false,
                    "default": 0,
                    "description": "Whether to automatically prorate to the service.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "post_renew",
                    "name": "Post Renew",
                    "required": false,
                    "default": 0,
                    "description": "Whether to bill in arrears for this service.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "bill_prior",
                    "name": "Bill in Advance",
                    "required": false,
                    "default": 0,
                    "description": "Whether to bill the service up to 31 days earlier based on the client's billing configuration\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "default_quantity",
                    "name": "Default Quantity",
                    "required": false,
                    "default": 1,
                    "description": "The default quantity when creating service packs"
                },
                {
                    "param": "auto_suspend",
                    "name": "Auto Suspend",
                    "required": false,
                    "default": null,
                    "description": "The number of days to wait before suspending the service for non-payment. Leave blank or 0 for disabled"
                },
                {
                    "param": "auto_cancel",
                    "name": "Auto Cancel",
                    "required": false,
                    "default": null,
                    "description": "The number of days to wait before canceling the service for non-payment. Leave blank or 0 for disabled"
                },
                {
                    "param": "hide_upgrades",
                    "name": "Hide Upgrades",
                    "required": false,
                    "default": 0,
                    "description": "Whether to hide upgrades from clients on their invoice and within Ubersmith.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "zero_invoice",
                    "name": "Invoice when Zero",
                    "required": false,
                    "default": 0,
                    "description": "Whether the service should be included on invoices when the cost is zero.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "welcome_send",
                    "name": "Send Welcome Letter",
                    "required": false,
                    "default": 0,
                    "description": "Whether to send a welcome letter to client on service pack creation.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "welcome_email_from",
                    "name": "Welcome Letter From",
                    "required": false,
                    "default": null,
                    "description": "The email address that the welcome letter should come from"
                },
                {
                    "param": "welcome_subject",
                    "name": "Welcome Letter Subject",
                    "required": false,
                    "default": null,
                    "description": "The subject of the welcome letter email"
                },
                {
                    "param": "welcome_body",
                    "name": "Welcome Letter Body",
                    "required": false,
                    "default": null,
                    "description": "The body of the welcome letter email. Should be plain text, and allows for variable substitutions such as ##first_name##. Check Settings for the full list of valid variable substitutions."
                },
                {
                    "param": "tax_situs_code",
                    "name": "Tax Situs Rule Code (US/Canada)",
                    "required": false,
                    "default": null,
                    "description": "The Tax Situs rule code to use (US/Canada). Check the Tax Engine Options under Settings > Service Plans > {plan} to see a full list of rule codes."
                },
                {
                    "param": "tax_situs_code_world",
                    "name": "Tax Situs Rule Code (Non US/Canada)",
                    "required": false,
                    "default": null,
                    "description": "The Tax Situs rule code to use (Non US/Canada). Check the Tax Engine Options under Settings > Service Plans > {plan} to see a full list of rule codes."
                },
                {
                    "param": "tax_trans_type_code",
                    "name": "Tax Transaction Type Code",
                    "required": false,
                    "default": null,
                    "description": "The Tax Transaction type code to use. Check the Tax Engine Options under Settings > Service Plans > {plan} to see a full list of type codes."
                },
                {
                    "param": "plan_data",
                    "name": "Data",
                    "required": false,
                    "default": null,
                    "description": "An array of data values to be associated with the service plan.\nFormat: plan_data[fieldname]=fieldvalue"
                },
                {
                    "param": "pricing",
                    "name": "Pricing",
                    "required": false,
                    "default": null,
                    "description": "The pricing matrix.\nFormat:\n  pricing[period_id][type_method]=modifier_id\n  pricing[period_id][type]=value\n\nPeriod IDs can be brand specific or global.  The global options for \"period_id\" are: \n  0 = One Time Fee\n  1 = Monthly\n  3 = Quarterly\n  6 = Semi-Annually\n  12 = Annually\n\nOptions for \"type\": price_method, price, setup_method, setup, cost_method, cost, setup_cost_method, setup_cost\n\nOptions for \"modifier_id\": \n  0 = Inherit\n  1 = Override\n  2 = Modify By Amount\n  3 = Modify By Percent\n\nExample:\n  pricing[0][price_method]=0\n  pricing[0][price]=10.00\n  pricing[3][price_method]=1\n  pricing[3][price]=22.00"
                },
                {
                    "param": "taxes",
                    "name": "Taxes",
                    "required": false,
                    "default": null,
                    "description": "The tax rates to use for this service plan. Usable tax_id can be found in the Manage Tax Rates table. The value sets whether to apply the given tax rate to the fee type.\nFormat: taxes[service][{tax_id}]=1, taxes[setup][{tax_id}]=0\nAvailable Type: service, setup"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this service plan. Substitute lang_id with the numeric language id.\nFormat: i18n[lang_id][title]=Colo\nAvailable Field: title, category, welcome_subject, welcome_body"
                }
            ]
        },
        "service_plan_copy": {
            "method": "uber.service_plan_copy",
            "title": "Copy Service Plan",
            "description": "This method is used to copy a service plan to a new service plan.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric service plan id to copy"
                },
                {
                    "param": "title",
                    "name": "Service Plan Title",
                    "required": true,
                    "default": null,
                    "description": "The title of the new, copied service plan"
                },
                {
                    "param": "code",
                    "name": "Service Plan Code",
                    "required": true,
                    "default": null,
                    "description": "The code of the new, copied service plan. Must be unique per brand."
                },
                {
                    "param": "class_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": "The brand to associate the new, copied service plan with"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for the new, copied service plan. Substitute lang_id with the numeric language id.\nFormat: i18n[lang_id][title]=Colo\nAvailable Field: title, category, welcome_subject, welcome_body"
                }
            ]
        },
        "service_plan_deactivate": {
            "method": "uber.service_plan_deactivate",
            "title": "Deactivate Service Plan",
            "description": "This method is used to deactivate a service plan.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric service plan ID to deactivate"
                }
            ]
        },
        "service_plan_get": {
            "method": "uber.service_plan_get",
            "title": "Get Service Plan Details",
            "description": "This method is used to get the details of a specified service plan.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "service_plan_list": {
            "method": "uber.service_plan_list",
            "title": "List Service Plans",
            "description": "This method is used to get a list of service plans.",
            "params": [
                {
                    "param": "code",
                    "name": "Service Plan Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "active",
                    "name": "Active",
                    "required": false,
                    "default": "1",
                    "description": "1 = Active Plans, 0 = Deactivated Plans, 2 = All Plans"
                },
                {
                    "param": "qblistid",
                    "name": "Quick Book List ID",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "service_plan_metadata_list": {
            "method": "uber.service_plan_metadata_list",
            "title": "List Service Plan Default Custom Fields",
            "description": "This method is used to list an existing service plan's default custom fields.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric service plan id to update the default custom field values for"
                }
            ]
        },
        "service_plan_metadata_update": {
            "method": "uber.service_plan_metadata_update",
            "title": "Update Service Plan Custom Fields",
            "description": "This method is used to update an existing service plan's default custom fields.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric service plan id to update the default custom field values for"
                },
                {
                    "param": "metadata",
                    "name": "Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "An array of custom field defaults to update.\nFormat: metadata[api_variable]=default"
                },
                {
                    "param": "metadata_applicable",
                    "name": "Applicable Custom Fields",
                    "required": false,
                    "default": null,
                    "description": "An array of custom field applicable settings to update.\nFormat: applicable[api_variable]=1 or applicable[api_variable]=0"
                }
            ]
        },
        "service_plan_module_add": {
            "method": "uber.service_plan_module_add",
            "title": "Add Service Plan Service Module",
            "description": "This method is used to add a service module to an existing service plan.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric service plan id to add the service module to"
                },
                {
                    "param": "module",
                    "name": "Module",
                    "required": true,
                    "default": null,
                    "description": "The machine name of the service module. Should be one of the service modules available from the method uber.service_module_list"
                },
                {
                    "param": "enabled",
                    "name": "Enabled",
                    "required": true,
                    "default": 1,
                    "description": "Whether the service module should be enabled or not.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "client_access",
                    "name": "Client Access",
                    "required": false,
                    "default": 0,
                    "description": "The client access level for this service module.\nOptions: 0 = No Access, 1 = View, 2 = Edit"
                },
                {
                    "param": "config",
                    "name": "Config",
                    "required": false,
                    "default": null,
                    "description": "An array of config items for the service module. Check uber.service_module_list for a full list of config options.\nFormat: config[name]=value"
                }
            ]
        },
        "service_plan_module_delete": {
            "method": "uber.service_plan_module_delete",
            "title": "Delete Service Plan Service Module",
            "description": "This method is used to delete a service module from an existing service plan.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric service plan id to add the service module to"
                },
                {
                    "param": "service_module_id",
                    "name": "Service Module ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric service plan service_module_id to delete, available from the uber.service_plan_module_list method"
                }
            ]
        },
        "service_plan_module_list": {
            "method": "uber.service_plan_module_list",
            "title": "List Service Plan Service Modules",
            "description": "This method is used to list an existing service plan's service modules.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric service plan id to update the default custom field values for"
                }
            ]
        },
        "service_plan_module_update": {
            "method": "uber.service_plan_module_update",
            "title": "Update Service Plan Service Module",
            "description": "This method is used to update a service module on an existing service plan.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric service plan ID"
                },
                {
                    "param": "service_module_id",
                    "name": "Service Module ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric service plan module ID to update, available from the uber.service_plan_module_list method"
                },
                {
                    "param": "module",
                    "name": "Module",
                    "required": false,
                    "default": null,
                    "description": "The machine name of the service module. Should be one of the service modules available from the method uber.service_module_list"
                },
                {
                    "param": "enabled",
                    "name": "Enabled",
                    "required": false,
                    "default": 1,
                    "description": "Whether the service module should be enabled or not.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "client_access",
                    "name": "Client Access",
                    "required": false,
                    "default": 0,
                    "description": "The client access level for this service module.\nOptions: 0 = No Access, 1 = View, 2 = Edit"
                },
                {
                    "param": "config",
                    "name": "Config",
                    "required": false,
                    "default": null,
                    "description": "An array of config items for the service module. Check uber.service_module_list for a full list of config options.\nFormat: config[name]=value"
                }
            ]
        },
        "service_plan_note_add": {
            "method": "uber.service_plan_note_add",
            "title": "Add a New Service Plan Note",
            "description": "This method is used to add a service plan note.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "note",
                    "name": "Note Text",
                    "required": true,
                    "default": null,
                    "description": "The note text."
                }
            ]
        },
        "service_plan_note_delete": {
            "method": "uber.service_plan_note_delete",
            "title": "Delete a Service Plan Note",
            "description": "This method is used to delete a service plan note.",
            "params": [
                {
                    "param": "note_id",
                    "name": "Note ID",
                    "required": true,
                    "default": null,
                    "description": "The note to delete."
                }
            ]
        },
        "service_plan_note_list": {
            "method": "uber.service_plan_note_list",
            "title": "List Service Plan Notes",
            "description": "This method is used to list a service plan's notes.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": "The numeric service plan ID from which to fetch the service plan notes"
                }
            ]
        },
        "service_plan_note_update": {
            "method": "uber.service_plan_note_update",
            "title": "Update a Service Plan Note",
            "description": "This method is used to update a service plan note.",
            "params": [
                {
                    "param": "note_id",
                    "name": "Note ID",
                    "required": true,
                    "default": null,
                    "description": "The note to update."
                },
                {
                    "param": "note",
                    "name": "Note Text",
                    "required": true,
                    "default": null,
                    "description": "The note text."
                }
            ]
        },
        "service_plan_update": {
            "method": "uber.service_plan_update",
            "title": "Edit Service Plan",
            "description": "This method is used to update an existing service plan.",
            "params": [
                {
                    "param": "plan_id",
                    "name": "Service Plan ID",
                    "required": true,
                    "default": null,
                    "description": "The service plan to update"
                },
                {
                    "param": "title",
                    "name": "Service Plan Title",
                    "required": false,
                    "default": null,
                    "description": "The title of the service plan. This will override i18n[lang_id][title], where lang_id is the default language ID."
                },
                {
                    "param": "code",
                    "name": "Service Plan Code",
                    "required": false,
                    "default": null,
                    "description": "The code of the service plan. Must be unique per brand."
                },
                {
                    "param": "category",
                    "name": "Category",
                    "required": false,
                    "default": null,
                    "description": "The service plan category. This will override i18n[lang_id][category], where lang_id is the default language ID."
                },
                {
                    "param": "api_include",
                    "name": "Include in API",
                    "required": false,
                    "default": 0,
                    "description": "Whether to include in the API output.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "allow_quotes",
                    "name": "Allow Quoting",
                    "required": false,
                    "default": 0,
                    "description": "Whether to allow admins to create quotes of this service plan for clients.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "qbaccount",
                    "name": "Quickbooks Account",
                    "required": false,
                    "default": null,
                    "description": "The QuickBooks account to link this service plan with"
                },
                {
                    "param": "period",
                    "name": "Default Billing Period",
                    "required": false,
                    "default": null,
                    "description": "An integer representing the default billing period. Options: \n  one_time = 0\n  monthly = 1\n  quarterly = 3\n  semi = 6\n  annual = 12"
                },
                {
                    "param": "setup_qs",
                    "name": "Setup Quantity Sensitive",
                    "required": false,
                    "default": 1,
                    "description": "Whether the setup fee is a multiplied by the quantity.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "bill_type",
                    "name": "Default Billing Type",
                    "required": false,
                    "default": 1,
                    "description": "Whether to bill by month or by period.\nOptions: 1 = By Month, 0 = By Period"
                },
                {
                    "param": "auto_charge",
                    "name": "Automatically Charge",
                    "required": false,
                    "default": 0,
                    "description": "Whether to automatically charge clients for this service.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "auto_prorate",
                    "name": "Automatically Prorate",
                    "required": false,
                    "default": 0,
                    "description": "Whether to automatically prorate to the service.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "post_renew",
                    "name": "Post Renew",
                    "required": false,
                    "default": 0,
                    "description": "Whether to bill in arrears for this service.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "bill_prior",
                    "name": "Bill in Advance",
                    "required": false,
                    "default": 0,
                    "description": "Whether to bill the service up to 31 days earlier based on the client's billing configuration.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "default_quantity",
                    "name": "Default Quantity",
                    "required": false,
                    "default": 1,
                    "description": "The default quantity when creating service packs"
                },
                {
                    "param": "auto_suspend",
                    "name": "Auto Suspend",
                    "required": false,
                    "default": null,
                    "description": "The number of days to wait before suspending the service for non-payment. Leave blank or 0 for disabled"
                },
                {
                    "param": "auto_cancel",
                    "name": "Auto Cancel",
                    "required": false,
                    "default": null,
                    "description": "The number of days to wait before canceling the service for non-payment. Leave blank or 0 for disabled"
                },
                {
                    "param": "hide_upgrades",
                    "name": "Hide Upgrades",
                    "required": false,
                    "default": 0,
                    "description": "Whether to hide upgrades from clients on their invoice and within Ubersmith.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "zero_invoice",
                    "name": "Invoice when Zero",
                    "required": false,
                    "default": 0,
                    "description": "Whether the service should be included on invoices when the cost is zero.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "welcome_send",
                    "name": "Send Welcome Letter",
                    "required": false,
                    "default": 0,
                    "description": "Whether to send a welcome letter to client on service pack creation.\nOptions: 1 = Yes, 0 = No"
                },
                {
                    "param": "welcome_email_from",
                    "name": "Welcome Letter From",
                    "required": false,
                    "default": null,
                    "description": "The email address that the welcome letter should come from"
                },
                {
                    "param": "welcome_subject",
                    "name": "Welcome Letter Subject",
                    "required": false,
                    "default": null,
                    "description": "The subject of the welcome letter email"
                },
                {
                    "param": "welcome_body",
                    "name": "Welcome Letter Body",
                    "required": false,
                    "default": null,
                    "description": "The body of the welcome letter email. Should be plain text, and allows for variable substitutions such as ##first_name##. Check Settings for the full list of valid variable substitutions."
                },
                {
                    "param": "tax_situs_code",
                    "name": "Tax Situs Rule Code (US/Canada)",
                    "required": false,
                    "default": null,
                    "description": "The Tax Situs rule code to use (US/Canada). Check the Tax Engine Options under Settings > Service Plans > {plan} to see a full list of rule codes."
                },
                {
                    "param": "tax_situs_code_world",
                    "name": "Tax Situs Rule Code (Non US/Canada)",
                    "required": false,
                    "default": null,
                    "description": "The Tax Situs rule code to use (Non US/Canada). Check the Tax Engine Options under Settings > Service Plans > {plan} to see a full list of rule codes."
                },
                {
                    "param": "tax_trans_type_code",
                    "name": "Tax Transaction Type Code",
                    "required": false,
                    "default": null,
                    "description": "The Tax Transaction type code to use. Check the Tax Engine Options under Settings > Service Plans > {plan} to see a full list of type codes."
                },
                {
                    "param": "pricing",
                    "name": "Pricing",
                    "required": false,
                    "default": null,
                    "description": "The pricing matrix.\nFormat:\n  pricing[period_id][type_method]=modifier_id\n  pricing[period_id][type]=value\n\nPeriod IDs can be brand specific or global.  The global options for \"period_id\" are: \n  0 = One Time Fee\n  1 = Monthly\n  3 = Quarterly\n  6 = Semi-Annually\n  12 = Annually\n\nOptions for \"type\": price_method, price, setup_method, setup, cost_method, cost, setup_cost_method, setup_cost\n\nOptions for \"modifier_id\": \n  0 = Inherit\n  1 = Override\n  2 = Modify By Amount\n  3 = Modify By Percent\n\nExample:\n  pricing[0][price_method]=0\n  pricing[0][price]=10.00\n  pricing[3][price_method]=1\n  pricing[3][price]=22.00"
                },
                {
                    "param": "taxes",
                    "name": "Taxes",
                    "required": false,
                    "default": null,
                    "description": "The tax rates to use for this service plan. Usable tax_id can be found in the Manage Tax Rates table. The value sets whether to apply the given tax rate to the fee type.\nFormat: taxes[service][{tax_id}]=1, taxes[setup][{tax_id}]=0\nAvailable Type: service, setup"
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this service plan. Substitute lang_id with the numeric language id.\nFormat: i18n[lang_id][title]=Colo\nAvailable Field: title, category, welcome_subject, welcome_body"
                }
            ]
        },
        "system_info": {
            "method": "uber.system_info",
            "title": "System Information",
            "description": "This method is used to list system information.",
            "params": []
        },
        "tax_authority_number_add": {
            "method": "uber.tax_authority_number_add",
            "title": "Add Tax Authority Number ",
            "description": "This method is used to add a tax authority number",
            "params": [
                {
                    "param": "tax_number_label",
                    "name": "Label",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "tax_number",
                    "name": "Tax Authority Number",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "show_on_invoice",
                    "name": "Show on Invoices",
                    "required": false,
                    "default": 1,
                    "description": "Options: 1 = Yes and 0 = No."
                }
            ]
        },
        "tax_authority_number_delete": {
            "method": "uber.tax_authority_number_delete",
            "title": "Delete Tax Authority Number ",
            "description": "This method is used to delete a tax authority number. The association related to any tax rate will also be removed",
            "params": [
                {
                    "param": "tax_number_id",
                    "name": "Tax Authority Number ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "tax_authority_number_list": {
            "method": "uber.tax_authority_number_list",
            "title": "List all Tax Authority Numbers associated with a brand",
            "description": "This method is used to list all tax authority numbers for a given brand.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        },
        "tax_authority_number_update": {
            "method": "uber.tax_authority_number_update",
            "title": "Update Tax Authority Number ",
            "description": "This method is used to update a tax authority number",
            "params": [
                {
                    "param": "tax_number_id",
                    "name": "Tax Authority Number ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "tax_number_label",
                    "name": "Label",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "tax_number",
                    "name": "Tax Authority Number",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "show_on_invoice",
                    "name": "Show on Invoices",
                    "required": false,
                    "default": null,
                    "description": "Options: 1 = Yes and 0 = No."
                }
            ]
        },
        "tax_engine_list": {
            "method": "uber.tax_engine_list",
            "title": "List Tax Engines",
            "description": "This method is used to list the configured tax engines.",
            "params": [
                {
                    "param": "type",
                    "name": "Type",
                    "required": false,
                    "default": null,
                    "description": "Tax engine type"
                },
                {
                    "param": "description",
                    "name": "Description",
                    "required": false,
                    "default": null,
                    "description": "Tax engine description"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": 1,
                    "description": "0 = Deactivated\n1 = Active, 2 = All"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "tax_exemption_type_get": {
            "method": "uber.tax_exemption_type_get",
            "title": "Get a Tax Exemption Type",
            "description": "This method is used to get a tax exemption type.",
            "params": [
                {
                    "param": "tax_exemption_type_id",
                    "name": "Tax Exemption Type ID",
                    "required": true,
                    "default": null,
                    "description": "Tax Exemption Type ID"
                }
            ]
        },
        "tax_exemption_type_list": {
            "method": "uber.tax_exemption_type_list",
            "title": "List Tax Exemption Types",
            "description": "This method is used to list tax exemption types.",
            "params": [
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": "Name"
                },
                {
                    "param": "code",
                    "name": "Ubersmith Code",
                    "required": false,
                    "default": null,
                    "description": "Internal Ubersmith Tax Exemption Code"
                },
                {
                    "param": "code_engine",
                    "name": "Tax Engine Code",
                    "required": false,
                    "default": null,
                    "description": "Tax Engine Exemption Code"
                },
                {
                    "param": "status",
                    "name": "Status",
                    "required": false,
                    "default": null,
                    "description": "0 = Deactivated\n1 = Active"
                },
                {
                    "param": "order_by",
                    "name": "Order By",
                    "required": false,
                    "default": null,
                    "description": "Field to order results by"
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "tax_rate_add": {
            "method": "uber.tax_rate_add",
            "title": "Add Tax Rate",
            "description": "This method is used to add a tax rate",
            "params": [
                {
                    "param": "name",
                    "name": "Name",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "code_engine",
                    "name": "Tax Engine Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "rate",
                    "name": "Tax Rate",
                    "required": true,
                    "default": null,
                    "description": "Indicates the tax rate as a decimal number. For instance, a tax rate of 5.25% should be sent as 0.0525. Ubersmith stores the rate with up to 8 decimal places and rounds it accordingly."
                },
                {
                    "param": "brand_id",
                    "name": "Brand ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "tax_number_ids",
                    "name": "Tax Numbers IDs",
                    "required": false,
                    "default": null,
                    "description": "An Array of Tax Authority Numbers ids that assosiated with tax rate(e.g. tax_number_ids[]=1&tax_number_ids[]=2)."
                },
                {
                    "param": "include_other",
                    "name": "Include other taxes",
                    "required": false,
                    "default": 0,
                    "description": "Options : 0 = Do not include taxable amounts from other taxes. <br /> 1 = Include taxable amounts from other taxes in the base taxable amount for this tax."
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this Custom Payment Type. Substitute lang_id with the numeric language id. Format: i18n[lang_id][name]=Colo Available Field: name"
                }
            ]
        },
        "tax_rate_get": {
            "method": "uber.tax_rate_get",
            "title": "Get Tax Rate Details",
            "description": "This method is used to get a tax rate's details",
            "params": [
                {
                    "param": "tax_id",
                    "name": "Tax id",
                    "required": true,
                    "default": null,
                    "description": "Tax id"
                }
            ]
        },
        "tax_rate_list": {
            "method": "uber.tax_rate_list",
            "title": "List Tax Rates",
            "description": "This method is used to list the tax rates in the system.",
            "params": [
                {
                    "param": "brand_id",
                    "name": "Brand id",
                    "required": false,
                    "default": null,
                    "description": "If no brand is specified, the default brand will be used."
                },
                {
                    "param": "ids",
                    "name": "list of id, eg: &ids[]=1&ids[]=5",
                    "required": false,
                    "default": null,
                    "description": "Specify a list of tax rates to be returned. Only the tax rates related to the brand will be returned."
                },
                {
                    "param": "active",
                    "name": "Active Flag",
                    "required": false,
                    "default": 2,
                    "description": "Specify whether to return only active, only inactive, or all taxes rates.\n\t\t\t0 = Inactive\n\t\t\t1 = Active\n\t\t\t2 = All"
                },
                {
                    "param": "order_by",
                    "name": "Order by",
                    "required": false,
                    "default": "tax_id",
                    "description": "Specify on what value the list will be ordered by.\n\t\t\tPossible values : \"tax_id\", \"name\", \"rate\" and \"active\""
                },
                {
                    "param": "direction",
                    "name": "Direction",
                    "required": false,
                    "default": "asc",
                    "description": "asc = Ascending Order\ndesc = Descending Order"
                },
                {
                    "param": "offset",
                    "name": "Offset",
                    "required": false,
                    "default": 0,
                    "description": "If specified, return records starting from this offset (0-based)."
                },
                {
                    "param": "limit",
                    "name": "Limit",
                    "required": false,
                    "default": null,
                    "description": "Maximum number of rows to return"
                }
            ]
        },
        "tax_rate_update": {
            "method": "uber.tax_rate_update",
            "title": "Edit Tax Rate Details",
            "description": "This method is used to edit a tax rate's details",
            "params": [
                {
                    "param": "tax_id",
                    "name": "Tax ID",
                    "required": true,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "name",
                    "name": "Name",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "code_engine",
                    "name": "Tax Engine Code",
                    "required": false,
                    "default": null,
                    "description": ""
                },
                {
                    "param": "rate",
                    "name": "Tax Rate",
                    "required": false,
                    "default": null,
                    "description": "Indicates the tax rate as a decimal number. For instance, a tax rate of 5.25% should be sent as 0.0525. Ubersmith stores the rate with up to 8 decimal places and rounds it accordingly."
                },
                {
                    "param": "tax_number_ids",
                    "name": "Tax Numbers IDs",
                    "required": false,
                    "default": null,
                    "description": "An Array of Tax Authority Numbers ids that assosiated with tax rate(e.g. tax_number_ids[]=1&tax_number_ids[]=2)."
                },
                {
                    "param": "include_other",
                    "name": "Include other taxes",
                    "required": false,
                    "default": null,
                    "description": "Options : 0 = Do not include taxable amounts from other taxes. <br /> 1 = Include taxable amounts from other taxes in the base taxable amount for this tax."
                },
                {
                    "param": "active",
                    "name": "Active",
                    "required": false,
                    "default": null,
                    "description": "Options: 1 = Active and 0 = Inactive."
                },
                {
                    "param": "i18n",
                    "name": "Internationalization",
                    "required": false,
                    "default": null,
                    "description": "The internationalized config for this Custom Payment Type. Substitute lang_id with the numeric language id. Format: i18n[lang_id][name]=Colo Available Field: name"
                }
            ]
        },
        "user_exists": {
            "method": "uber.user_exists",
            "title": "Check whether a Client Exists",
            "description": "This method is used to check if a given login name or client id corresponds to an existing client.",
            "params": [
                {
                    "param": "user_login",
                    "name": "Client Login",
                    "required": false,
                    "default": null,
                    "description": "The client account."
                }
            ]
        },
        "username_exists": {
            "method": "uber.username_exists",
            "title": "Check Whether a Username Exists",
            "description": "This method is used to check whether the specified username exists in the system.",
            "params": [
                {
                    "param": "username",
                    "name": "Username",
                    "required": true,
                    "default": null,
                    "description": ""
                }
            ]
        }
    }
}